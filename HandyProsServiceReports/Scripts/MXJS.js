(function (a, b) {
    function cy(a) { return f.isWindow(a) ? a : a.nodeType === 9 ? a.defaultView || a.parentWindow : !1 } function cv(a) { if (!ck[a]) { var b = c.body, d = f("<" + a + ">").appendTo(b), e = d.css("display"); d.remove(); if (e === "none" || e === "") { cl || (cl = c.createElement("iframe"), cl.frameBorder = cl.width = cl.height = 0), b.appendChild(cl); if (!cm || !cl.createElement) cm = (cl.contentWindow || cl.contentDocument).document, cm.write((c.compatMode === "CSS1Compat" ? "<!doctype html>" : "") + "<html><body>"), cm.close(); d = cm.createElement(a), cm.body.appendChild(d), e = f.css(d, "display"), b.removeChild(cl) } ck[a] = e } return ck[a] } function cu(a, b) { var c = {}; f.each(cq.concat.apply([], cq.slice(0, b)), function () { c[this] = a }); return c } function ct() { cr = b } function cs() { setTimeout(ct, 0); return cr = f.now() } function cj() { try { return new a.ActiveXObject("Microsoft.XMLHTTP") } catch (b) { } } function ci() { try { return new a.XMLHttpRequest } catch (b) { } } function cc(a, c) { a.dataFilter && (c = a.dataFilter(c, a.dataType)); var d = a.dataTypes, e = {}, g, h, i = d.length, j, k = d[0], l, m, n, o, p; for (g = 1; g < i; g++) { if (g === 1) for (h in a.converters) typeof h == "string" && (e[h.toLowerCase()] = a.converters[h]); l = k, k = d[g]; if (k === "*") k = l; else if (l !== "*" && l !== k) { m = l + " " + k, n = e[m] || e["* " + k]; if (!n) { p = b; for (o in e) { j = o.split(" "); if (j[0] === l || j[0] === "*") { p = e[j[1] + " " + k]; if (p) { o = e[o], o === !0 ? n = p : p === !0 && (n = o); break } } } } !n && !p && f.error("No conversion from " + m.replace(" ", " to ")), n !== !0 && (c = n ? n(c) : p(o(c))) } } return c } function cb(a, c, d) { var e = a.contents, f = a.dataTypes, g = a.responseFields, h, i, j, k; for (i in g) i in d && (c[g[i]] = d[i]); while (f[0] === "*") f.shift(), h === b && (h = a.mimeType || c.getResponseHeader("content-type")); if (h) for (i in e) if (e[i] && e[i].test(h)) { f.unshift(i); break } if (f[0] in d) j = f[0]; else { for (i in d) { if (!f[0] || a.converters[i + " " + f[0]]) { j = i; break } k || (k = i) } j = j || k } if (j) { j !== f[0] && f.unshift(j); return d[j] } } function ca(a, b, c, d) { if (f.isArray(b)) f.each(b, function (b, e) { c || bE.test(a) ? d(a, e) : ca(a + "[" + (typeof e == "object" || f.isArray(e) ? b : "") + "]", e, c, d) }); else if (!c && b != null && typeof b == "object") for (var e in b) ca(a + "[" + e + "]", b[e], c, d); else d(a, b) } function b_(a, c) { var d, e, g = f.ajaxSettings.flatOptions || {}; for (d in c) c[d] !== b && ((g[d] ? a : e || (e = {}))[d] = c[d]); e && f.extend(!0, a, e) } function b$(a, c, d, e, f, g) { f = f || c.dataTypes[0], g = g || {}, g[f] = !0; var h = a[f], i = 0, j = h ? h.length : 0, k = a === bT, l; for (; i < j && (k || !l); i++) l = h[i](c, d, e), typeof l == "string" && (!k || g[l] ? l = b : (c.dataTypes.unshift(l), l = b$(a, c, d, e, l, g))); (k || !l) && !g["*"] && (l = b$(a, c, d, e, "*", g)); return l } function bZ(a) { return function (b, c) { typeof b != "string" && (c = b, b = "*"); if (f.isFunction(c)) { var d = b.toLowerCase().split(bP), e = 0, g = d.length, h, i, j; for (; e < g; e++) h = d[e], j = /^\+/.test(h), j && (h = h.substr(1) || "*"), i = a[h] = a[h] || [], i[j ? "unshift" : "push"](c) } } } function bC(a, b, c) { var d = b === "width" ? a.offsetWidth : a.offsetHeight, e = b === "width" ? bx : by, g = 0, h = e.length; if (d > 0) { if (c !== "border") for (; g < h; g++) c || (d -= parseFloat(f.css(a, "padding" + e[g])) || 0), c === "margin" ? d += parseFloat(f.css(a, c + e[g])) || 0 : d -= parseFloat(f.css(a, "border" + e[g] + "Width")) || 0; return d + "px" } d = bz(a, b, b); if (d < 0 || d == null) d = a.style[b] || 0; d = parseFloat(d) || 0; if (c) for (; g < h; g++) d += parseFloat(f.css(a, "padding" + e[g])) || 0, c !== "padding" && (d += parseFloat(f.css(a, "border" + e[g] + "Width")) || 0), c === "margin" && (d += parseFloat(f.css(a, c + e[g])) || 0); return d + "px" } function bp(a, b) { b.src ? f.ajax({ url: b.src, async: !1, dataType: "script" }) : f.globalEval((b.text || b.textContent || b.innerHTML || "").replace(bf, "/*$0*/")), b.parentNode && b.parentNode.removeChild(b) } function bo(a) { var b = c.createElement("div"); bh.appendChild(b), b.innerHTML = a.outerHTML; return b.firstChild } function bn(a) { var b = (a.nodeName || "").toLowerCase(); b === "input" ? bm(a) : b !== "script" && typeof a.getElementsByTagName != "undefined" && f.grep(a.getElementsByTagName("input"), bm) } function bm(a) { if (a.type === "checkbox" || a.type === "radio") a.defaultChecked = a.checked } function bl(a) { return typeof a.getElementsByTagName != "undefined" ? a.getElementsByTagName("*") : typeof a.querySelectorAll != "undefined" ? a.querySelectorAll("*") : [] } function bk(a, b) { var c; if (b.nodeType === 1) { b.clearAttributes && b.clearAttributes(), b.mergeAttributes && b.mergeAttributes(a), c = b.nodeName.toLowerCase(); if (c === "object") b.outerHTML = a.outerHTML; else if (c !== "input" || a.type !== "checkbox" && a.type !== "radio") { if (c === "option") b.selected = a.defaultSelected; else if (c === "input" || c === "textarea") b.defaultValue = a.defaultValue } else a.checked && (b.defaultChecked = b.checked = a.checked), b.value !== a.value && (b.value = a.value); b.removeAttribute(f.expando) } } function bj(a, b) { if (b.nodeType === 1 && !!f.hasData(a)) { var c, d, e, g = f._data(a), h = f._data(b, g), i = g.events; if (i) { delete h.handle, h.events = {}; for (c in i) for (d = 0, e = i[c].length; d < e; d++) f.event.add(b, c + (i[c][d].namespace ? "." : "") + i[c][d].namespace, i[c][d], i[c][d].data) } h.data && (h.data = f.extend({}, h.data)) } } function bi(a, b) { return f.nodeName(a, "table") ? a.getElementsByTagName("tbody")[0] || a.appendChild(a.ownerDocument.createElement("tbody")) : a } function U(a) { var b = V.split("|"), c = a.createDocumentFragment(); if (c.createElement) while (b.length) c.createElement(b.pop()); return c } function T(a, b, c) { b = b || 0; if (f.isFunction(b)) return f.grep(a, function (a, d) { var e = !!b.call(a, d, a); return e === c }); if (b.nodeType) return f.grep(a, function (a, d) { return a === b === c }); if (typeof b == "string") { var d = f.grep(a, function (a) { return a.nodeType === 1 }); if (O.test(b)) return f.filter(b, d, !c); b = f.filter(b, d) } return f.grep(a, function (a, d) { return f.inArray(a, b) >= 0 === c }) } function S(a) { return !a || !a.parentNode || a.parentNode.nodeType === 11 } function K() { return !0 } function J() { return !1 } function n(a, b, c) { var d = b + "defer", e = b + "queue", g = b + "mark", h = f._data(a, d); h && (c === "queue" || !f._data(a, e)) && (c === "mark" || !f._data(a, g)) && setTimeout(function () { !f._data(a, e) && !f._data(a, g) && (f.removeData(a, d, !0), h.fire()) }, 0) } function m(a) { for (var b in a) { if (b === "data" && f.isEmptyObject(a[b])) continue; if (b !== "toJSON") return !1 } return !0 } function l(a, c, d) { if (d === b && a.nodeType === 1) { var e = "data-" + c.replace(k, "-$1").toLowerCase(); d = a.getAttribute(e); if (typeof d == "string") { try { d = d === "true" ? !0 : d === "false" ? !1 : d === "null" ? null : f.isNumeric(d) ? parseFloat(d) : j.test(d) ? f.parseJSON(d) : d } catch (g) { } f.data(a, c, d) } else d = b } return d } function h(a) { var b = g[a] = {}, c, d; a = a.split(/\s+/); for (c = 0, d = a.length; c < d; c++) b[a[c]] = !0; return b } var c = a.document, d = a.navigator, e = a.location, f = function () { function J() { if (!e.isReady) { try { c.documentElement.doScroll("left") } catch (a) { setTimeout(J, 1); return } e.ready() } } var e = function (a, b) { return new e.fn.init(a, b, h) }, f = a.jQuery, g = a.$, h, i = /^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/, j = /\S/, k = /^\s+/, l = /\s+$/, m = /^<(\w+)\s*\/?>(?:<\/\1>)?$/, n = /^[\],:{}\s]*$/, o = /\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, p = /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, q = /(?:^|:|,)(?:\s*\[)+/g, r = /(webkit)[ \/]([\w.]+)/, s = /(opera)(?:.*version)?[ \/]([\w.]+)/, t = /(msie) ([\w.]+)/, u = /(mozilla)(?:.*? rv:([\w.]+))?/, v = /-([a-z]|[0-9])/ig, w = /^-ms-/, x = function (a, b) { return (b + "").toUpperCase() }, y = d.userAgent, z, A, B, C = Object.prototype.toString, D = Object.prototype.hasOwnProperty, E = Array.prototype.push, F = Array.prototype.slice, G = String.prototype.trim, H = Array.prototype.indexOf, I = {}; e.fn = e.prototype = { constructor: e, init: function (a, d, f) { var g, h, j, k; if (!a) return this; if (a.nodeType) { this.context = this[0] = a, this.length = 1; return this } if (a === "body" && !d && c.body) { this.context = c, this[0] = c.body, this.selector = a, this.length = 1; return this } if (typeof a == "string") { a.charAt(0) !== "<" || a.charAt(a.length - 1) !== ">" || a.length < 3 ? g = i.exec(a) : g = [null, a, null]; if (g && (g[1] || !d)) { if (g[1]) { d = d instanceof e ? d[0] : d, k = d ? d.ownerDocument || d : c, j = m.exec(a), j ? e.isPlainObject(d) ? (a = [c.createElement(j[1])], e.fn.attr.call(a, d, !0)) : a = [k.createElement(j[1])] : (j = e.buildFragment([g[1]], [k]), a = (j.cacheable ? e.clone(j.fragment) : j.fragment).childNodes); return e.merge(this, a) } h = c.getElementById(g[2]); if (h && h.parentNode) { if (h.id !== g[2]) return f.find(a); this.length = 1, this[0] = h } this.context = c, this.selector = a; return this } return !d || d.jquery ? (d || f).find(a) : this.constructor(d).find(a) } if (e.isFunction(a)) return f.ready(a); a.selector !== b && (this.selector = a.selector, this.context = a.context); return e.makeArray(a, this) }, selector: "", jquery: "1.7.1", length: 0, size: function () { return this.length }, toArray: function () { return F.call(this, 0) }, get: function (a) { return a == null ? this.toArray() : a < 0 ? this[this.length + a] : this[a] }, pushStack: function (a, b, c) { var d = this.constructor(); e.isArray(a) ? E.apply(d, a) : e.merge(d, a), d.prevObject = this, d.context = this.context, b === "find" ? d.selector = this.selector + (this.selector ? " " : "") + c : b && (d.selector = this.selector + "." + b + "(" + c + ")"); return d }, each: function (a, b) { return e.each(this, a, b) }, ready: function (a) { e.bindReady(), A.add(a); return this }, eq: function (a) { a = +a; return a === -1 ? this.slice(a) : this.slice(a, a + 1) }, first: function () { return this.eq(0) }, last: function () { return this.eq(-1) }, slice: function () { return this.pushStack(F.apply(this, arguments), "slice", F.call(arguments).join(",")) }, map: function (a) { return this.pushStack(e.map(this, function (b, c) { return a.call(b, c, b) })) }, end: function () { return this.prevObject || this.constructor(null) }, push: E, sort: [].sort, splice: [].splice }, e.fn.init.prototype = e.fn, e.extend = e.fn.extend = function () { var a, c, d, f, g, h, i = arguments[0] || {}, j = 1, k = arguments.length, l = !1; typeof i == "boolean" && (l = i, i = arguments[1] || {}, j = 2), typeof i != "object" && !e.isFunction(i) && (i = {}), k === j && (i = this, --j); for (; j < k; j++) if ((a = arguments[j]) != null) for (c in a) { d = i[c], f = a[c]; if (i === f) continue; l && f && (e.isPlainObject(f) || (g = e.isArray(f))) ? (g ? (g = !1, h = d && e.isArray(d) ? d : []) : h = d && e.isPlainObject(d) ? d : {}, i[c] = e.extend(l, h, f)) : f !== b && (i[c] = f) } return i }, e.extend({ noConflict: function (b) { a.$ === e && (a.$ = g), b && a.jQuery === e && (a.jQuery = f); return e }, isReady: !1, readyWait: 1, holdReady: function (a) { a ? e.readyWait++ : e.ready(!0) }, ready: function (a) { if (a === !0 && ! --e.readyWait || a !== !0 && !e.isReady) { if (!c.body) return setTimeout(e.ready, 1); e.isReady = !0; if (a !== !0 && --e.readyWait > 0) return; A.fireWith(c, [e]), e.fn.trigger && e(c).trigger("ready").off("ready") } }, bindReady: function () { if (!A) { A = e.Callbacks("once memory"); if (c.readyState === "complete") return setTimeout(e.ready, 1); if (c.addEventListener) c.addEventListener("DOMContentLoaded", B, !1), a.addEventListener("load", e.ready, !1); else if (c.attachEvent) { c.attachEvent("onreadystatechange", B), a.attachEvent("onload", e.ready); var b = !1; try { b = a.frameElement == null } catch (d) { } c.documentElement.doScroll && b && J() } } }, isFunction: function (a) { return e.type(a) === "function" }, isArray: Array.isArray || function (a) { return e.type(a) === "array" }, isWindow: function (a) { return a && typeof a == "object" && "setInterval" in a }, isNumeric: function (a) { return !isNaN(parseFloat(a)) && isFinite(a) }, type: function (a) { return a == null ? String(a) : I[C.call(a)] || "object" }, isPlainObject: function (a) { if (!a || e.type(a) !== "object" || a.nodeType || e.isWindow(a)) return !1; try { if (a.constructor && !D.call(a, "constructor") && !D.call(a.constructor.prototype, "isPrototypeOf")) return !1 } catch (c) { return !1 } var d; for (d in a); return d === b || D.call(a, d) }, isEmptyObject: function (a) { for (var b in a) return !1; return !0 }, error: function (a) { throw new Error(a) }, parseJSON: function (b) { if (typeof b != "string" || !b) return null; b = e.trim(b); if (a.JSON && a.JSON.parse) return a.JSON.parse(b); if (n.test(b.replace(o, "@").replace(p, "]").replace(q, ""))) return (new Function("return " + b))(); e.error("Invalid JSON: " + b) }, parseXML: function (c) { var d, f; try { a.DOMParser ? (f = new DOMParser, d = f.parseFromString(c, "text/xml")) : (d = new ActiveXObject("Microsoft.XMLDOM"), d.async = "false", d.loadXML(c)) } catch (g) { d = b } (!d || !d.documentElement || d.getElementsByTagName("parsererror").length) && e.error("Invalid XML: " + c); return d }, noop: function () { }, globalEval: function (b) { b && j.test(b) && (a.execScript || function (b) { a.eval.call(a, b) })(b) }, camelCase: function (a) { return a.replace(w, "ms-").replace(v, x) }, nodeName: function (a, b) { return a.nodeName && a.nodeName.toUpperCase() === b.toUpperCase() }, each: function (a, c, d) { var f, g = 0, h = a.length, i = h === b || e.isFunction(a); if (d) { if (i) { for (f in a) if (c.apply(a[f], d) === !1) break } else for (; g < h; ) if (c.apply(a[g++], d) === !1) break } else if (i) { for (f in a) if (c.call(a[f], f, a[f]) === !1) break } else for (; g < h; ) if (c.call(a[g], g, a[g++]) === !1) break; return a }, trim: G ? function (a) { return a == null ? "" : G.call(a) } : function (a) { return a == null ? "" : (a + "").replace(k, "").replace(l, "") }, makeArray: function (a, b) { var c = b || []; if (a != null) { var d = e.type(a); a.length == null || d === "string" || d === "function" || d === "regexp" || e.isWindow(a) ? E.call(c, a) : e.merge(c, a) } return c }, inArray: function (a, b, c) { var d; if (b) { if (H) return H.call(b, a, c); d = b.length, c = c ? c < 0 ? Math.max(0, d + c) : c : 0; for (; c < d; c++) if (c in b && b[c] === a) return c } return -1 }, merge: function (a, c) { var d = a.length, e = 0; if (typeof c.length == "number") for (var f = c.length; e < f; e++) a[d++] = c[e]; else while (c[e] !== b) a[d++] = c[e++]; a.length = d; return a }, grep: function (a, b, c) { var d = [], e; c = !!c; for (var f = 0, g = a.length; f < g; f++) e = !!b(a[f], f), c !== e && d.push(a[f]); return d }, map: function (a, c, d) { var f, g, h = [], i = 0, j = a.length, k = a instanceof e || j !== b && typeof j == "number" && (j > 0 && a[0] && a[j - 1] || j === 0 || e.isArray(a)); if (k) for (; i < j; i++) f = c(a[i], i, d), f != null && (h[h.length] = f); else for (g in a) f = c(a[g], g, d), f != null && (h[h.length] = f); return h.concat.apply([], h) }, guid: 1, proxy: function (a, c) { if (typeof c == "string") { var d = a[c]; c = a, a = d } if (!e.isFunction(a)) return b; var f = F.call(arguments, 2), g = function () { return a.apply(c, f.concat(F.call(arguments))) }; g.guid = a.guid = a.guid || g.guid || e.guid++; return g }, access: function (a, c, d, f, g, h) { var i = a.length; if (typeof c == "object") { for (var j in c) e.access(a, j, c[j], f, g, d); return a } if (d !== b) { f = !h && f && e.isFunction(d); for (var k = 0; k < i; k++) g(a[k], c, f ? d.call(a[k], k, g(a[k], c)) : d, h); return a } return i ? g(a[0], c) : b }, now: function () { return (new Date).getTime() }, uaMatch: function (a) { a = a.toLowerCase(); var b = r.exec(a) || s.exec(a) || t.exec(a) || a.indexOf("compatible") < 0 && u.exec(a) || []; return { browser: b[1] || "", version: b[2] || "0"} }, sub: function () { function a(b, c) { return new a.fn.init(b, c) } e.extend(!0, a, this), a.superclass = this, a.fn = a.prototype = this(), a.fn.constructor = a, a.sub = this.sub, a.fn.init = function (d, f) { f && f instanceof e && !(f instanceof a) && (f = a(f)); return e.fn.init.call(this, d, f, b) }, a.fn.init.prototype = a.fn; var b = a(c); return a }, browser: {} }), e.each("Boolean Number String Function Array Date RegExp Object".split(" "), function (a, b) { I["[object " + b + "]"] = b.toLowerCase() }), z = e.uaMatch(y), z.browser && (e.browser[z.browser] = !0, e.browser.version = z.version), e.browser.webkit && (e.browser.safari = !0), j.test(" ") && (k = /^[\s\xA0]+/, l = /[\s\xA0]+$/), h = e(c), c.addEventListener ? B = function () { c.removeEventListener("DOMContentLoaded", B, !1), e.ready() } : c.attachEvent && (B = function () { c.readyState === "complete" && (c.detachEvent("onreadystatechange", B), e.ready()) }); return e } (), g = {}; f.Callbacks = function (a) { a = a ? g[a] || h(a) : {}; var c = [], d = [], e, i, j, k, l, m = function (b) { var d, e, g, h, i; for (d = 0, e = b.length; d < e; d++) g = b[d], h = f.type(g), h === "array" ? m(g) : h === "function" && (!a.unique || !o.has(g)) && c.push(g) }, n = function (b, f) { f = f || [], e = !a.memory || [b, f], i = !0, l = j || 0, j = 0, k = c.length; for (; c && l < k; l++) if (c[l].apply(b, f) === !1 && a.stopOnFalse) { e = !0; break } i = !1, c && (a.once ? e === !0 ? o.disable() : c = [] : d && d.length && (e = d.shift(), o.fireWith(e[0], e[1]))) }, o = { add: function () { if (c) { var a = c.length; m(arguments), i ? k = c.length : e && e !== !0 && (j = a, n(e[0], e[1])) } return this }, remove: function () { if (c) { var b = arguments, d = 0, e = b.length; for (; d < e; d++) for (var f = 0; f < c.length; f++) if (b[d] === c[f]) { i && f <= k && (k--, f <= l && l--), c.splice(f--, 1); if (a.unique) break } } return this }, has: function (a) { if (c) { var b = 0, d = c.length; for (; b < d; b++) if (a === c[b]) return !0 } return !1 }, empty: function () { c = []; return this }, disable: function () { c = d = e = b; return this }, disabled: function () { return !c }, lock: function () { d = b, (!e || e === !0) && o.disable(); return this }, locked: function () { return !d }, fireWith: function (b, c) { d && (i ? a.once || d.push([b, c]) : (!a.once || !e) && n(b, c)); return this }, fire: function () { o.fireWith(this, arguments); return this }, fired: function () { return !!e } }; return o }; var i = [].slice; f.extend({ Deferred: function (a) { var b = f.Callbacks("once memory"), c = f.Callbacks("once memory"), d = f.Callbacks("memory"), e = "pending", g = { resolve: b, reject: c, notify: d }, h = { done: b.add, fail: c.add, progress: d.add, state: function () { return e }, isResolved: b.fired, isRejected: c.fired, then: function (a, b, c) { i.done(a).fail(b).progress(c); return this }, always: function () { i.done.apply(i, arguments).fail.apply(i, arguments); return this }, pipe: function (a, b, c) { return f.Deferred(function (d) { f.each({ done: [a, "resolve"], fail: [b, "reject"], progress: [c, "notify"] }, function (a, b) { var c = b[0], e = b[1], g; f.isFunction(c) ? i[a](function () { g = c.apply(this, arguments), g && f.isFunction(g.promise) ? g.promise().then(d.resolve, d.reject, d.notify) : d[e + "With"](this === i ? d : this, [g]) }) : i[a](d[e]) }) }).promise() }, promise: function (a) { if (a == null) a = h; else for (var b in h) a[b] = h[b]; return a } }, i = h.promise({}), j; for (j in g) i[j] = g[j].fire, i[j + "With"] = g[j].fireWith; i.done(function () { e = "resolved" }, c.disable, d.lock).fail(function () { e = "rejected" }, b.disable, d.lock), a && a.call(i, i); return i }, when: function (a) { function m(a) { return function (b) { e[a] = arguments.length > 1 ? i.call(arguments, 0) : b, j.notifyWith(k, e) } } function l(a) { return function (c) { b[a] = arguments.length > 1 ? i.call(arguments, 0) : c, --g || j.resolveWith(j, b) } } var b = i.call(arguments, 0), c = 0, d = b.length, e = Array(d), g = d, h = d, j = d <= 1 && a && f.isFunction(a.promise) ? a : f.Deferred(), k = j.promise(); if (d > 1) { for (; c < d; c++) b[c] && b[c].promise && f.isFunction(b[c].promise) ? b[c].promise().then(l(c), j.reject, m(c)) : --g; g || j.resolveWith(j, b) } else j !== a && j.resolveWith(j, d ? [a] : []); return k } }), f.support = function () { var b, d, e, g, h, i, j, k, l, m, n, o, p, q = c.createElement("div"), r = c.documentElement; q.setAttribute("className", "t"), q.innerHTML = "   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>", d = q.getElementsByTagName("*"), e = q.getElementsByTagName("a")[0]; if (!d || !d.length || !e) return {}; g = c.createElement("select"), h = g.appendChild(c.createElement("option")), i = q.getElementsByTagName("input")[0], b = { leadingWhitespace: q.firstChild.nodeType === 3, tbody: !q.getElementsByTagName("tbody").length, htmlSerialize: !!q.getElementsByTagName("link").length, style: /top/.test(e.getAttribute("style")), hrefNormalized: e.getAttribute("href") === "/a", opacity: /^0.55/.test(e.style.opacity), cssFloat: !!e.style.cssFloat, checkOn: i.value === "on", optSelected: h.selected, getSetAttribute: q.className !== "t", enctype: !!c.createElement("form").enctype, html5Clone: c.createElement("nav").cloneNode(!0).outerHTML !== "<:nav></:nav>", submitBubbles: !0, changeBubbles: !0, focusinBubbles: !1, deleteExpando: !0, noCloneEvent: !0, inlineBlockNeedsLayout: !1, shrinkWrapBlocks: !1, reliableMarginRight: !0 }, i.checked = !0, b.noCloneChecked = i.cloneNode(!0).checked, g.disabled = !0, b.optDisabled = !h.disabled; try { delete q.test } catch (s) { b.deleteExpando = !1 } !q.addEventListener && q.attachEvent && q.fireEvent && (q.attachEvent("onclick", function () { b.noCloneEvent = !1 }), q.cloneNode(!0).fireEvent("onclick")), i = c.createElement("input"), i.value = "t", i.setAttribute("type", "radio"), b.radioValue = i.value === "t", i.setAttribute("checked", "checked"), q.appendChild(i), k = c.createDocumentFragment(), k.appendChild(q.lastChild), b.checkClone = k.cloneNode(!0).cloneNode(!0).lastChild.checked, b.appendChecked = i.checked, k.removeChild(i), k.appendChild(q), q.innerHTML = "", a.getComputedStyle && (j = c.createElement("div"), j.style.width = "0", j.style.marginRight = "0", q.style.width = "2px", q.appendChild(j), b.reliableMarginRight = (parseInt((a.getComputedStyle(j, null) || { marginRight: 0 }).marginRight, 10) || 0) === 0); if (q.attachEvent) for (o in { submit: 1, change: 1, focusin: 1 }) n = "on" + o, p = n in q, p || (q.setAttribute(n, "return;"), p = typeof q[n] == "function"), b[o + "Bubbles"] = p; k.removeChild(q), k = g = h = j = q = i = null, f(function () { var a, d, e, g, h, i, j, k, m, n, o, r = c.getElementsByTagName("body")[0]; !r || (j = 1, k = "position:absolute;top:0;left:0;width:1px;height:1px;margin:0;", m = "visibility:hidden;border:0;", n = "style='" + k + "border:5px solid #000;padding:0;'", o = "<div " + n + "><div></div></div>" + "<table " + n + " cellpadding='0' cellspacing='0'>" + "<tr><td></td></tr></table>", a = c.createElement("div"), a.style.cssText = m + "width:0;height:0;position:static;top:0;margin-top:" + j + "px", r.insertBefore(a, r.firstChild), q = c.createElement("div"), a.appendChild(q), q.innerHTML = "<table><tr><td style='padding:0;border:0;display:none'></td><td>t</td></tr></table>", l = q.getElementsByTagName("td"), p = l[0].offsetHeight === 0, l[0].style.display = "", l[1].style.display = "none", b.reliableHiddenOffsets = p && l[0].offsetHeight === 0, q.innerHTML = "", q.style.width = q.style.paddingLeft = "1px", f.boxModel = b.boxModel = q.offsetWidth === 2, typeof q.style.zoom != "undefined" && (q.style.display = "inline", q.style.zoom = 1, b.inlineBlockNeedsLayout = q.offsetWidth === 2, q.style.display = "", q.innerHTML = "<div style='width:4px;'></div>", b.shrinkWrapBlocks = q.offsetWidth !== 2), q.style.cssText = k + m, q.innerHTML = o, d = q.firstChild, e = d.firstChild, h = d.nextSibling.firstChild.firstChild, i = { doesNotAddBorder: e.offsetTop !== 5, doesAddBorderForTableAndCells: h.offsetTop === 5 }, e.style.position = "fixed", e.style.top = "20px", i.fixedPosition = e.offsetTop === 20 || e.offsetTop === 15, e.style.position = e.style.top = "", d.style.overflow = "hidden", d.style.position = "relative", i.subtractsBorderForOverflowNotVisible = e.offsetTop === -5, i.doesNotIncludeMarginInBodyOffset = r.offsetTop !== j, r.removeChild(a), q = a = null, f.extend(b, i)) }); return b } (); var j = /^(?:\{.*\}|\[.*\])$/, k = /([A-Z])/g; f.extend({ cache: {}, uuid: 0, expando: "jQuery" + (f.fn.jquery + Math.random()).replace(/\D/g, ""), noData: { embed: !0, object: "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000", applet: !0 }, hasData: function (a) { a = a.nodeType ? f.cache[a[f.expando]] : a[f.expando]; return !!a && !m(a) }, data: function (a, c, d, e) { if (!!f.acceptData(a)) { var g, h, i, j = f.expando, k = typeof c == "string", l = a.nodeType, m = l ? f.cache : a, n = l ? a[j] : a[j] && j, o = c === "events"; if ((!n || !m[n] || !o && !e && !m[n].data) && k && d === b) return; n || (l ? a[j] = n = ++f.uuid : n = j), m[n] || (m[n] = {}, l || (m[n].toJSON = f.noop)); if (typeof c == "object" || typeof c == "function") e ? m[n] = f.extend(m[n], c) : m[n].data = f.extend(m[n].data, c); g = h = m[n], e || (h.data || (h.data = {}), h = h.data), d !== b && (h[f.camelCase(c)] = d); if (o && !h[c]) return g.events; k ? (i = h[c], i == null && (i = h[f.camelCase(c)])) : i = h; return i } }, removeData: function (a, b, c) { if (!!f.acceptData(a)) { var d, e, g, h = f.expando, i = a.nodeType, j = i ? f.cache : a, k = i ? a[h] : h; if (!j[k]) return; if (b) { d = c ? j[k] : j[k].data; if (d) { f.isArray(b) || (b in d ? b = [b] : (b = f.camelCase(b), b in d ? b = [b] : b = b.split(" "))); for (e = 0, g = b.length; e < g; e++) delete d[b[e]]; if (!(c ? m : f.isEmptyObject)(d)) return } } if (!c) { delete j[k].data; if (!m(j[k])) return } f.support.deleteExpando || !j.setInterval ? delete j[k] : j[k] = null, i && (f.support.deleteExpando ? delete a[h] : a.removeAttribute ? a.removeAttribute(h) : a[h] = null) } }, _data: function (a, b, c) { return f.data(a, b, c, !0) }, acceptData: function (a) { if (a.nodeName) { var b = f.noData[a.nodeName.toLowerCase()]; if (b) return b !== !0 && a.getAttribute("classid") === b } return !0 } }), f.fn.extend({ data: function (a, c) { var d, e, g, h = null; if (typeof a == "undefined") { if (this.length) { h = f.data(this[0]); if (this[0].nodeType === 1 && !f._data(this[0], "parsedAttrs")) { e = this[0].attributes; for (var i = 0, j = e.length; i < j; i++) g = e[i].name, g.indexOf("data-") === 0 && (g = f.camelCase(g.substring(5)), l(this[0], g, h[g])); f._data(this[0], "parsedAttrs", !0) } } return h } if (typeof a == "object") return this.each(function () { f.data(this, a) }); d = a.split("."), d[1] = d[1] ? "." + d[1] : ""; if (c === b) { h = this.triggerHandler("getData" + d[1] + "!", [d[0]]), h === b && this.length && (h = f.data(this[0], a), h = l(this[0], a, h)); return h === b && d[1] ? this.data(d[0]) : h } return this.each(function () { var b = f(this), e = [d[0], c]; b.triggerHandler("setData" + d[1] + "!", e), f.data(this, a, c), b.triggerHandler("changeData" + d[1] + "!", e) }) }, removeData: function (a) { return this.each(function () { f.removeData(this, a) }) } }), f.extend({ _mark: function (a, b) { a && (b = (b || "fx") + "mark", f._data(a, b, (f._data(a, b) || 0) + 1)) }, _unmark: function (a, b, c) { a !== !0 && (c = b, b = a, a = !1); if (b) { c = c || "fx"; var d = c + "mark", e = a ? 0 : (f._data(b, d) || 1) - 1; e ? f._data(b, d, e) : (f.removeData(b, d, !0), n(b, c, "mark")) } }, queue: function (a, b, c) { var d; if (a) { b = (b || "fx") + "queue", d = f._data(a, b), c && (!d || f.isArray(c) ? d = f._data(a, b, f.makeArray(c)) : d.push(c)); return d || [] } }, dequeue: function (a, b) { b = b || "fx"; var c = f.queue(a, b), d = c.shift(), e = {}; d === "inprogress" && (d = c.shift()), d && (b === "fx" && c.unshift("inprogress"), f._data(a, b + ".run", e), d.call(a, function () { f.dequeue(a, b) }, e)), c.length || (f.removeData(a, b + "queue " + b + ".run", !0), n(a, b, "queue")) } }), f.fn.extend({ queue: function (a, c) { typeof a != "string" && (c = a, a = "fx"); if (c === b) return f.queue(this[0], a); return this.each(function () { var b = f.queue(this, a, c); a === "fx" && b[0] !== "inprogress" && f.dequeue(this, a) }) }, dequeue: function (a) { return this.each(function () { f.dequeue(this, a) }) }, delay: function (a, b) { a = f.fx ? f.fx.speeds[a] || a : a, b = b || "fx"; return this.queue(b, function (b, c) { var d = setTimeout(b, a); c.stop = function () { clearTimeout(d) } }) }, clearQueue: function (a) { return this.queue(a || "fx", []) }, promise: function (a, c) { function m() { --h || d.resolveWith(e, [e]) } typeof a != "string" && (c = a, a = b), a = a || "fx"; var d = f.Deferred(), e = this, g = e.length, h = 1, i = a + "defer", j = a + "queue", k = a + "mark", l; while (g--) if (l = f.data(e[g], i, b, !0) || (f.data(e[g], j, b, !0) || f.data(e[g], k, b, !0)) && f.data(e[g], i, f.Callbacks("once memory"), !0)) h++, l.add(m); m(); return d.promise() } }); var o = /[\n\t\r]/g, p = /\s+/, q = /\r/g, r = /^(?:button|input)$/i, s = /^(?:button|input|object|select|textarea)$/i, t = /^a(?:rea)?$/i, u = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i, v = f.support.getSetAttribute, w, x, y; f.fn.extend({ attr: function (a, b) { return f.access(this, a, b, !0, f.attr) }, removeAttr: function (a) { return this.each(function () { f.removeAttr(this, a) }) }, prop: function (a, b) { return f.access(this, a, b, !0, f.prop) }, removeProp: function (a) { a = f.propFix[a] || a; return this.each(function () { try { this[a] = b, delete this[a] } catch (c) { } }) }, addClass: function (a) { var b, c, d, e, g, h, i; if (f.isFunction(a)) return this.each(function (b) { f(this).addClass(a.call(this, b, this.className)) }); if (a && typeof a == "string") { b = a.split(p); for (c = 0, d = this.length; c < d; c++) { e = this[c]; if (e.nodeType === 1) if (!e.className && b.length === 1) e.className = a; else { g = " " + e.className + " "; for (h = 0, i = b.length; h < i; h++) ~g.indexOf(" " + b[h] + " ") || (g += b[h] + " "); e.className = f.trim(g) } } } return this }, removeClass: function (a) { var c, d, e, g, h, i, j; if (f.isFunction(a)) return this.each(function (b) { f(this).removeClass(a.call(this, b, this.className)) }); if (a && typeof a == "string" || a === b) { c = (a || "").split(p); for (d = 0, e = this.length; d < e; d++) { g = this[d]; if (g.nodeType === 1 && g.className) if (a) { h = (" " + g.className + " ").replace(o, " "); for (i = 0, j = c.length; i < j; i++) h = h.replace(" " + c[i] + " ", " "); g.className = f.trim(h) } else g.className = "" } } return this }, toggleClass: function (a, b) { var c = typeof a, d = typeof b == "boolean"; if (f.isFunction(a)) return this.each(function (c) { f(this).toggleClass(a.call(this, c, this.className, b), b) }); return this.each(function () { if (c === "string") { var e, g = 0, h = f(this), i = b, j = a.split(p); while (e = j[g++]) i = d ? i : !h.hasClass(e), h[i ? "addClass" : "removeClass"](e) } else if (c === "undefined" || c === "boolean") this.className && f._data(this, "__className__", this.className), this.className = this.className || a === !1 ? "" : f._data(this, "__className__") || "" }) }, hasClass: function (a) { var b = " " + a + " ", c = 0, d = this.length; for (; c < d; c++) if (this[c].nodeType === 1 && (" " + this[c].className + " ").replace(o, " ").indexOf(b) > -1) return !0; return !1 }, val: function (a) { var c, d, e, g = this[0]; { if (!!arguments.length) { e = f.isFunction(a); return this.each(function (d) { var g = f(this), h; if (this.nodeType === 1) { e ? h = a.call(this, d, g.val()) : h = a, h == null ? h = "" : typeof h == "number" ? h += "" : f.isArray(h) && (h = f.map(h, function (a) { return a == null ? "" : a + "" })), c = f.valHooks[this.nodeName.toLowerCase()] || f.valHooks[this.type]; if (!c || !("set" in c) || c.set(this, h, "value") === b) this.value = h } }) } if (g) { c = f.valHooks[g.nodeName.toLowerCase()] || f.valHooks[g.type]; if (c && "get" in c && (d = c.get(g, "value")) !== b) return d; d = g.value; return typeof d == "string" ? d.replace(q, "") : d == null ? "" : d } } } }), f.extend({ valHooks: { option: { get: function (a) { var b = a.attributes.value; return !b || b.specified ? a.value : a.text } }, select: { get: function (a) { var b, c, d, e, g = a.selectedIndex, h = [], i = a.options, j = a.type === "select-one"; if (g < 0) return null; c = j ? g : 0, d = j ? g + 1 : i.length; for (; c < d; c++) { e = i[c]; if (e.selected && (f.support.optDisabled ? !e.disabled : e.getAttribute("disabled") === null) && (!e.parentNode.disabled || !f.nodeName(e.parentNode, "optgroup"))) { b = f(e).val(); if (j) return b; h.push(b) } } if (j && !h.length && i.length) return f(i[g]).val(); return h }, set: function (a, b) { var c = f.makeArray(b); f(a).find("option").each(function () { this.selected = f.inArray(f(this).val(), c) >= 0 }), c.length || (a.selectedIndex = -1); return c } } }, attrFn: { val: !0, css: !0, html: !0, text: !0, data: !0, width: !0, height: !0, offset: !0 }, attr: function (a, c, d, e) { var g, h, i, j = a.nodeType; if (!!a && j !== 3 && j !== 8 && j !== 2) { if (e && c in f.attrFn) return f(a)[c](d); if (typeof a.getAttribute == "undefined") return f.prop(a, c, d); i = j !== 1 || !f.isXMLDoc(a), i && (c = c.toLowerCase(), h = f.attrHooks[c] || (u.test(c) ? x : w)); if (d !== b) { if (d === null) { f.removeAttr(a, c); return } if (h && "set" in h && i && (g = h.set(a, d, c)) !== b) return g; a.setAttribute(c, "" + d); return d } if (h && "get" in h && i && (g = h.get(a, c)) !== null) return g; g = a.getAttribute(c); return g === null ? b : g } }, removeAttr: function (a, b) { var c, d, e, g, h = 0; if (b && a.nodeType === 1) { d = b.toLowerCase().split(p), g = d.length; for (; h < g; h++) e = d[h], e && (c = f.propFix[e] || e, f.attr(a, e, ""), a.removeAttribute(v ? e : c), u.test(e) && c in a && (a[c] = !1)) } }, attrHooks: { type: { set: function (a, b) { if (r.test(a.nodeName) && a.parentNode) f.error("type property can't be changed"); else if (!f.support.radioValue && b === "radio" && f.nodeName(a, "input")) { var c = a.value; a.setAttribute("type", b), c && (a.value = c); return b } } }, value: { get: function (a, b) { if (w && f.nodeName(a, "button")) return w.get(a, b); return b in a ? a.value : null }, set: function (a, b, c) { if (w && f.nodeName(a, "button")) return w.set(a, b, c); a.value = b } } }, propFix: { tabindex: "tabIndex", readonly: "readOnly", "for": "htmlFor", "class": "className", maxlength: "maxLength", cellspacing: "cellSpacing", cellpadding: "cellPadding", rowspan: "rowSpan", colspan: "colSpan", usemap: "useMap", frameborder: "frameBorder", contenteditable: "contentEditable" }, prop: function (a, c, d) { var e, g, h, i = a.nodeType; if (!!a && i !== 3 && i !== 8 && i !== 2) { h = i !== 1 || !f.isXMLDoc(a), h && (c = f.propFix[c] || c, g = f.propHooks[c]); return d !== b ? g && "set" in g && (e = g.set(a, d, c)) !== b ? e : a[c] = d : g && "get" in g && (e = g.get(a, c)) !== null ? e : a[c] } }, propHooks: { tabIndex: { get: function (a) { var c = a.getAttributeNode("tabindex"); return c && c.specified ? parseInt(c.value, 10) : s.test(a.nodeName) || t.test(a.nodeName) && a.href ? 0 : b } }} }), f.attrHooks.tabindex = f.propHooks.tabIndex, x = { get: function (a, c) { var d, e = f.prop(a, c); return e === !0 || typeof e != "boolean" && (d = a.getAttributeNode(c)) && d.nodeValue !== !1 ? c.toLowerCase() : b }, set: function (a, b, c) { var d; b === !1 ? f.removeAttr(a, c) : (d = f.propFix[c] || c, d in a && (a[d] = !0), a.setAttribute(c, c.toLowerCase())); return c } }, v || (y = { name: !0, id: !0 }, w = f.valHooks.button = { get: function (a, c) { var d; d = a.getAttributeNode(c); return d && (y[c] ? d.nodeValue !== "" : d.specified) ? d.nodeValue : b }, set: function (a, b, d) { var e = a.getAttributeNode(d); e || (e = c.createAttribute(d), a.setAttributeNode(e)); return e.nodeValue = b + "" } }, f.attrHooks.tabindex.set = w.set, f.each(["width", "height"], function (a, b) { f.attrHooks[b] = f.extend(f.attrHooks[b], { set: function (a, c) { if (c === "") { a.setAttribute(b, "auto"); return c } } }) }), f.attrHooks.contenteditable = { get: w.get, set: function (a, b, c) { b === "" && (b = "false"), w.set(a, b, c) } }), f.support.hrefNormalized || f.each(["href", "src", "width", "height"], function (a, c) { f.attrHooks[c] = f.extend(f.attrHooks[c], { get: function (a) { var d = a.getAttribute(c, 2); return d === null ? b : d } }) }), f.support.style || (f.attrHooks.style = { get: function (a) { return a.style.cssText.toLowerCase() || b }, set: function (a, b) { return a.style.cssText = "" + b } }), f.support.optSelected || (f.propHooks.selected = f.extend(f.propHooks.selected, { get: function (a) { var b = a.parentNode; b && (b.selectedIndex, b.parentNode && b.parentNode.selectedIndex); return null } })), f.support.enctype || (f.propFix.enctype = "encoding"), f.support.checkOn || f.each(["radio", "checkbox"], function () { f.valHooks[this] = { get: function (a) { return a.getAttribute("value") === null ? "on" : a.value } } }), f.each(["radio", "checkbox"], function () { f.valHooks[this] = f.extend(f.valHooks[this], { set: function (a, b) { if (f.isArray(b)) return a.checked = f.inArray(f(a).val(), b) >= 0 } }) }); var z = /^(?:textarea|input|select)$/i, A = /^([^\.]*)?(?:\.(.+))?$/, B = /\bhover(\.\S+)?\b/, C = /^key/, D = /^(?:mouse|contextmenu)|click/, E = /^(?:focusinfocus|focusoutblur)$/, F = /^(\w*)(?:#([\w\-]+))?(?:\.([\w\-]+))?$/, G = function (a) { var b = F.exec(a); b && (b[1] = (b[1] || "").toLowerCase(), b[3] = b[3] && new RegExp("(?:^|\\s)" + b[3] + "(?:\\s|$)")); return b }, H = function (a, b) { var c = a.attributes || {}; return (!b[1] || a.nodeName.toLowerCase() === b[1]) && (!b[2] || (c.id || {}).value === b[2]) && (!b[3] || b[3].test((c["class"] || {}).value)) }, I = function (a) { return f.event.special.hover ? a : a.replace(B, "mouseenter$1 mouseleave$1") };
    f.event = { add: function (a, c, d, e, g) { var h, i, j, k, l, m, n, o, p, q, r, s; if (!(a.nodeType === 3 || a.nodeType === 8 || !c || !d || !(h = f._data(a)))) { d.handler && (p = d, d = p.handler), d.guid || (d.guid = f.guid++), j = h.events, j || (h.events = j = {}), i = h.handle, i || (h.handle = i = function (a) { return typeof f != "undefined" && (!a || f.event.triggered !== a.type) ? f.event.dispatch.apply(i.elem, arguments) : b }, i.elem = a), c = f.trim(I(c)).split(" "); for (k = 0; k < c.length; k++) { l = A.exec(c[k]) || [], m = l[1], n = (l[2] || "").split(".").sort(), s = f.event.special[m] || {}, m = (g ? s.delegateType : s.bindType) || m, s = f.event.special[m] || {}, o = f.extend({ type: m, origType: l[1], data: e, handler: d, guid: d.guid, selector: g, quick: G(g), namespace: n.join(".") }, p), r = j[m]; if (!r) { r = j[m] = [], r.delegateCount = 0; if (!s.setup || s.setup.call(a, e, n, i) === !1) a.addEventListener ? a.addEventListener(m, i, !1) : a.attachEvent && a.attachEvent("on" + m, i) } s.add && (s.add.call(a, o), o.handler.guid || (o.handler.guid = d.guid)), g ? r.splice(r.delegateCount++, 0, o) : r.push(o), f.event.global[m] = !0 } a = null } }, global: {}, remove: function (a, b, c, d, e) { var g = f.hasData(a) && f._data(a), h, i, j, k, l, m, n, o, p, q, r, s; if (!!g && !!(o = g.events)) { b = f.trim(I(b || "")).split(" "); for (h = 0; h < b.length; h++) { i = A.exec(b[h]) || [], j = k = i[1], l = i[2]; if (!j) { for (j in o) f.event.remove(a, j + b[h], c, d, !0); continue } p = f.event.special[j] || {}, j = (d ? p.delegateType : p.bindType) || j, r = o[j] || [], m = r.length, l = l ? new RegExp("(^|\\.)" + l.split(".").sort().join("\\.(?:.*\\.)?") + "(\\.|$)") : null; for (n = 0; n < r.length; n++) s = r[n], (e || k === s.origType) && (!c || c.guid === s.guid) && (!l || l.test(s.namespace)) && (!d || d === s.selector || d === "**" && s.selector) && (r.splice(n--, 1), s.selector && r.delegateCount--, p.remove && p.remove.call(a, s)); r.length === 0 && m !== r.length && ((!p.teardown || p.teardown.call(a, l) === !1) && f.removeEvent(a, j, g.handle), delete o[j]) } f.isEmptyObject(o) && (q = g.handle, q && (q.elem = null), f.removeData(a, ["events", "handle"], !0)) } }, customEvent: { getData: !0, setData: !0, changeData: !0 }, trigger: function (c, d, e, g) { if (!e || e.nodeType !== 3 && e.nodeType !== 8) { var h = c.type || c, i = [], j, k, l, m, n, o, p, q, r, s; if (E.test(h + f.event.triggered)) return; h.indexOf("!") >= 0 && (h = h.slice(0, -1), k = !0), h.indexOf(".") >= 0 && (i = h.split("."), h = i.shift(), i.sort()); if ((!e || f.event.customEvent[h]) && !f.event.global[h]) return; c = typeof c == "object" ? c[f.expando] ? c : new f.Event(h, c) : new f.Event(h), c.type = h, c.isTrigger = !0, c.exclusive = k, c.namespace = i.join("."), c.namespace_re = c.namespace ? new RegExp("(^|\\.)" + i.join("\\.(?:.*\\.)?") + "(\\.|$)") : null, o = h.indexOf(":") < 0 ? "on" + h : ""; if (!e) { j = f.cache; for (l in j) j[l].events && j[l].events[h] && f.event.trigger(c, d, j[l].handle.elem, !0); return } c.result = b, c.target || (c.target = e), d = d != null ? f.makeArray(d) : [], d.unshift(c), p = f.event.special[h] || {}; if (p.trigger && p.trigger.apply(e, d) === !1) return; r = [[e, p.bindType || h]]; if (!g && !p.noBubble && !f.isWindow(e)) { s = p.delegateType || h, m = E.test(s + h) ? e : e.parentNode, n = null; for (; m; m = m.parentNode) r.push([m, s]), n = m; n && n === e.ownerDocument && r.push([n.defaultView || n.parentWindow || a, s]) } for (l = 0; l < r.length && !c.isPropagationStopped(); l++) m = r[l][0], c.type = r[l][1], q = (f._data(m, "events") || {})[c.type] && f._data(m, "handle"), q && q.apply(m, d), q = o && m[o], q && f.acceptData(m) && q.apply(m, d) === !1 && c.preventDefault(); c.type = h, !g && !c.isDefaultPrevented() && (!p._default || p._default.apply(e.ownerDocument, d) === !1) && (h !== "click" || !f.nodeName(e, "a")) && f.acceptData(e) && o && e[h] && (h !== "focus" && h !== "blur" || c.target.offsetWidth !== 0) && !f.isWindow(e) && (n = e[o], n && (e[o] = null), f.event.triggered = h, e[h](), f.event.triggered = b, n && (e[o] = n)); return c.result } }, dispatch: function (c) { c = f.event.fix(c || a.event); var d = (f._data(this, "events") || {})[c.type] || [], e = d.delegateCount, g = [].slice.call(arguments, 0), h = !c.exclusive && !c.namespace, i = [], j, k, l, m, n, o, p, q, r, s, t; g[0] = c, c.delegateTarget = this; if (e && !c.target.disabled && (!c.button || c.type !== "click")) { m = f(this), m.context = this.ownerDocument || this; for (l = c.target; l != this; l = l.parentNode || this) { o = {}, q = [], m[0] = l; for (j = 0; j < e; j++) r = d[j], s = r.selector, o[s] === b && (o[s] = r.quick ? H(l, r.quick) : m.is(s)), o[s] && q.push(r); q.length && i.push({ elem: l, matches: q }) } } d.length > e && i.push({ elem: this, matches: d.slice(e) }); for (j = 0; j < i.length && !c.isPropagationStopped(); j++) { p = i[j], c.currentTarget = p.elem; for (k = 0; k < p.matches.length && !c.isImmediatePropagationStopped(); k++) { r = p.matches[k]; if (h || !c.namespace && !r.namespace || c.namespace_re && c.namespace_re.test(r.namespace)) c.data = r.data, c.handleObj = r, n = ((f.event.special[r.origType] || {}).handle || r.handler).apply(p.elem, g), n !== b && (c.result = n, n === !1 && (c.preventDefault(), c.stopPropagation())) } } return c.result }, props: "attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "), fixHooks: {}, keyHooks: { props: "char charCode key keyCode".split(" "), filter: function (a, b) { a.which == null && (a.which = b.charCode != null ? b.charCode : b.keyCode); return a } }, mouseHooks: { props: "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "), filter: function (a, d) { var e, f, g, h = d.button, i = d.fromElement; a.pageX == null && d.clientX != null && (e = a.target.ownerDocument || c, f = e.documentElement, g = e.body, a.pageX = d.clientX + (f && f.scrollLeft || g && g.scrollLeft || 0) - (f && f.clientLeft || g && g.clientLeft || 0), a.pageY = d.clientY + (f && f.scrollTop || g && g.scrollTop || 0) - (f && f.clientTop || g && g.clientTop || 0)), !a.relatedTarget && i && (a.relatedTarget = i === a.target ? d.toElement : i), !a.which && h !== b && (a.which = h & 1 ? 1 : h & 2 ? 3 : h & 4 ? 2 : 0); return a } }, fix: function (a) { if (a[f.expando]) return a; var d, e, g = a, h = f.event.fixHooks[a.type] || {}, i = h.props ? this.props.concat(h.props) : this.props; a = f.Event(g); for (d = i.length; d; ) e = i[--d], a[e] = g[e]; a.target || (a.target = g.srcElement || c), a.target.nodeType === 3 && (a.target = a.target.parentNode), a.metaKey === b && (a.metaKey = a.ctrlKey); return h.filter ? h.filter(a, g) : a }, special: { ready: { setup: f.bindReady }, load: { noBubble: !0 }, focus: { delegateType: "focusin" }, blur: { delegateType: "focusout" }, beforeunload: { setup: function (a, b, c) { f.isWindow(this) && (this.onbeforeunload = c) }, teardown: function (a, b) { this.onbeforeunload === b && (this.onbeforeunload = null) } } }, simulate: function (a, b, c, d) { var e = f.extend(new f.Event, c, { type: a, isSimulated: !0, originalEvent: {} }); d ? f.event.trigger(e, null, b) : f.event.dispatch.call(b, e), e.isDefaultPrevented() && c.preventDefault() } }, f.event.handle = f.event.dispatch, f.removeEvent = c.removeEventListener ? function (a, b, c) { a.removeEventListener && a.removeEventListener(b, c, !1) } : function (a, b, c) { a.detachEvent && a.detachEvent("on" + b, c) }, f.Event = function (a, b) { if (!(this instanceof f.Event)) return new f.Event(a, b); a && a.type ? (this.originalEvent = a, this.type = a.type, this.isDefaultPrevented = a.defaultPrevented || a.returnValue === !1 || a.getPreventDefault && a.getPreventDefault() ? K : J) : this.type = a, b && f.extend(this, b), this.timeStamp = a && a.timeStamp || f.now(), this[f.expando] = !0 }, f.Event.prototype = { preventDefault: function () { this.isDefaultPrevented = K; var a = this.originalEvent; !a || (a.preventDefault ? a.preventDefault() : a.returnValue = !1) }, stopPropagation: function () { this.isPropagationStopped = K; var a = this.originalEvent; !a || (a.stopPropagation && a.stopPropagation(), a.cancelBubble = !0) }, stopImmediatePropagation: function () { this.isImmediatePropagationStopped = K, this.stopPropagation() }, isDefaultPrevented: J, isPropagationStopped: J, isImmediatePropagationStopped: J }, f.each({ mouseenter: "mouseover", mouseleave: "mouseout" }, function (a, b) { f.event.special[a] = { delegateType: b, bindType: b, handle: function (a) { var c = this, d = a.relatedTarget, e = a.handleObj, g = e.selector, h; if (!d || d !== c && !f.contains(c, d)) a.type = e.origType, h = e.handler.apply(this, arguments), a.type = b; return h } } }), f.support.submitBubbles || (f.event.special.submit = { setup: function () { if (f.nodeName(this, "form")) return !1; f.event.add(this, "click._submit keypress._submit", function (a) { var c = a.target, d = f.nodeName(c, "input") || f.nodeName(c, "button") ? c.form : b; d && !d._submit_attached && (f.event.add(d, "submit._submit", function (a) { this.parentNode && !a.isTrigger && f.event.simulate("submit", this.parentNode, a, !0) }), d._submit_attached = !0) }) }, teardown: function () { if (f.nodeName(this, "form")) return !1; f.event.remove(this, "._submit") } }), f.support.changeBubbles || (f.event.special.change = { setup: function () { if (z.test(this.nodeName)) { if (this.type === "checkbox" || this.type === "radio") f.event.add(this, "propertychange._change", function (a) { a.originalEvent.propertyName === "checked" && (this._just_changed = !0) }), f.event.add(this, "click._change", function (a) { this._just_changed && !a.isTrigger && (this._just_changed = !1, f.event.simulate("change", this, a, !0)) }); return !1 } f.event.add(this, "beforeactivate._change", function (a) { var b = a.target; z.test(b.nodeName) && !b._change_attached && (f.event.add(b, "change._change", function (a) { this.parentNode && !a.isSimulated && !a.isTrigger && f.event.simulate("change", this.parentNode, a, !0) }), b._change_attached = !0) }) }, handle: function (a) { var b = a.target; if (this !== b || a.isSimulated || a.isTrigger || b.type !== "radio" && b.type !== "checkbox") return a.handleObj.handler.apply(this, arguments) }, teardown: function () { f.event.remove(this, "._change"); return z.test(this.nodeName) } }), f.support.focusinBubbles || f.each({ focus: "focusin", blur: "focusout" }, function (a, b) { var d = 0, e = function (a) { f.event.simulate(b, a.target, f.event.fix(a), !0) }; f.event.special[b] = { setup: function () { d++ === 0 && c.addEventListener(a, e, !0) }, teardown: function () { --d === 0 && c.removeEventListener(a, e, !0) } } }), f.fn.extend({ on: function (a, c, d, e, g) { var h, i; if (typeof a == "object") { typeof c != "string" && (d = c, c = b); for (i in a) this.on(i, c, d, a[i], g); return this } d == null && e == null ? (e = c, d = c = b) : e == null && (typeof c == "string" ? (e = d, d = b) : (e = d, d = c, c = b)); if (e === !1) e = J; else if (!e) return this; g === 1 && (h = e, e = function (a) { f().off(a); return h.apply(this, arguments) }, e.guid = h.guid || (h.guid = f.guid++)); return this.each(function () { f.event.add(this, a, e, d, c) }) }, one: function (a, b, c, d) { return this.on.call(this, a, b, c, d, 1) }, off: function (a, c, d) { if (a && a.preventDefault && a.handleObj) { var e = a.handleObj; f(a.delegateTarget).off(e.namespace ? e.type + "." + e.namespace : e.type, e.selector, e.handler); return this } if (typeof a == "object") { for (var g in a) this.off(g, c, a[g]); return this } if (c === !1 || typeof c == "function") d = c, c = b; d === !1 && (d = J); return this.each(function () { f.event.remove(this, a, d, c) }) }, bind: function (a, b, c) { return this.on(a, null, b, c) }, unbind: function (a, b) { return this.off(a, null, b) }, live: function (a, b, c) { f(this.context).on(a, this.selector, b, c); return this }, die: function (a, b) { f(this.context).off(a, this.selector || "**", b); return this }, delegate: function (a, b, c, d) { return this.on(b, a, c, d) }, undelegate: function (a, b, c) { return arguments.length == 1 ? this.off(a, "**") : this.off(b, a, c) }, trigger: function (a, b) { return this.each(function () { f.event.trigger(a, b, this) }) }, triggerHandler: function (a, b) { if (this[0]) return f.event.trigger(a, b, this[0], !0) }, toggle: function (a) { var b = arguments, c = a.guid || f.guid++, d = 0, e = function (c) { var e = (f._data(this, "lastToggle" + a.guid) || 0) % d; f._data(this, "lastToggle" + a.guid, e + 1), c.preventDefault(); return b[e].apply(this, arguments) || !1 }; e.guid = c; while (d < b.length) b[d++].guid = c; return this.click(e) }, hover: function (a, b) { return this.mouseenter(a).mouseleave(b || a) } }), f.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "), function (a, b) { f.fn[b] = function (a, c) { c == null && (c = a, a = null); return arguments.length > 0 ? this.on(b, null, a, c) : this.trigger(b) }, f.attrFn && (f.attrFn[b] = !0), C.test(b) && (f.event.fixHooks[b] = f.event.keyHooks), D.test(b) && (f.event.fixHooks[b] = f.event.mouseHooks) }), function () { function x(a, b, c, e, f, g) { for (var h = 0, i = e.length; h < i; h++) { var j = e[h]; if (j) { var k = !1; j = j[a]; while (j) { if (j[d] === c) { k = e[j.sizset]; break } if (j.nodeType === 1) { g || (j[d] = c, j.sizset = h); if (typeof b != "string") { if (j === b) { k = !0; break } } else if (m.filter(b, [j]).length > 0) { k = j; break } } j = j[a] } e[h] = k } } } function w(a, b, c, e, f, g) { for (var h = 0, i = e.length; h < i; h++) { var j = e[h]; if (j) { var k = !1; j = j[a]; while (j) { if (j[d] === c) { k = e[j.sizset]; break } j.nodeType === 1 && !g && (j[d] = c, j.sizset = h); if (j.nodeName.toLowerCase() === b) { k = j; break } j = j[a] } e[h] = k } } } var a = /((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g, d = "sizcache" + (Math.random() + "").replace(".", ""), e = 0, g = Object.prototype.toString, h = !1, i = !0, j = /\\/g, k = /\r\n/g, l = /\W/; [0, 0].sort(function () { i = !1; return 0 }); var m = function (b, d, e, f) { e = e || [], d = d || c; var h = d; if (d.nodeType !== 1 && d.nodeType !== 9) return []; if (!b || typeof b != "string") return e; var i, j, k, l, n, q, r, t, u = !0, v = m.isXML(d), w = [], x = b; do { a.exec(""), i = a.exec(x); if (i) { x = i[3], w.push(i[1]); if (i[2]) { l = i[3]; break } } } while (i); if (w.length > 1 && p.exec(b)) if (w.length === 2 && o.relative[w[0]]) j = y(w[0] + w[1], d, f); else { j = o.relative[w[0]] ? [d] : m(w.shift(), d); while (w.length) b = w.shift(), o.relative[b] && (b += w.shift()), j = y(b, j, f) } else { !f && w.length > 1 && d.nodeType === 9 && !v && o.match.ID.test(w[0]) && !o.match.ID.test(w[w.length - 1]) && (n = m.find(w.shift(), d, v), d = n.expr ? m.filter(n.expr, n.set)[0] : n.set[0]); if (d) { n = f ? { expr: w.pop(), set: s(f)} : m.find(w.pop(), w.length === 1 && (w[0] === "~" || w[0] === "+") && d.parentNode ? d.parentNode : d, v), j = n.expr ? m.filter(n.expr, n.set) : n.set, w.length > 0 ? k = s(j) : u = !1; while (w.length) q = w.pop(), r = q, o.relative[q] ? r = w.pop() : q = "", r == null && (r = d), o.relative[q](k, r, v) } else k = w = [] } k || (k = j), k || m.error(q || b); if (g.call(k) === "[object Array]") if (!u) e.push.apply(e, k); else if (d && d.nodeType === 1) for (t = 0; k[t] != null; t++) k[t] && (k[t] === !0 || k[t].nodeType === 1 && m.contains(d, k[t])) && e.push(j[t]); else for (t = 0; k[t] != null; t++) k[t] && k[t].nodeType === 1 && e.push(j[t]); else s(k, e); l && (m(l, h, e, f), m.uniqueSort(e)); return e }; m.uniqueSort = function (a) { if (u) { h = i, a.sort(u); if (h) for (var b = 1; b < a.length; b++) a[b] === a[b - 1] && a.splice(b--, 1) } return a }, m.matches = function (a, b) { return m(a, null, null, b) }, m.matchesSelector = function (a, b) { return m(b, null, null, [a]).length > 0 }, m.find = function (a, b, c) { var d, e, f, g, h, i; if (!a) return []; for (e = 0, f = o.order.length; e < f; e++) { h = o.order[e]; if (g = o.leftMatch[h].exec(a)) { i = g[1], g.splice(1, 1); if (i.substr(i.length - 1) !== "\\") { g[1] = (g[1] || "").replace(j, ""), d = o.find[h](g, b, c); if (d != null) { a = a.replace(o.match[h], ""); break } } } } d || (d = typeof b.getElementsByTagName != "undefined" ? b.getElementsByTagName("*") : []); return { set: d, expr: a} }, m.filter = function (a, c, d, e) { var f, g, h, i, j, k, l, n, p, q = a, r = [], s = c, t = c && c[0] && m.isXML(c[0]); while (a && c.length) { for (h in o.filter) if ((f = o.leftMatch[h].exec(a)) != null && f[2]) { k = o.filter[h], l = f[1], g = !1, f.splice(1, 1); if (l.substr(l.length - 1) === "\\") continue; s === r && (r = []); if (o.preFilter[h]) { f = o.preFilter[h](f, s, d, r, e, t); if (!f) g = i = !0; else if (f === !0) continue } if (f) for (n = 0; (j = s[n]) != null; n++) j && (i = k(j, f, n, s), p = e ^ i, d && i != null ? p ? g = !0 : s[n] = !1 : p && (r.push(j), g = !0)); if (i !== b) { d || (s = r), a = a.replace(o.match[h], ""); if (!g) return []; break } } if (a === q) if (g == null) m.error(a); else break; q = a } return s }, m.error = function (a) { throw new Error("Syntax error, unrecognized expression: " + a) }; var n = m.getText = function (a) { var b, c, d = a.nodeType, e = ""; if (d) { if (d === 1 || d === 9) { if (typeof a.textContent == "string") return a.textContent; if (typeof a.innerText == "string") return a.innerText.replace(k, ""); for (a = a.firstChild; a; a = a.nextSibling) e += n(a) } else if (d === 3 || d === 4) return a.nodeValue } else for (b = 0; c = a[b]; b++) c.nodeType !== 8 && (e += n(c)); return e }, o = m.selectors = { order: ["ID", "NAME", "TAG"], match: { ID: /#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/, CLASS: /\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/, NAME: /\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/, ATTR: /\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(?:(['"])(.*?)\3|(#?(?:[\w\u00c0-\uFFFF\-]|\\.)*)|)|)\s*\]/, TAG: /^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/, CHILD: /:(only|nth|last|first)-child(?:\(\s*(even|odd|(?:[+\-]?\d+|(?:[+\-]?\d*)?n\s*(?:[+\-]\s*\d+)?))\s*\))?/, POS: /:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/, PSEUDO: /:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/ }, leftMatch: {}, attrMap: { "class": "className", "for": "htmlFor" }, attrHandle: { href: function (a) { return a.getAttribute("href") }, type: function (a) { return a.getAttribute("type") } }, relative: { "+": function (a, b) { var c = typeof b == "string", d = c && !l.test(b), e = c && !d; d && (b = b.toLowerCase()); for (var f = 0, g = a.length, h; f < g; f++) if (h = a[f]) { while ((h = h.previousSibling) && h.nodeType !== 1); a[f] = e || h && h.nodeName.toLowerCase() === b ? h || !1 : h === b } e && m.filter(b, a, !0) }, ">": function (a, b) { var c, d = typeof b == "string", e = 0, f = a.length; if (d && !l.test(b)) { b = b.toLowerCase(); for (; e < f; e++) { c = a[e]; if (c) { var g = c.parentNode; a[e] = g.nodeName.toLowerCase() === b ? g : !1 } } } else { for (; e < f; e++) c = a[e], c && (a[e] = d ? c.parentNode : c.parentNode === b); d && m.filter(b, a, !0) } }, "": function (a, b, c) { var d, f = e++, g = x; typeof b == "string" && !l.test(b) && (b = b.toLowerCase(), d = b, g = w), g("parentNode", b, f, a, d, c) }, "~": function (a, b, c) { var d, f = e++, g = x; typeof b == "string" && !l.test(b) && (b = b.toLowerCase(), d = b, g = w), g("previousSibling", b, f, a, d, c) } }, find: { ID: function (a, b, c) { if (typeof b.getElementById != "undefined" && !c) { var d = b.getElementById(a[1]); return d && d.parentNode ? [d] : [] } }, NAME: function (a, b) { if (typeof b.getElementsByName != "undefined") { var c = [], d = b.getElementsByName(a[1]); for (var e = 0, f = d.length; e < f; e++) d[e].getAttribute("name") === a[1] && c.push(d[e]); return c.length === 0 ? null : c } }, TAG: function (a, b) { if (typeof b.getElementsByTagName != "undefined") return b.getElementsByTagName(a[1]) } }, preFilter: { CLASS: function (a, b, c, d, e, f) { a = " " + a[1].replace(j, "") + " "; if (f) return a; for (var g = 0, h; (h = b[g]) != null; g++) h && (e ^ (h.className && (" " + h.className + " ").replace(/[\t\n\r]/g, " ").indexOf(a) >= 0) ? c || d.push(h) : c && (b[g] = !1)); return !1 }, ID: function (a) { return a[1].replace(j, "") }, TAG: function (a, b) { return a[1].replace(j, "").toLowerCase() }, CHILD: function (a) { if (a[1] === "nth") { a[2] || m.error(a[0]), a[2] = a[2].replace(/^\+|\s*/g, ""); var b = /(-?)(\d*)(?:n([+\-]?\d*))?/.exec(a[2] === "even" && "2n" || a[2] === "odd" && "2n+1" || !/\D/.test(a[2]) && "0n+" + a[2] || a[2]); a[2] = b[1] + (b[2] || 1) - 0, a[3] = b[3] - 0 } else a[2] && m.error(a[0]); a[0] = e++; return a }, ATTR: function (a, b, c, d, e, f) { var g = a[1] = a[1].replace(j, ""); !f && o.attrMap[g] && (a[1] = o.attrMap[g]), a[4] = (a[4] || a[5] || "").replace(j, ""), a[2] === "~=" && (a[4] = " " + a[4] + " "); return a }, PSEUDO: function (b, c, d, e, f) { if (b[1] === "not") if ((a.exec(b[3]) || "").length > 1 || /^\w/.test(b[3])) b[3] = m(b[3], null, null, c); else { var g = m.filter(b[3], c, d, !0 ^ f); d || e.push.apply(e, g); return !1 } else if (o.match.POS.test(b[0]) || o.match.CHILD.test(b[0])) return !0; return b }, POS: function (a) { a.unshift(!0); return a } }, filters: { enabled: function (a) { return a.disabled === !1 && a.type !== "hidden" }, disabled: function (a) { return a.disabled === !0 }, checked: function (a) { return a.checked === !0 }, selected: function (a) { a.parentNode && a.parentNode.selectedIndex; return a.selected === !0 }, parent: function (a) { return !!a.firstChild }, empty: function (a) { return !a.firstChild }, has: function (a, b, c) { return !!m(c[3], a).length }, header: function (a) { return /h\d/i.test(a.nodeName) }, text: function (a) { var b = a.getAttribute("type"), c = a.type; return a.nodeName.toLowerCase() === "input" && "text" === c && (b === c || b === null) }, radio: function (a) { return a.nodeName.toLowerCase() === "input" && "radio" === a.type }, checkbox: function (a) { return a.nodeName.toLowerCase() === "input" && "checkbox" === a.type }, file: function (a) { return a.nodeName.toLowerCase() === "input" && "file" === a.type }, password: function (a) { return a.nodeName.toLowerCase() === "input" && "password" === a.type }, submit: function (a) { var b = a.nodeName.toLowerCase(); return (b === "input" || b === "button") && "submit" === a.type }, image: function (a) { return a.nodeName.toLowerCase() === "input" && "image" === a.type }, reset: function (a) { var b = a.nodeName.toLowerCase(); return (b === "input" || b === "button") && "reset" === a.type }, button: function (a) { var b = a.nodeName.toLowerCase(); return b === "input" && "button" === a.type || b === "button" }, input: function (a) { return /input|select|textarea|button/i.test(a.nodeName) }, focus: function (a) { return a === a.ownerDocument.activeElement } }, setFilters: { first: function (a, b) { return b === 0 }, last: function (a, b, c, d) { return b === d.length - 1 }, even: function (a, b) { return b % 2 === 0 }, odd: function (a, b) { return b % 2 === 1 }, lt: function (a, b, c) { return b < c[3] - 0 }, gt: function (a, b, c) { return b > c[3] - 0 }, nth: function (a, b, c) { return c[3] - 0 === b }, eq: function (a, b, c) { return c[3] - 0 === b } }, filter: { PSEUDO: function (a, b, c, d) { var e = b[1], f = o.filters[e]; if (f) return f(a, c, b, d); if (e === "contains") return (a.textContent || a.innerText || n([a]) || "").indexOf(b[3]) >= 0; if (e === "not") { var g = b[3]; for (var h = 0, i = g.length; h < i; h++) if (g[h] === a) return !1; return !0 } m.error(e) }, CHILD: function (a, b) { var c, e, f, g, h, i, j, k = b[1], l = a; switch (k) { case "only": case "first": while (l = l.previousSibling) if (l.nodeType === 1) return !1; if (k === "first") return !0; l = a; case "last": while (l = l.nextSibling) if (l.nodeType === 1) return !1; return !0; case "nth": c = b[2], e = b[3]; if (c === 1 && e === 0) return !0; f = b[0], g = a.parentNode; if (g && (g[d] !== f || !a.nodeIndex)) { i = 0; for (l = g.firstChild; l; l = l.nextSibling) l.nodeType === 1 && (l.nodeIndex = ++i); g[d] = f } j = a.nodeIndex - e; return c === 0 ? j === 0 : j % c === 0 && j / c >= 0 } }, ID: function (a, b) { return a.nodeType === 1 && a.getAttribute("id") === b }, TAG: function (a, b) { return b === "*" && a.nodeType === 1 || !!a.nodeName && a.nodeName.toLowerCase() === b }, CLASS: function (a, b) { return (" " + (a.className || a.getAttribute("class")) + " ").indexOf(b) > -1 }, ATTR: function (a, b) { var c = b[1], d = m.attr ? m.attr(a, c) : o.attrHandle[c] ? o.attrHandle[c](a) : a[c] != null ? a[c] : a.getAttribute(c), e = d + "", f = b[2], g = b[4]; return d == null ? f === "!=" : !f && m.attr ? d != null : f === "=" ? e === g : f === "*=" ? e.indexOf(g) >= 0 : f === "~=" ? (" " + e + " ").indexOf(g) >= 0 : g ? f === "!=" ? e !== g : f === "^=" ? e.indexOf(g) === 0 : f === "$=" ? e.substr(e.length - g.length) === g : f === "|=" ? e === g || e.substr(0, g.length + 1) === g + "-" : !1 : e && d !== !1 }, POS: function (a, b, c, d) { var e = b[2], f = o.setFilters[e]; if (f) return f(a, c, b, d) } } }, p = o.match.POS, q = function (a, b) { return "\\" + (b - 0 + 1) }; for (var r in o.match) o.match[r] = new RegExp(o.match[r].source + /(?![^\[]*\])(?![^\(]*\))/.source), o.leftMatch[r] = new RegExp(/(^(?:.|\r|\n)*?)/.source + o.match[r].source.replace(/\\(\d+)/g, q)); var s = function (a, b) { a = Array.prototype.slice.call(a, 0); if (b) { b.push.apply(b, a); return b } return a }; try { Array.prototype.slice.call(c.documentElement.childNodes, 0)[0].nodeType } catch (t) { s = function (a, b) { var c = 0, d = b || []; if (g.call(a) === "[object Array]") Array.prototype.push.apply(d, a); else if (typeof a.length == "number") for (var e = a.length; c < e; c++) d.push(a[c]); else for (; a[c]; c++) d.push(a[c]); return d } } var u, v; c.documentElement.compareDocumentPosition ? u = function (a, b) { if (a === b) { h = !0; return 0 } if (!a.compareDocumentPosition || !b.compareDocumentPosition) return a.compareDocumentPosition ? -1 : 1; return a.compareDocumentPosition(b) & 4 ? -1 : 1 } : (u = function (a, b) { if (a === b) { h = !0; return 0 } if (a.sourceIndex && b.sourceIndex) return a.sourceIndex - b.sourceIndex; var c, d, e = [], f = [], g = a.parentNode, i = b.parentNode, j = g; if (g === i) return v(a, b); if (!g) return -1; if (!i) return 1; while (j) e.unshift(j), j = j.parentNode; j = i; while (j) f.unshift(j), j = j.parentNode; c = e.length, d = f.length; for (var k = 0; k < c && k < d; k++) if (e[k] !== f[k]) return v(e[k], f[k]); return k === c ? v(a, f[k], -1) : v(e[k], b, 1) }, v = function (a, b, c) { if (a === b) return c; var d = a.nextSibling; while (d) { if (d === b) return -1; d = d.nextSibling } return 1 }), function () { var a = c.createElement("div"), d = "script" + (new Date).getTime(), e = c.documentElement; a.innerHTML = "<a name='" + d + "'/>", e.insertBefore(a, e.firstChild), c.getElementById(d) && (o.find.ID = function (a, c, d) { if (typeof c.getElementById != "undefined" && !d) { var e = c.getElementById(a[1]); return e ? e.id === a[1] || typeof e.getAttributeNode != "undefined" && e.getAttributeNode("id").nodeValue === a[1] ? [e] : b : [] } }, o.filter.ID = function (a, b) { var c = typeof a.getAttributeNode != "undefined" && a.getAttributeNode("id"); return a.nodeType === 1 && c && c.nodeValue === b }), e.removeChild(a), e = a = null } (), function () { var a = c.createElement("div"); a.appendChild(c.createComment("")), a.getElementsByTagName("*").length > 0 && (o.find.TAG = function (a, b) { var c = b.getElementsByTagName(a[1]); if (a[1] === "*") { var d = []; for (var e = 0; c[e]; e++) c[e].nodeType === 1 && d.push(c[e]); c = d } return c }), a.innerHTML = "<a href='#'></a>", a.firstChild && typeof a.firstChild.getAttribute != "undefined" && a.firstChild.getAttribute("href") !== "#" && (o.attrHandle.href = function (a) { return a.getAttribute("href", 2) }), a = null } (), c.querySelectorAll && function () { var a = m, b = c.createElement("div"), d = "__sizzle__"; b.innerHTML = "<p class='TEST'></p>"; if (!b.querySelectorAll || b.querySelectorAll(".TEST").length !== 0) { m = function (b, e, f, g) { e = e || c; if (!g && !m.isXML(e)) { var h = /^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/.exec(b); if (h && (e.nodeType === 1 || e.nodeType === 9)) { if (h[1]) return s(e.getElementsByTagName(b), f); if (h[2] && o.find.CLASS && e.getElementsByClassName) return s(e.getElementsByClassName(h[2]), f) } if (e.nodeType === 9) { if (b === "body" && e.body) return s([e.body], f); if (h && h[3]) { var i = e.getElementById(h[3]); if (!i || !i.parentNode) return s([], f); if (i.id === h[3]) return s([i], f) } try { return s(e.querySelectorAll(b), f) } catch (j) { } } else if (e.nodeType === 1 && e.nodeName.toLowerCase() !== "object") { var k = e, l = e.getAttribute("id"), n = l || d, p = e.parentNode, q = /^\s*[+~]/.test(b); l ? n = n.replace(/'/g, "\\$&") : e.setAttribute("id", n), q && p && (e = e.parentNode); try { if (!q || p) return s(e.querySelectorAll("[id='" + n + "'] " + b), f) } catch (r) { } finally { l || k.removeAttribute("id") } } } return a(b, e, f, g) }; for (var e in a) m[e] = a[e]; b = null } } (), function () { var a = c.documentElement, b = a.matchesSelector || a.mozMatchesSelector || a.webkitMatchesSelector || a.msMatchesSelector; if (b) { var d = !b.call(c.createElement("div"), "div"), e = !1; try { b.call(c.documentElement, "[test!='']:sizzle") } catch (f) { e = !0 } m.matchesSelector = function (a, c) { c = c.replace(/\=\s*([^'"\]]*)\s*\]/g, "='$1']"); if (!m.isXML(a)) try { if (e || !o.match.PSEUDO.test(c) && !/!=/.test(c)) { var f = b.call(a, c); if (f || !d || a.document && a.document.nodeType !== 11) return f } } catch (g) { } return m(c, null, null, [a]).length > 0 } } } (), function () { var a = c.createElement("div"); a.innerHTML = "<div class='test e'></div><div class='test'></div>"; if (!!a.getElementsByClassName && a.getElementsByClassName("e").length !== 0) { a.lastChild.className = "e"; if (a.getElementsByClassName("e").length === 1) return; o.order.splice(1, 0, "CLASS"), o.find.CLASS = function (a, b, c) { if (typeof b.getElementsByClassName != "undefined" && !c) return b.getElementsByClassName(a[1]) }, a = null } } (), c.documentElement.contains ? m.contains = function (a, b) { return a !== b && (a.contains ? a.contains(b) : !0) } : c.documentElement.compareDocumentPosition ? m.contains = function (a, b) { return !!(a.compareDocumentPosition(b) & 16) } : m.contains = function () { return !1 }, m.isXML = function (a) { var b = (a ? a.ownerDocument || a : 0).documentElement; return b ? b.nodeName !== "HTML" : !1 }; var y = function (a, b, c) { var d, e = [], f = "", g = b.nodeType ? [b] : b; while (d = o.match.PSEUDO.exec(a)) f += d[0], a = a.replace(o.match.PSEUDO, ""); a = o.relative[a] ? a + "*" : a; for (var h = 0, i = g.length; h < i; h++) m(a, g[h], e, c); return m.filter(f, e) }; m.attr = f.attr, m.selectors.attrMap = {}, f.find = m, f.expr = m.selectors, f.expr[":"] = f.expr.filters, f.unique = m.uniqueSort, f.text = m.getText, f.isXMLDoc = m.isXML, f.contains = m.contains } (); var L = /Until$/, M = /^(?:parents|prevUntil|prevAll)/, N = /,/, O = /^.[^:#\[\.,]*$/, P = Array.prototype.slice, Q = f.expr.match.POS, R = { children: !0, contents: !0, next: !0, prev: !0 }; f.fn.extend({ find: function (a) { var b = this, c, d; if (typeof a != "string") return f(a).filter(function () { for (c = 0, d = b.length; c < d; c++) if (f.contains(b[c], this)) return !0 }); var e = this.pushStack("", "find", a), g, h, i; for (c = 0, d = this.length; c < d; c++) { g = e.length, f.find(a, this[c], e); if (c > 0) for (h = g; h < e.length; h++) for (i = 0; i < g; i++) if (e[i] === e[h]) { e.splice(h--, 1); break } } return e }, has: function (a) { var b = f(a); return this.filter(function () { for (var a = 0, c = b.length; a < c; a++) if (f.contains(this, b[a])) return !0 }) }, not: function (a) { return this.pushStack(T(this, a, !1), "not", a) }, filter: function (a) { return this.pushStack(T(this, a, !0), "filter", a) }, is: function (a) { return !!a && (typeof a == "string" ? Q.test(a) ? f(a, this.context).index(this[0]) >= 0 : f.filter(a, this).length > 0 : this.filter(a).length > 0) }, closest: function (a, b) { var c = [], d, e, g = this[0]; if (f.isArray(a)) { var h = 1; while (g && g.ownerDocument && g !== b) { for (d = 0; d < a.length; d++) f(g).is(a[d]) && c.push({ selector: a[d], elem: g, level: h }); g = g.parentNode, h++ } return c } var i = Q.test(a) || typeof a != "string" ? f(a, b || this.context) : 0; for (d = 0, e = this.length; d < e; d++) { g = this[d]; while (g) { if (i ? i.index(g) > -1 : f.find.matchesSelector(g, a)) { c.push(g); break } g = g.parentNode; if (!g || !g.ownerDocument || g === b || g.nodeType === 11) break } } c = c.length > 1 ? f.unique(c) : c; return this.pushStack(c, "closest", a) }, index: function (a) { if (!a) return this[0] && this[0].parentNode ? this.prevAll().length : -1; if (typeof a == "string") return f.inArray(this[0], f(a)); return f.inArray(a.jquery ? a[0] : a, this) }, add: function (a, b) { var c = typeof a == "string" ? f(a, b) : f.makeArray(a && a.nodeType ? [a] : a), d = f.merge(this.get(), c); return this.pushStack(S(c[0]) || S(d[0]) ? d : f.unique(d)) }, andSelf: function () { return this.add(this.prevObject) } }), f.each({ parent: function (a) { var b = a.parentNode; return b && b.nodeType !== 11 ? b : null }, parents: function (a) { return f.dir(a, "parentNode") }, parentsUntil: function (a, b, c) { return f.dir(a, "parentNode", c) }, next: function (a) { return f.nth(a, 2, "nextSibling") }, prev: function (a) { return f.nth(a, 2, "previousSibling") }, nextAll: function (a) { return f.dir(a, "nextSibling") }, prevAll: function (a) { return f.dir(a, "previousSibling") }, nextUntil: function (a, b, c) { return f.dir(a, "nextSibling", c) }, prevUntil: function (a, b, c) { return f.dir(a, "previousSibling", c) }, siblings: function (a) { return f.sibling(a.parentNode.firstChild, a) }, children: function (a) { return f.sibling(a.firstChild) }, contents: function (a) { return f.nodeName(a, "iframe") ? a.contentDocument || a.contentWindow.document : f.makeArray(a.childNodes) } }, function (a, b) { f.fn[a] = function (c, d) { var e = f.map(this, b, c); L.test(a) || (d = c), d && typeof d == "string" && (e = f.filter(d, e)), e = this.length > 1 && !R[a] ? f.unique(e) : e, (this.length > 1 || N.test(d)) && M.test(a) && (e = e.reverse()); return this.pushStack(e, a, P.call(arguments).join(",")) } }), f.extend({ filter: function (a, b, c) { c && (a = ":not(" + a + ")"); return b.length === 1 ? f.find.matchesSelector(b[0], a) ? [b[0]] : [] : f.find.matches(a, b) }, dir: function (a, c, d) { var e = [], g = a[c]; while (g && g.nodeType !== 9 && (d === b || g.nodeType !== 1 || !f(g).is(d))) g.nodeType === 1 && e.push(g), g = g[c]; return e }, nth: function (a, b, c, d) { b = b || 1; var e = 0; for (; a; a = a[c]) if (a.nodeType === 1 && ++e === b) break; return a }, sibling: function (a, b) { var c = []; for (; a; a = a.nextSibling) a.nodeType === 1 && a !== b && c.push(a); return c } }); var V = "abbr|article|aside|audio|canvas|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video", W = / jQuery\d+="(?:\d+|null)"/g, X = /^\s+/, Y = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig, Z = /<([\w:]+)/, $ = /<tbody/i, _ = /<|&#?\w+;/, ba = /<(?:script|style)/i, bb = /<(?:script|object|embed|option|style)/i, bc = new RegExp("<(?:" + V + ")", "i"), bd = /checked\s*(?:[^=]|=\s*.checked.)/i, be = /\/(java|ecma)script/i, bf = /^\s*<!(?:\[CDATA\[|\-\-)/, bg = { option: [1, "<select multiple='multiple'>", "</select>"], legend: [1, "<fieldset>", "</fieldset>"], thead: [1, "<table>", "</table>"], tr: [2, "<table><tbody>", "</tbody></table>"], td: [3, "<table><tbody><tr>", "</tr></tbody></table>"], col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"], area: [1, "<map>", "</map>"], _default: [0, "", ""] }, bh = U(c); bg.optgroup = bg.option, bg.tbody = bg.tfoot = bg.colgroup = bg.caption = bg.thead, bg.th = bg.td, f.support.htmlSerialize || (bg._default = [1, "div<div>", "</div>"]), f.fn.extend({ text: function (a) { if (f.isFunction(a)) return this.each(function (b) { var c = f(this); c.text(a.call(this, b, c.text())) }); if (typeof a != "object" && a !== b) return this.empty().append((this[0] && this[0].ownerDocument || c).createTextNode(a)); return f.text(this) }, wrapAll: function (a) { if (f.isFunction(a)) return this.each(function (b) { f(this).wrapAll(a.call(this, b)) }); if (this[0]) { var b = f(a, this[0].ownerDocument).eq(0).clone(!0); this[0].parentNode && b.insertBefore(this[0]), b.map(function () { var a = this; while (a.firstChild && a.firstChild.nodeType === 1) a = a.firstChild; return a }).append(this) } return this }, wrapInner: function (a) { if (f.isFunction(a)) return this.each(function (b) { f(this).wrapInner(a.call(this, b)) }); return this.each(function () { var b = f(this), c = b.contents(); c.length ? c.wrapAll(a) : b.append(a) }) }, wrap: function (a) { var b = f.isFunction(a); return this.each(function (c) { f(this).wrapAll(b ? a.call(this, c) : a) }) }, unwrap: function () { return this.parent().each(function () { f.nodeName(this, "body") || f(this).replaceWith(this.childNodes) }).end() }, append: function () { return this.domManip(arguments, !0, function (a) { this.nodeType === 1 && this.appendChild(a) }) }, prepend: function () { return this.domManip(arguments, !0, function (a) { this.nodeType === 1 && this.insertBefore(a, this.firstChild) }) }, before: function () { if (this[0] && this[0].parentNode) return this.domManip(arguments, !1, function (a) { this.parentNode.insertBefore(a, this) }); if (arguments.length) { var a = f.clean(arguments); a.push.apply(a, this.toArray()); return this.pushStack(a, "before", arguments) } }, after: function () { if (this[0] && this[0].parentNode) return this.domManip(arguments, !1, function (a) { this.parentNode.insertBefore(a, this.nextSibling) }); if (arguments.length) { var a = this.pushStack(this, "after", arguments); a.push.apply(a, f.clean(arguments)); return a } }, remove: function (a, b) { for (var c = 0, d; (d = this[c]) != null; c++) if (!a || f.filter(a, [d]).length) !b && d.nodeType === 1 && (f.cleanData(d.getElementsByTagName("*")), f.cleanData([d])), d.parentNode && d.parentNode.removeChild(d); return this }, empty: function ()
    { for (var a = 0, b; (b = this[a]) != null; a++) { b.nodeType === 1 && f.cleanData(b.getElementsByTagName("*")); while (b.firstChild) b.removeChild(b.firstChild) } return this }, clone: function (a, b) { a = a == null ? !1 : a, b = b == null ? a : b; return this.map(function () { return f.clone(this, a, b) }) }, html: function (a) { if (a === b) return this[0] && this[0].nodeType === 1 ? this[0].innerHTML.replace(W, "") : null; if (typeof a == "string" && !ba.test(a) && (f.support.leadingWhitespace || !X.test(a)) && !bg[(Z.exec(a) || ["", ""])[1].toLowerCase()]) { a = a.replace(Y, "<$1></$2>"); try { for (var c = 0, d = this.length; c < d; c++) this[c].nodeType === 1 && (f.cleanData(this[c].getElementsByTagName("*")), this[c].innerHTML = a) } catch (e) { this.empty().append(a) } } else f.isFunction(a) ? this.each(function (b) { var c = f(this); c.html(a.call(this, b, c.html())) }) : this.empty().append(a); return this }, replaceWith: function (a) { if (this[0] && this[0].parentNode) { if (f.isFunction(a)) return this.each(function (b) { var c = f(this), d = c.html(); c.replaceWith(a.call(this, b, d)) }); typeof a != "string" && (a = f(a).detach()); return this.each(function () { var b = this.nextSibling, c = this.parentNode; f(this).remove(), b ? f(b).before(a) : f(c).append(a) }) } return this.length ? this.pushStack(f(f.isFunction(a) ? a() : a), "replaceWith", a) : this }, detach: function (a) { return this.remove(a, !0) }, domManip: function (a, c, d) { var e, g, h, i, j = a[0], k = []; if (!f.support.checkClone && arguments.length === 3 && typeof j == "string" && bd.test(j)) return this.each(function () { f(this).domManip(a, c, d, !0) }); if (f.isFunction(j)) return this.each(function (e) { var g = f(this); a[0] = j.call(this, e, c ? g.html() : b), g.domManip(a, c, d) }); if (this[0]) { i = j && j.parentNode, f.support.parentNode && i && i.nodeType === 11 && i.childNodes.length === this.length ? e = { fragment: i} : e = f.buildFragment(a, this, k), h = e.fragment, h.childNodes.length === 1 ? g = h = h.firstChild : g = h.firstChild; if (g) { c = c && f.nodeName(g, "tr"); for (var l = 0, m = this.length, n = m - 1; l < m; l++) d.call(c ? bi(this[l], g) : this[l], e.cacheable || m > 1 && l < n ? f.clone(h, !0, !0) : h) } k.length && f.each(k, bp) } return this }
    }), f.buildFragment = function (a, b, d) { var e, g, h, i, j = a[0]; b && b[0] && (i = b[0].ownerDocument || b[0]), i.createDocumentFragment || (i = c), a.length === 1 && typeof j == "string" && j.length < 512 && i === c && j.charAt(0) === "<" && !bb.test(j) && (f.support.checkClone || !bd.test(j)) && (f.support.html5Clone || !bc.test(j)) && (g = !0, h = f.fragments[j], h && h !== 1 && (e = h)), e || (e = i.createDocumentFragment(), f.clean(a, i, e, d)), g && (f.fragments[j] = h ? e : 1); return { fragment: e, cacheable: g} }, f.fragments = {}, f.each({ appendTo: "append", prependTo: "prepend", insertBefore: "before", insertAfter: "after", replaceAll: "replaceWith" }, function (a, b) { f.fn[a] = function (c) { var d = [], e = f(c), g = this.length === 1 && this[0].parentNode; if (g && g.nodeType === 11 && g.childNodes.length === 1 && e.length === 1) { e[b](this[0]); return this } for (var h = 0, i = e.length; h < i; h++) { var j = (h > 0 ? this.clone(!0) : this).get(); f(e[h])[b](j), d = d.concat(j) } return this.pushStack(d, a, e.selector) } }), f.extend({ clone: function (a, b, c) { var d, e, g, h = f.support.html5Clone || !bc.test("<" + a.nodeName) ? a.cloneNode(!0) : bo(a); if ((!f.support.noCloneEvent || !f.support.noCloneChecked) && (a.nodeType === 1 || a.nodeType === 11) && !f.isXMLDoc(a)) { bk(a, h), d = bl(a), e = bl(h); for (g = 0; d[g]; ++g) e[g] && bk(d[g], e[g]) } if (b) { bj(a, h); if (c) { d = bl(a), e = bl(h); for (g = 0; d[g]; ++g) bj(d[g], e[g]) } } d = e = null; return h }, clean: function (a, b, d, e) { var g; b = b || c, typeof b.createElement == "undefined" && (b = b.ownerDocument || b[0] && b[0].ownerDocument || c); var h = [], i; for (var j = 0, k; (k = a[j]) != null; j++) { typeof k == "number" && (k += ""); if (!k) continue; if (typeof k == "string") if (!_.test(k)) k = b.createTextNode(k); else { k = k.replace(Y, "<$1></$2>"); var l = (Z.exec(k) || ["", ""])[1].toLowerCase(), m = bg[l] || bg._default, n = m[0], o = b.createElement("div"); b === c ? bh.appendChild(o) : U(b).appendChild(o), o.innerHTML = m[1] + k + m[2]; while (n--) o = o.lastChild; if (!f.support.tbody) { var p = $.test(k), q = l === "table" && !p ? o.firstChild && o.firstChild.childNodes : m[1] === "<table>" && !p ? o.childNodes : []; for (i = q.length - 1; i >= 0; --i) f.nodeName(q[i], "tbody") && !q[i].childNodes.length && q[i].parentNode.removeChild(q[i]) } !f.support.leadingWhitespace && X.test(k) && o.insertBefore(b.createTextNode(X.exec(k)[0]), o.firstChild), k = o.childNodes } var r; if (!f.support.appendChecked) if (k[0] && typeof (r = k.length) == "number") for (i = 0; i < r; i++) bn(k[i]); else bn(k); k.nodeType ? h.push(k) : h = f.merge(h, k) } if (d) { g = function (a) { return !a.type || be.test(a.type) }; for (j = 0; h[j]; j++) if (e && f.nodeName(h[j], "script") && (!h[j].type || h[j].type.toLowerCase() === "text/javascript")) e.push(h[j].parentNode ? h[j].parentNode.removeChild(h[j]) : h[j]); else { if (h[j].nodeType === 1) { var s = f.grep(h[j].getElementsByTagName("script"), g); h.splice.apply(h, [j + 1, 0].concat(s)) } d.appendChild(h[j]) } } return h }, cleanData: function (a) { var b, c, d = f.cache, e = f.event.special, g = f.support.deleteExpando; for (var h = 0, i; (i = a[h]) != null; h++) { if (i.nodeName && f.noData[i.nodeName.toLowerCase()]) continue; c = i[f.expando]; if (c) { b = d[c]; if (b && b.events) { for (var j in b.events) e[j] ? f.event.remove(i, j) : f.removeEvent(i, j, b.handle); b.handle && (b.handle.elem = null) } g ? delete i[f.expando] : i.removeAttribute && i.removeAttribute(f.expando), delete d[c] } } } }); var bq = /alpha\([^)]*\)/i, br = /opacity=([^)]*)/, bs = /([A-Z]|^ms)/g, bt = /^-?\d+(?:px)?$/i, bu = /^-?\d/, bv = /^([\-+])=([\-+.\de]+)/, bw = { position: "absolute", visibility: "hidden", display: "block" }, bx = ["Left", "Right"], by = ["Top", "Bottom"], bz, bA, bB; f.fn.css = function (a, c) { if (arguments.length === 2 && c === b) return this; return f.access(this, a, c, !0, function (a, c, d) { return d !== b ? f.style(a, c, d) : f.css(a, c) }) }, f.extend({ cssHooks: { opacity: { get: function (a, b) { if (b) { var c = bz(a, "opacity", "opacity"); return c === "" ? "1" : c } return a.style.opacity } } }, cssNumber: { fillOpacity: !0, fontWeight: !0, lineHeight: !0, opacity: !0, orphans: !0, widows: !0, zIndex: !0, zoom: !0 }, cssProps: { "float": f.support.cssFloat ? "cssFloat" : "styleFloat" }, style: function (a, c, d, e) { if (!!a && a.nodeType !== 3 && a.nodeType !== 8 && !!a.style) { var g, h, i = f.camelCase(c), j = a.style, k = f.cssHooks[i]; c = f.cssProps[i] || i; if (d === b) { if (k && "get" in k && (g = k.get(a, !1, e)) !== b) return g; return j[c] } h = typeof d, h === "string" && (g = bv.exec(d)) && (d = +(g[1] + 1) * +g[2] + parseFloat(f.css(a, c)), h = "number"); if (d == null || h === "number" && isNaN(d)) return; h === "number" && !f.cssNumber[i] && (d += "px"); if (!k || !("set" in k) || (d = k.set(a, d)) !== b) try { j[c] = d } catch (l) { } } }, css: function (a, c, d) { var e, g; c = f.camelCase(c), g = f.cssHooks[c], c = f.cssProps[c] || c, c === "cssFloat" && (c = "float"); if (g && "get" in g && (e = g.get(a, !0, d)) !== b) return e; if (bz) return bz(a, c) }, swap: function (a, b, c) { var d = {}; for (var e in b) d[e] = a.style[e], a.style[e] = b[e]; c.call(a); for (e in b) a.style[e] = d[e] } }), f.curCSS = f.css, f.each(["height", "width"], function (a, b) { f.cssHooks[b] = { get: function (a, c, d) { var e; if (c) { if (a.offsetWidth !== 0) return bC(a, b, d); f.swap(a, bw, function () { e = bC(a, b, d) }); return e } }, set: function (a, b) { if (!bt.test(b)) return b; b = parseFloat(b); if (b >= 0) return b + "px" } } }), f.support.opacity || (f.cssHooks.opacity = { get: function (a, b) { return br.test((b && a.currentStyle ? a.currentStyle.filter : a.style.filter) || "") ? parseFloat(RegExp.$1) / 100 + "" : b ? "1" : "" }, set: function (a, b) { var c = a.style, d = a.currentStyle, e = f.isNumeric(b) ? "alpha(opacity=" + b * 100 + ")" : "", g = d && d.filter || c.filter || ""; c.zoom = 1; if (b >= 1 && f.trim(g.replace(bq, "")) === "") { c.removeAttribute("filter"); if (d && !d.filter) return } c.filter = bq.test(g) ? g.replace(bq, e) : g + " " + e } }), f(function () { f.support.reliableMarginRight || (f.cssHooks.marginRight = { get: function (a, b) { var c; f.swap(a, { display: "inline-block" }, function () { b ? c = bz(a, "margin-right", "marginRight") : c = a.style.marginRight }); return c } }) }), c.defaultView && c.defaultView.getComputedStyle && (bA = function (a, b) { var c, d, e; b = b.replace(bs, "-$1").toLowerCase(), (d = a.ownerDocument.defaultView) && (e = d.getComputedStyle(a, null)) && (c = e.getPropertyValue(b), c === "" && !f.contains(a.ownerDocument.documentElement, a) && (c = f.style(a, b))); return c }), c.documentElement.currentStyle && (bB = function (a, b) { var c, d, e, f = a.currentStyle && a.currentStyle[b], g = a.style; f === null && g && (e = g[b]) && (f = e), !bt.test(f) && bu.test(f) && (c = g.left, d = a.runtimeStyle && a.runtimeStyle.left, d && (a.runtimeStyle.left = a.currentStyle.left), g.left = b === "fontSize" ? "1em" : f || 0, f = g.pixelLeft + "px", g.left = c, d && (a.runtimeStyle.left = d)); return f === "" ? "auto" : f }), bz = bA || bB, f.expr && f.expr.filters && (f.expr.filters.hidden = function (a) { var b = a.offsetWidth, c = a.offsetHeight; return b === 0 && c === 0 || !f.support.reliableHiddenOffsets && (a.style && a.style.display || f.css(a, "display")) === "none" }, f.expr.filters.visible = function (a) { return !f.expr.filters.hidden(a) }); var bD = /%20/g, bE = /\[\]$/, bF = /\r?\n/g, bG = /#.*$/, bH = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg, bI = /^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i, bJ = /^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/, bK = /^(?:GET|HEAD)$/, bL = /^\/\//, bM = /\?/, bN = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi, bO = /^(?:select|textarea)/i, bP = /\s+/, bQ = /([?&])_=[^&]*/, bR = /^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+))?)?/, bS = f.fn.load, bT = {}, bU = {}, bV, bW, bX = ["*/"] + ["*"]; try { bV = e.href } catch (bY) { bV = c.createElement("a"), bV.href = "", bV = bV.href } bW = bR.exec(bV.toLowerCase()) || [], f.fn.extend({ load: function (a, c, d) { if (typeof a != "string" && bS) return bS.apply(this, arguments); if (!this.length) return this; var e = a.indexOf(" "); if (e >= 0) { var g = a.slice(e, a.length); a = a.slice(0, e) } var h = "GET"; c && (f.isFunction(c) ? (d = c, c = b) : typeof c == "object" && (c = f.param(c, f.ajaxSettings.traditional), h = "POST")); var i = this; f.ajax({ url: a, type: h, dataType: "html", data: c, complete: function (a, b, c) { c = a.responseText, a.isResolved() && (a.done(function (a) { c = a }), i.html(g ? f("<div>").append(c.replace(bN, "")).find(g) : c)), d && i.each(d, [c, b, a]) } }); return this }, serialize: function () { return f.param(this.serializeArray()) }, serializeArray: function () { return this.map(function () { return this.elements ? f.makeArray(this.elements) : this }).filter(function () { return this.name && !this.disabled && (this.checked || bO.test(this.nodeName) || bI.test(this.type)) }).map(function (a, b) { var c = f(this).val(); return c == null ? null : f.isArray(c) ? f.map(c, function (a, c) { return { name: b.name, value: a.replace(bF, "\r\n")} }) : { name: b.name, value: c.replace(bF, "\r\n")} }).get() } }), f.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "), function (a, b) { f.fn[b] = function (a) { return this.on(b, a) } }), f.each(["get", "post"], function (a, c) { f[c] = function (a, d, e, g) { f.isFunction(d) && (g = g || e, e = d, d = b); return f.ajax({ type: c, url: a, data: d, success: e, dataType: g }) } }), f.extend({ getScript: function (a, c) { return f.get(a, b, c, "script") }, getJSON: function (a, b, c) { return f.get(a, b, c, "json") }, ajaxSetup: function (a, b) { b ? b_(a, f.ajaxSettings) : (b = a, a = f.ajaxSettings), b_(a, b); return a }, ajaxSettings: { url: bV, isLocal: bJ.test(bW[1]), global: !0, type: "GET", contentType: "application/x-www-form-urlencoded", processData: !0, async: !0, accepts: { xml: "application/xml, text/xml", html: "text/html", text: "text/plain", json: "application/json, text/javascript", "*": bX }, contents: { xml: /xml/, html: /html/, json: /json/ }, responseFields: { xml: "responseXML", text: "responseText" }, converters: { "* text": a.String, "text html": !0, "text json": f.parseJSON, "text xml": f.parseXML }, flatOptions: { context: !0, url: !0} }, ajaxPrefilter: bZ(bT), ajaxTransport: bZ(bU), ajax: function (a, c) { function w(a, c, l, m) { if (s !== 2) { s = 2, q && clearTimeout(q), p = b, n = m || "", v.readyState = a > 0 ? 4 : 0; var o, r, u, w = c, x = l ? cb(d, v, l) : b, y, z; if (a >= 200 && a < 300 || a === 304) { if (d.ifModified) { if (y = v.getResponseHeader("Last-Modified")) f.lastModified[k] = y; if (z = v.getResponseHeader("Etag")) f.etag[k] = z } if (a === 304) w = "notmodified", o = !0; else try { r = cc(d, x), w = "success", o = !0 } catch (A) { w = "parsererror", u = A } } else { u = w; if (!w || a) w = "error", a < 0 && (a = 0) } v.status = a, v.statusText = "" + (c || w), o ? h.resolveWith(e, [r, w, v]) : h.rejectWith(e, [v, w, u]), v.statusCode(j), j = b, t && g.trigger("ajax" + (o ? "Success" : "Error"), [v, d, o ? r : u]), i.fireWith(e, [v, w]), t && (g.trigger("ajaxComplete", [v, d]), --f.active || f.event.trigger("ajaxStop")) } } typeof a == "object" && (c = a, a = b), c = c || {}; var d = f.ajaxSetup({}, c), e = d.context || d, g = e !== d && (e.nodeType || e instanceof f) ? f(e) : f.event, h = f.Deferred(), i = f.Callbacks("once memory"), j = d.statusCode || {}, k, l = {}, m = {}, n, o, p, q, r, s = 0, t, u, v = { readyState: 0, setRequestHeader: function (a, b) { if (!s) { var c = a.toLowerCase(); a = m[c] = m[c] || a, l[a] = b } return this }, getAllResponseHeaders: function () { return s === 2 ? n : null }, getResponseHeader: function (a) { var c; if (s === 2) { if (!o) { o = {}; while (c = bH.exec(n)) o[c[1].toLowerCase()] = c[2] } c = o[a.toLowerCase()] } return c === b ? null : c }, overrideMimeType: function (a) { s || (d.mimeType = a); return this }, abort: function (a) { a = a || "abort", p && p.abort(a), w(0, a); return this } }; h.promise(v), v.success = v.done, v.error = v.fail, v.complete = i.add, v.statusCode = function (a) { if (a) { var b; if (s < 2) for (b in a) j[b] = [j[b], a[b]]; else b = a[v.status], v.then(b, b) } return this }, d.url = ((a || d.url) + "").replace(bG, "").replace(bL, bW[1] + "//"), d.dataTypes = f.trim(d.dataType || "*").toLowerCase().split(bP), d.crossDomain == null && (r = bR.exec(d.url.toLowerCase()), d.crossDomain = !(!r || r[1] == bW[1] && r[2] == bW[2] && (r[3] || (r[1] === "http:" ? 80 : 443)) == (bW[3] || (bW[1] === "http:" ? 80 : 443)))), d.data && d.processData && typeof d.data != "string" && (d.data = f.param(d.data, d.traditional)), b$(bT, d, c, v); if (s === 2) return !1; t = d.global, d.type = d.type.toUpperCase(), d.hasContent = !bK.test(d.type), t && f.active++ === 0 && f.event.trigger("ajaxStart"); if (!d.hasContent) { d.data && (d.url += (bM.test(d.url) ? "&" : "?") + d.data, delete d.data), k = d.url; if (d.cache === !1) { var x = f.now(), y = d.url.replace(bQ, "$1_=" + x); d.url = y + (y === d.url ? (bM.test(d.url) ? "&" : "?") + "_=" + x : "") } } (d.data && d.hasContent && d.contentType !== !1 || c.contentType) && v.setRequestHeader("Content-Type", d.contentType), d.ifModified && (k = k || d.url, f.lastModified[k] && v.setRequestHeader("If-Modified-Since", f.lastModified[k]), f.etag[k] && v.setRequestHeader("If-None-Match", f.etag[k])), v.setRequestHeader("Accept", d.dataTypes[0] && d.accepts[d.dataTypes[0]] ? d.accepts[d.dataTypes[0]] + (d.dataTypes[0] !== "*" ? ", " + bX + "; q=0.01" : "") : d.accepts["*"]); for (u in d.headers) v.setRequestHeader(u, d.headers[u]); if (d.beforeSend && (d.beforeSend.call(e, v, d) === !1 || s === 2)) { v.abort(); return !1 } for (u in { success: 1, error: 1, complete: 1 }) v[u](d[u]); p = b$(bU, d, c, v); if (!p) w(-1, "No Transport"); else { v.readyState = 1, t && g.trigger("ajaxSend", [v, d]), d.async && d.timeout > 0 && (q = setTimeout(function () { v.abort("timeout") }, d.timeout)); try { s = 1, p.send(l, w) } catch (z) { if (s < 2) w(-1, z); else throw z } } return v }, param: function (a, c) { var d = [], e = function (a, b) { b = f.isFunction(b) ? b() : b, d[d.length] = encodeURIComponent(a) + "=" + encodeURIComponent(b) }; c === b && (c = f.ajaxSettings.traditional); if (f.isArray(a) || a.jquery && !f.isPlainObject(a)) f.each(a, function () { e(this.name, this.value) }); else for (var g in a) ca(g, a[g], c, e); return d.join("&").replace(bD, "+") } }), f.extend({ active: 0, lastModified: {}, etag: {} }); var cd = f.now(), ce = /(\=)\?(&|$)|\?\?/i; f.ajaxSetup({ jsonp: "callback", jsonpCallback: function () { return f.expando + "_" + cd++ } }), f.ajaxPrefilter("json jsonp", function (b, c, d) { var e = b.contentType === "application/x-www-form-urlencoded" && typeof b.data == "string"; if (b.dataTypes[0] === "jsonp" || b.jsonp !== !1 && (ce.test(b.url) || e && ce.test(b.data))) { var g, h = b.jsonpCallback = f.isFunction(b.jsonpCallback) ? b.jsonpCallback() : b.jsonpCallback, i = a[h], j = b.url, k = b.data, l = "$1" + h + "$2"; b.jsonp !== !1 && (j = j.replace(ce, l), b.url === j && (e && (k = k.replace(ce, l)), b.data === k && (j += (/\?/.test(j) ? "&" : "?") + b.jsonp + "=" + h))), b.url = j, b.data = k, a[h] = function (a) { g = [a] }, d.always(function () { a[h] = i, g && f.isFunction(i) && a[h](g[0]) }), b.converters["script json"] = function () { g || f.error(h + " was not called"); return g[0] }, b.dataTypes[0] = "json"; return "script" } }), f.ajaxSetup({ accepts: { script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript" }, contents: { script: /javascript|ecmascript/ }, converters: { "text script": function (a) { f.globalEval(a); return a } } }), f.ajaxPrefilter("script", function (a) { a.cache === b && (a.cache = !1), a.crossDomain && (a.type = "GET", a.global = !1) }), f.ajaxTransport("script", function (a) { if (a.crossDomain) { var d, e = c.head || c.getElementsByTagName("head")[0] || c.documentElement; return { send: function (f, g) { d = c.createElement("script"), d.async = "async", a.scriptCharset && (d.charset = a.scriptCharset), d.src = a.url, d.onload = d.onreadystatechange = function (a, c) { if (c || !d.readyState || /loaded|complete/.test(d.readyState)) d.onload = d.onreadystatechange = null, e && d.parentNode && e.removeChild(d), d = b, c || g(200, "success") }, e.insertBefore(d, e.firstChild) }, abort: function () { d && d.onload(0, 1) } } } }); var cf = a.ActiveXObject ? function () { for (var a in ch) ch[a](0, 1) } : !1, cg = 0, ch; f.ajaxSettings.xhr = a.ActiveXObject ? function () { return !this.isLocal && ci() || cj() } : ci, function (a) { f.extend(f.support, { ajax: !!a, cors: !!a && "withCredentials" in a }) } (f.ajaxSettings.xhr()), f.support.ajax && f.ajaxTransport(function (c) { if (!c.crossDomain || f.support.cors) { var d; return { send: function (e, g) { var h = c.xhr(), i, j; c.username ? h.open(c.type, c.url, c.async, c.username, c.password) : h.open(c.type, c.url, c.async); if (c.xhrFields) for (j in c.xhrFields) h[j] = c.xhrFields[j]; c.mimeType && h.overrideMimeType && h.overrideMimeType(c.mimeType), !c.crossDomain && !e["X-Requested-With"] && (e["X-Requested-With"] = "XMLHttpRequest"); try { for (j in e) h.setRequestHeader(j, e[j]) } catch (k) { } h.send(c.hasContent && c.data || null), d = function (a, e) { var j, k, l, m, n; try { if (d && (e || h.readyState === 4)) { d = b, i && (h.onreadystatechange = f.noop, cf && delete ch[i]); if (e) h.readyState !== 4 && h.abort(); else { j = h.status, l = h.getAllResponseHeaders(), m = {}, n = h.responseXML, n && n.documentElement && (m.xml = n), m.text = h.responseText; try { k = h.statusText } catch (o) { k = "" } !j && c.isLocal && !c.crossDomain ? j = m.text ? 200 : 404 : j === 1223 && (j = 204) } } } catch (p) { e || g(-1, p) } m && g(j, k, m, l) }, !c.async || h.readyState === 4 ? d() : (i = ++cg, cf && (ch || (ch = {}, f(a).unload(cf)), ch[i] = d), h.onreadystatechange = d) }, abort: function () { d && d(0, 1) } } } }); var ck = {}, cl, cm, cn = /^(?:toggle|show|hide)$/, co = /^([+\-]=)?([\d+.\-]+)([a-z%]*)$/i, cp, cq = [["height", "marginTop", "marginBottom", "paddingTop", "paddingBottom"], ["width", "marginLeft", "marginRight", "paddingLeft", "paddingRight"], ["opacity"]], cr; f.fn.extend({ show: function (a, b, c) { var d, e; if (a || a === 0) return this.animate(cu("show", 3), a, b, c); for (var g = 0, h = this.length; g < h; g++) d = this[g], d.style && (e = d.style.display, !f._data(d, "olddisplay") && e === "none" && (e = d.style.display = ""), e === "" && f.css(d, "display") === "none" && f._data(d, "olddisplay", cv(d.nodeName))); for (g = 0; g < h; g++) { d = this[g]; if (d.style) { e = d.style.display; if (e === "" || e === "none") d.style.display = f._data(d, "olddisplay") || "" } } return this }, hide: function (a, b, c) { if (a || a === 0) return this.animate(cu("hide", 3), a, b, c); var d, e, g = 0, h = this.length; for (; g < h; g++) d = this[g], d.style && (e = f.css(d, "display"), e !== "none" && !f._data(d, "olddisplay") && f._data(d, "olddisplay", e)); for (g = 0; g < h; g++) this[g].style && (this[g].style.display = "none"); return this }, _toggle: f.fn.toggle, toggle: function (a, b, c) { var d = typeof a == "boolean"; f.isFunction(a) && f.isFunction(b) ? this._toggle.apply(this, arguments) : a == null || d ? this.each(function () { var b = d ? a : f(this).is(":hidden"); f(this)[b ? "show" : "hide"]() }) : this.animate(cu("toggle", 3), a, b, c); return this }, fadeTo: function (a, b, c, d) { return this.filter(":hidden").css("opacity", 0).show().end().animate({ opacity: b }, a, c, d) }, animate: function (a, b, c, d) { function g() { e.queue === !1 && f._mark(this); var b = f.extend({}, e), c = this.nodeType === 1, d = c && f(this).is(":hidden"), g, h, i, j, k, l, m, n, o; b.animatedProperties = {}; for (i in a) { g = f.camelCase(i), i !== g && (a[g] = a[i], delete a[i]), h = a[g], f.isArray(h) ? (b.animatedProperties[g] = h[1], h = a[g] = h[0]) : b.animatedProperties[g] = b.specialEasing && b.specialEasing[g] || b.easing || "swing"; if (h === "hide" && d || h === "show" && !d) return b.complete.call(this); c && (g === "height" || g === "width") && (b.overflow = [this.style.overflow, this.style.overflowX, this.style.overflowY], f.css(this, "display") === "inline" && f.css(this, "float") === "none" && (!f.support.inlineBlockNeedsLayout || cv(this.nodeName) === "inline" ? this.style.display = "inline-block" : this.style.zoom = 1)) } b.overflow != null && (this.style.overflow = "hidden"); for (i in a) j = new f.fx(this, b, i), h = a[i], cn.test(h) ? (o = f._data(this, "toggle" + i) || (h === "toggle" ? d ? "show" : "hide" : 0), o ? (f._data(this, "toggle" + i, o === "show" ? "hide" : "show"), j[o]()) : j[h]()) : (k = co.exec(h), l = j.cur(), k ? (m = parseFloat(k[2]), n = k[3] || (f.cssNumber[i] ? "" : "px"), n !== "px" && (f.style(this, i, (m || 1) + n), l = (m || 1) / j.cur() * l, f.style(this, i, l + n)), k[1] && (m = (k[1] === "-=" ? -1 : 1) * m + l), j.custom(l, m, n)) : j.custom(l, h, "")); return !0 } var e = f.speed(b, c, d); if (f.isEmptyObject(a)) return this.each(e.complete, [!1]); a = f.extend({}, a); return e.queue === !1 ? this.each(g) : this.queue(e.queue, g) }, stop: function (a, c, d) { typeof a != "string" && (d = c, c = a, a = b), c && a !== !1 && this.queue(a || "fx", []); return this.each(function () { function h(a, b, c) { var e = b[c]; f.removeData(a, c, !0), e.stop(d) } var b, c = !1, e = f.timers, g = f._data(this); d || f._unmark(!0, this); if (a == null) for (b in g) g[b] && g[b].stop && b.indexOf(".run") === b.length - 4 && h(this, g, b); else g[b = a + ".run"] && g[b].stop && h(this, g, b); for (b = e.length; b--; ) e[b].elem === this && (a == null || e[b].queue === a) && (d ? e[b](!0) : e[b].saveState(), c = !0, e.splice(b, 1)); (!d || !c) && f.dequeue(this, a) }) } }), f.each({ slideDown: cu("show", 1), slideUp: cu("hide", 1), slideToggle: cu("toggle", 1), fadeIn: { opacity: "show" }, fadeOut: { opacity: "hide" }, fadeToggle: { opacity: "toggle"} }, function (a, b) { f.fn[a] = function (a, c, d) { return this.animate(b, a, c, d) } }), f.extend({ speed: function (a, b, c) { var d = a && typeof a == "object" ? f.extend({}, a) : { complete: c || !c && b || f.isFunction(a) && a, duration: a, easing: c && b || b && !f.isFunction(b) && b }; d.duration = f.fx.off ? 0 : typeof d.duration == "number" ? d.duration : d.duration in f.fx.speeds ? f.fx.speeds[d.duration] : f.fx.speeds._default; if (d.queue == null || d.queue === !0) d.queue = "fx"; d.old = d.complete, d.complete = function (a) { f.isFunction(d.old) && d.old.call(this), d.queue ? f.dequeue(this, d.queue) : a !== !1 && f._unmark(this) }; return d }, easing: { linear: function (a, b, c, d) { return c + d * a }, swing: function (a, b, c, d) { return (-Math.cos(a * Math.PI) / 2 + .5) * d + c } }, timers: [], fx: function (a, b, c) { this.options = b, this.elem = a, this.prop = c, b.orig = b.orig || {} } }), f.fx.prototype = { update: function () { this.options.step && this.options.step.call(this.elem, this.now, this), (f.fx.step[this.prop] || f.fx.step._default)(this) }, cur: function () { if (this.elem[this.prop] != null && (!this.elem.style || this.elem.style[this.prop] == null)) return this.elem[this.prop]; var a, b = f.css(this.elem, this.prop); return isNaN(a = parseFloat(b)) ? !b || b === "auto" ? 0 : b : a }, custom: function (a, c, d) { function h(a) { return e.step(a) } var e = this, g = f.fx; this.startTime = cr || cs(), this.end = c, this.now = this.start = a, this.pos = this.state = 0, this.unit = d || this.unit || (f.cssNumber[this.prop] ? "" : "px"), h.queue = this.options.queue, h.elem = this.elem, h.saveState = function () { e.options.hide && f._data(e.elem, "fxshow" + e.prop) === b && f._data(e.elem, "fxshow" + e.prop, e.start) }, h() && f.timers.push(h) && !cp && (cp = setInterval(g.tick, g.interval)) }, show: function () { var a = f._data(this.elem, "fxshow" + this.prop); this.options.orig[this.prop] = a || f.style(this.elem, this.prop), this.options.show = !0, a !== b ? this.custom(this.cur(), a) : this.custom(this.prop === "width" || this.prop === "height" ? 1 : 0, this.cur()), f(this.elem).show() }, hide: function () { this.options.orig[this.prop] = f._data(this.elem, "fxshow" + this.prop) || f.style(this.elem, this.prop), this.options.hide = !0, this.custom(this.cur(), 0) }, step: function (a) { var b, c, d, e = cr || cs(), g = !0, h = this.elem, i = this.options; if (a || e >= i.duration + this.startTime) { this.now = this.end, this.pos = this.state = 1, this.update(), i.animatedProperties[this.prop] = !0; for (b in i.animatedProperties) i.animatedProperties[b] !== !0 && (g = !1); if (g) { i.overflow != null && !f.support.shrinkWrapBlocks && f.each(["", "X", "Y"], function (a, b) { h.style["overflow" + b] = i.overflow[a] }), i.hide && f(h).hide(); if (i.hide || i.show) for (b in i.animatedProperties) f.style(h, b, i.orig[b]), f.removeData(h, "fxshow" + b, !0), f.removeData(h, "toggle" + b, !0); d = i.complete, d && (i.complete = !1, d.call(h)) } return !1 } i.duration == Infinity ? this.now = e : (c = e - this.startTime, this.state = c / i.duration, this.pos = f.easing[i.animatedProperties[this.prop]](this.state, c, 0, 1, i.duration), this.now = this.start + (this.end - this.start) * this.pos), this.update(); return !0 } }, f.extend(f.fx, { tick: function () { var a, b = f.timers, c = 0; for (; c < b.length; c++) a = b[c], !a() && b[c] === a && b.splice(c--, 1); b.length || f.fx.stop() }, interval: 13, stop: function () { clearInterval(cp), cp = null }, speeds: { slow: 600, fast: 200, _default: 400 }, step: { opacity: function (a) { f.style(a.elem, "opacity", a.now) }, _default: function (a) { a.elem.style && a.elem.style[a.prop] != null ? a.elem.style[a.prop] = a.now + a.unit : a.elem[a.prop] = a.now } } }), f.each(["width", "height"], function (a, b) { f.fx.step[b] = function (a) { f.style(a.elem, b, Math.max(0, a.now) + a.unit) } }), f.expr && f.expr.filters && (f.expr.filters.animated = function (a) { return f.grep(f.timers, function (b) { return a === b.elem }).length }); var cw = /^t(?:able|d|h)$/i, cx = /^(?:body|html)$/i; "getBoundingClientRect" in c.documentElement ? f.fn.offset = function (a) { var b = this[0], c; if (a) return this.each(function (b) { f.offset.setOffset(this, a, b) }); if (!b || !b.ownerDocument) return null; if (b === b.ownerDocument.body) return f.offset.bodyOffset(b); try { c = b.getBoundingClientRect() } catch (d) { } var e = b.ownerDocument, g = e.documentElement; if (!c || !f.contains(g, b)) return c ? { top: c.top, left: c.left} : { top: 0, left: 0 }; var h = e.body, i = cy(e), j = g.clientTop || h.clientTop || 0, k = g.clientLeft || h.clientLeft || 0, l = i.pageYOffset || f.support.boxModel && g.scrollTop || h.scrollTop, m = i.pageXOffset || f.support.boxModel && g.scrollLeft || h.scrollLeft, n = c.top + l - j, o = c.left + m - k; return { top: n, left: o} } : f.fn.offset = function (a) { var b = this[0]; if (a) return this.each(function (b) { f.offset.setOffset(this, a, b) }); if (!b || !b.ownerDocument) return null; if (b === b.ownerDocument.body) return f.offset.bodyOffset(b); var c, d = b.offsetParent, e = b, g = b.ownerDocument, h = g.documentElement, i = g.body, j = g.defaultView, k = j ? j.getComputedStyle(b, null) : b.currentStyle, l = b.offsetTop, m = b.offsetLeft; while ((b = b.parentNode) && b !== i && b !== h) { if (f.support.fixedPosition && k.position === "fixed") break; c = j ? j.getComputedStyle(b, null) : b.currentStyle, l -= b.scrollTop, m -= b.scrollLeft, b === d && (l += b.offsetTop, m += b.offsetLeft, f.support.doesNotAddBorder && (!f.support.doesAddBorderForTableAndCells || !cw.test(b.nodeName)) && (l += parseFloat(c.borderTopWidth) || 0, m += parseFloat(c.borderLeftWidth) || 0), e = d, d = b.offsetParent), f.support.subtractsBorderForOverflowNotVisible && c.overflow !== "visible" && (l += parseFloat(c.borderTopWidth) || 0, m += parseFloat(c.borderLeftWidth) || 0), k = c } if (k.position === "relative" || k.position === "static") l += i.offsetTop, m += i.offsetLeft; f.support.fixedPosition && k.position === "fixed" && (l += Math.max(h.scrollTop, i.scrollTop), m += Math.max(h.scrollLeft, i.scrollLeft)); return { top: l, left: m} }, f.offset = { bodyOffset: function (a) { var b = a.offsetTop, c = a.offsetLeft; f.support.doesNotIncludeMarginInBodyOffset && (b += parseFloat(f.css(a, "marginTop")) || 0, c += parseFloat(f.css(a, "marginLeft")) || 0); return { top: b, left: c} }, setOffset: function (a, b, c) { var d = f.css(a, "position"); d === "static" && (a.style.position = "relative"); var e = f(a), g = e.offset(), h = f.css(a, "top"), i = f.css(a, "left"), j = (d === "absolute" || d === "fixed") && f.inArray("auto", [h, i]) > -1, k = {}, l = {}, m, n; j ? (l = e.position(), m = l.top, n = l.left) : (m = parseFloat(h) || 0, n = parseFloat(i) || 0), f.isFunction(b) && (b = b.call(a, c, g)), b.top != null && (k.top = b.top - g.top + m), b.left != null && (k.left = b.left - g.left + n), "using" in b ? b.using.call(a, k) : e.css(k) } }, f.fn.extend({ position: function () { if (!this[0]) return null; var a = this[0], b = this.offsetParent(), c = this.offset(), d = cx.test(b[0].nodeName) ? { top: 0, left: 0} : b.offset(); c.top -= parseFloat(f.css(a, "marginTop")) || 0, c.left -= parseFloat(f.css(a, "marginLeft")) || 0, d.top += parseFloat(f.css(b[0], "borderTopWidth")) || 0, d.left += parseFloat(f.css(b[0], "borderLeftWidth")) || 0; return { top: c.top - d.top, left: c.left - d.left} }, offsetParent: function () { return this.map(function () { var a = this.offsetParent || c.body; while (a && !cx.test(a.nodeName) && f.css(a, "position") === "static") a = a.offsetParent; return a }) } }), f.each(["Left", "Top"], function (a, c) { var d = "scroll" + c; f.fn[d] = function (c) { var e, g; if (c === b) { e = this[0]; if (!e) return null; g = cy(e); return g ? "pageXOffset" in g ? g[a ? "pageYOffset" : "pageXOffset"] : f.support.boxModel && g.document.documentElement[d] || g.document.body[d] : e[d] } return this.each(function () { g = cy(this), g ? g.scrollTo(a ? f(g).scrollLeft() : c, a ? c : f(g).scrollTop()) : this[d] = c }) } }), f.each(["Height", "Width"], function (a, c) { var d = c.toLowerCase(); f.fn["inner" + c] = function () { var a = this[0]; return a ? a.style ? parseFloat(f.css(a, d, "padding")) : this[d]() : null }, f.fn["outer" + c] = function (a) { var b = this[0]; return b ? b.style ? parseFloat(f.css(b, d, a ? "margin" : "border")) : this[d]() : null }, f.fn[d] = function (a) { var e = this[0]; if (!e) return a == null ? null : this; if (f.isFunction(a)) return this.each(function (b) { var c = f(this); c[d](a.call(this, b, c[d]())) }); if (f.isWindow(e)) { var g = e.document.documentElement["client" + c], h = e.document.body; return e.document.compatMode === "CSS1Compat" && g || h && h["client" + c] || g } if (e.nodeType === 9) return Math.max(e.documentElement["client" + c], e.body["scroll" + c], e.documentElement["scroll" + c], e.body["offset" + c], e.documentElement["offset" + c]); if (a === b) { var i = f.css(e, d), j = parseFloat(i); return f.isNumeric(j) ? j : i } return this.css(d, typeof a == "string" ? a : a + "px") } }), a.jQuery = a.$ = f, typeof define == "function" && define.amd && define.amd.jQuery && define("jquery", [], function () { return f })
})(window);





(function ($) { function Datepicker() { this._defaults = { pickerClass: '', showOnFocus: true, showTrigger: null, showAnim: 'show', showOptions: {}, showSpeed: 'normal', popupContainer: null, alignment: 'bottom', fixedWeeks: false, firstDay: 0, calculateWeek: this.iso8601Week, monthsToShow: 1, monthsOffset: 0, monthsToStep: 1, monthsToJump: 12, useMouseWheel: true, changeMonth: true, yearRange: 'c-10:c+10', shortYearCutoff: '+10', showOtherMonths: false, selectOtherMonths: false, defaultDate: null, selectDefaultDate: false, minDate: null, maxDate: null, dateFormat: 'mm/dd/yyyy', autoSize: false, rangeSelect: false, rangeSeparator: ' - ', multiSelect: 0, multiSeparator: ',', onDate: null, onShow: null, onChangeMonthYear: null, onSelect: null, onClose: null, altField: null, altFormat: null, constrainInput: true, commandsAsDateFormat: false, commands: this.commands }; this.regional = { '': { monthNames: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'], monthNamesShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'], dayNames: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'], dayNamesShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'], dayNamesMin: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'], dateFormat: 'mm/dd/yyyy', firstDay: 0, renderer: this.defaultRenderer, prevText: '&lt;Prev', prevStatus: 'Show the previous month', prevJumpText: '&lt;&lt;', prevJumpStatus: 'Show the previous year', nextText: 'Next&gt;', nextStatus: 'Show the next month', nextJumpText: '&gt;&gt;', nextJumpStatus: 'Show the next year', currentText: 'Current', currentStatus: 'Show the current month', todayText: 'Today', todayStatus: 'Show today\'s month', clearText: 'Clear', clearStatus: 'Clear all the dates', closeText: 'Close', closeStatus: 'Close the datepicker', yearStatus: 'Change the year', monthStatus: 'Change the month', weekText: 'Wk', weekStatus: 'Week of the year', dayStatus: 'Select DD, M d, yyyy', defaultStatus: 'Select a date', isRTL: false} }; $.extend(this._defaults, this.regional['']); this._disabled = [] } $.extend(Datepicker.prototype, { dataName: 'datepick', markerClass: 'hasDatepick', _popupClass: 'datepick-popup', _triggerClass: 'datepick-trigger', _disableClass: 'datepick-disable', _coverClass: 'datepick-cover', _monthYearClass: 'datepick-month-year', _curMonthClass: 'datepick-month-', _anyYearClass: 'datepick-any-year', _curDoWClass: 'datepick-dow-', commands: { prev: { text: 'prevText', status: 'prevStatus', keystroke: { keyCode: 33 }, enabled: function (inst) { var minDate = inst.curMinDate(); return (!minDate || $.datepick.add($.datepick.day($.datepick.add($.datepick.newDate(inst.drawDate), 1 - inst.get('monthsToStep') - inst.get('monthsOffset'), 'm'), 1), -1, 'd').getTime() >= minDate.getTime()) }, date: function (inst) { return $.datepick.day($.datepick.add($.datepick.newDate(inst.drawDate), -inst.get('monthsToStep') - inst.get('monthsOffset'), 'm'), 1) }, action: function (inst) { $.datepick.changeMonth(this, -inst.get('monthsToStep')) } }, prevJump: { text: 'prevJumpText', status: 'prevJumpStatus', keystroke: { keyCode: 33, ctrlKey: true }, enabled: function (inst) { var minDate = inst.curMinDate(); return (!minDate || $.datepick.add($.datepick.day($.datepick.add($.datepick.newDate(inst.drawDate), 1 - inst.get('monthsToJump') - inst.get('monthsOffset'), 'm'), 1), -1, 'd').getTime() >= minDate.getTime()) }, date: function (inst) { return $.datepick.day($.datepick.add($.datepick.newDate(inst.drawDate), -inst.get('monthsToJump') - inst.get('monthsOffset'), 'm'), 1) }, action: function (inst) { $.datepick.changeMonth(this, -inst.get('monthsToJump')) } }, next: { text: 'nextText', status: 'nextStatus', keystroke: { keyCode: 34 }, enabled: function (inst) { var maxDate = inst.get('maxDate'); return (!maxDate || $.datepick.day($.datepick.add($.datepick.newDate(inst.drawDate), inst.get('monthsToStep') - inst.get('monthsOffset'), 'm'), 1).getTime() <= maxDate.getTime()) }, date: function (inst) { return $.datepick.day($.datepick.add($.datepick.newDate(inst.drawDate), inst.get('monthsToStep') - inst.get('monthsOffset'), 'm'), 1) }, action: function (inst) { $.datepick.changeMonth(this, inst.get('monthsToStep')) } }, nextJump: { text: 'nextJumpText', status: 'nextJumpStatus', keystroke: { keyCode: 34, ctrlKey: true }, enabled: function (inst) { var maxDate = inst.get('maxDate'); return (!maxDate || $.datepick.day($.datepick.add($.datepick.newDate(inst.drawDate), inst.get('monthsToJump') - inst.get('monthsOffset'), 'm'), 1).getTime() <= maxDate.getTime()) }, date: function (inst) { return $.datepick.day($.datepick.add($.datepick.newDate(inst.drawDate), inst.get('monthsToJump') - inst.get('monthsOffset'), 'm'), 1) }, action: function (inst) { $.datepick.changeMonth(this, inst.get('monthsToJump')) } }, current: { text: 'currentText', status: 'currentStatus', keystroke: { keyCode: 36, ctrlKey: true }, enabled: function (inst) { var minDate = inst.curMinDate(); var maxDate = inst.get('maxDate'); var curDate = inst.selectedDates[0] || $.datepick.today(); return (!minDate || curDate.getTime() >= minDate.getTime()) && (!maxDate || curDate.getTime() <= maxDate.getTime()) }, date: function (inst) { return inst.selectedDates[0] || $.datepick.today() }, action: function (inst) { var curDate = inst.selectedDates[0] || $.datepick.today(); $.datepick.showMonth(this, curDate.getFullYear(), curDate.getMonth() + 1) } }, today: { text: 'todayText', status: 'todayStatus', keystroke: { keyCode: 36, ctrlKey: true }, enabled: function (inst) { var minDate = inst.curMinDate(); var maxDate = inst.get('maxDate'); return (!minDate || $.datepick.today().getTime() >= minDate.getTime()) && (!maxDate || $.datepick.today().getTime() <= maxDate.getTime()) }, date: function (inst) { return $.datepick.today() }, action: function (inst) { $.datepick.showMonth(this) } }, clear: { text: 'clearText', status: 'clearStatus', keystroke: { keyCode: 35, ctrlKey: true }, enabled: function (inst) { return true }, date: function (inst) { return null }, action: function (inst) { $.datepick.clear(this) } }, close: { text: 'closeText', status: 'closeStatus', keystroke: { keyCode: 27 }, enabled: function (inst) { return true }, date: function (inst) { return null }, action: function (inst) { $.datepick.hide(this) } }, prevWeek: { text: 'prevWeekText', status: 'prevWeekStatus', keystroke: { keyCode: 38, ctrlKey: true }, enabled: function (inst) { var minDate = inst.curMinDate(); return (!minDate || $.datepick.add($.datepick.newDate(inst.drawDate), -7, 'd').getTime() >= minDate.getTime()) }, date: function (inst) { return $.datepick.add($.datepick.newDate(inst.drawDate), -7, 'd') }, action: function (inst) { $.datepick.changeDay(this, -7) } }, prevDay: { text: 'prevDayText', status: 'prevDayStatus', keystroke: { keyCode: 37, ctrlKey: true }, enabled: function (inst) { var minDate = inst.curMinDate(); return (!minDate || $.datepick.add($.datepick.newDate(inst.drawDate), -1, 'd').getTime() >= minDate.getTime()) }, date: function (inst) { return $.datepick.add($.datepick.newDate(inst.drawDate), -1, 'd') }, action: function (inst) { $.datepick.changeDay(this, -1) } }, nextDay: { text: 'nextDayText', status: 'nextDayStatus', keystroke: { keyCode: 39, ctrlKey: true }, enabled: function (inst) { var maxDate = inst.get('maxDate'); return (!maxDate || $.datepick.add($.datepick.newDate(inst.drawDate), 1, 'd').getTime() <= maxDate.getTime()) }, date: function (inst) { return $.datepick.add($.datepick.newDate(inst.drawDate), 1, 'd') }, action: function (inst) { $.datepick.changeDay(this, 1) } }, nextWeek: { text: 'nextWeekText', status: 'nextWeekStatus', keystroke: { keyCode: 40, ctrlKey: true }, enabled: function (inst) { var maxDate = inst.get('maxDate'); return (!maxDate || $.datepick.add($.datepick.newDate(inst.drawDate), 7, 'd').getTime() <= maxDate.getTime()) }, date: function (inst) { return $.datepick.add($.datepick.newDate(inst.drawDate), 7, 'd') }, action: function (inst) { $.datepick.changeDay(this, 7) } } }, defaultRenderer: { picker: '<div class="datepick">' + '<div class="datepick-nav">{link:prev}{link:today}{link:next}</div>{months}' + '{popup:start}<div class="datepick-ctrl">{link:clear}{link:close}</div>{popup:end}' + '<div class="datepick-clear-fix"></div></div>', monthRow: '<div class="datepick-month-row">{months}</div>', month: '<div class="datepick-month"><div class="datepick-month-header">{monthHeader}</div>' + '<table><thead>{weekHeader}</thead><tbody>{weeks}</tbody></table></div>', weekHeader: '<tr>{days}</tr>', dayHeader: '<th>{day}</th>', week: '<tr>{days}</tr>', day: '<td>{day}</td>', monthSelector: '.datepick-month', daySelector: 'td', rtlClass: 'datepick-rtl', multiClass: 'datepick-multi', defaultClass: '', selectedClass: 'datepick-selected', highlightedClass: 'datepick-highlight', todayClass: 'datepick-today', otherMonthClass: 'datepick-other-month', weekendClass: 'datepick-weekend', commandClass: 'datepick-cmd', commandButtonClass: '', commandLinkClass: '', disabledClass: 'datepick-disabled' }, setDefaults: function (settings) { $.extend(this._defaults, settings || {}); return this }, _ticksTo1970: (((1970 - 1) * 365 + Math.floor(1970 / 4) - Math.floor(1970 / 100) + Math.floor(1970 / 400)) * 24 * 60 * 60 * 10000000), _msPerDay: 24 * 60 * 60 * 1000, ATOM: 'yyyy-mm-dd', COOKIE: 'D, dd M yyyy', FULL: 'DD, MM d, yyyy', ISO_8601: 'yyyy-mm-dd', JULIAN: 'J', RFC_822: 'D, d M yy', RFC_850: 'DD, dd-M-yy', RFC_1036: 'D, d M yy', RFC_1123: 'D, d M yyyy', RFC_2822: 'D, d M yyyy', RSS: 'D, d M yy', TICKS: '!', TIMESTAMP: '@', W3C: 'yyyy-mm-dd', formatDate: function (format, date, settings) { if (typeof format != 'string') { settings = date; date = format; format = '' } if (!date) { return '' } format = format || this._defaults.dateFormat; settings = settings || {}; var dayNamesShort = settings.dayNamesShort || this._defaults.dayNamesShort; var dayNames = settings.dayNames || this._defaults.dayNames; var monthNamesShort = settings.monthNamesShort || this._defaults.monthNamesShort; var monthNames = settings.monthNames || this._defaults.monthNames; var calculateWeek = settings.calculateWeek || this._defaults.calculateWeek; var doubled = function (match, step) { var matches = 1; while (iFormat + matches < format.length && format.charAt(iFormat + matches) == match) { matches++ } iFormat += matches - 1; return Math.floor(matches / (step || 1)) > 1 }; var formatNumber = function (match, value, len, step) { var num = '' + value; if (doubled(match, step)) { while (num.length < len) { num = '0' + num } } return num }; var formatName = function (match, value, shortNames, longNames) { return (doubled(match) ? longNames[value] : shortNames[value]) }; var output = ''; var literal = false; for (var iFormat = 0; iFormat < format.length; iFormat++) { if (literal) { if (format.charAt(iFormat) == "'" && !doubled("'")) { literal = false } else { output += format.charAt(iFormat) } } else { switch (format.charAt(iFormat)) { case 'd': output += formatNumber('d', date.getDate(), 2); break; case 'D': output += formatName('D', date.getDay(), dayNamesShort, dayNames); break; case 'o': output += formatNumber('o', this.dayOfYear(date), 3); break; case 'w': output += formatNumber('w', calculateWeek(date), 2); break; case 'm': output += formatNumber('m', date.getMonth() + 1, 2); break; case 'M': output += formatName('M', date.getMonth(), monthNamesShort, monthNames); break; case 'y': output += (doubled('y', 2) ? date.getFullYear() : (date.getFullYear() % 100 < 10 ? '0' : '') + date.getFullYear() % 100); break; case '@': output += Math.floor(date.getTime() / 1000); break; case '!': output += date.getTime() * 10000 + this._ticksTo1970; break; case "'": if (doubled("'")) { output += "'" } else { literal = true } break; default: output += format.charAt(iFormat) } } } return output }, parseDate: function (format, value, settings) { if (value == null) { throw 'Invalid arguments'; } value = (typeof value == 'object' ? value.toString() : value + ''); if (value == '') { return null } format = format || this._defaults.dateFormat; settings = settings || {}; var shortYearCutoff = settings.shortYearCutoff || this._defaults.shortYearCutoff; shortYearCutoff = (typeof shortYearCutoff != 'string' ? shortYearCutoff : this.today().getFullYear() % 100 + parseInt(shortYearCutoff, 10)); var dayNamesShort = settings.dayNamesShort || this._defaults.dayNamesShort; var dayNames = settings.dayNames || this._defaults.dayNames; var monthNamesShort = settings.monthNamesShort || this._defaults.monthNamesShort; var monthNames = settings.monthNames || this._defaults.monthNames; var year = -1; var month = -1; var day = -1; var doy = -1; var shortYear = false; var literal = false; var doubled = function (match, step) { var matches = 1; while (iFormat + matches < format.length && format.charAt(iFormat + matches) == match) { matches++ } iFormat += matches - 1; return Math.floor(matches / (step || 1)) > 1 }; var getNumber = function (match, step) { doubled(match, step); var size = [2, 3, 4, 11, 20]['oy@!'.indexOf(match) + 1]; var digits = new RegExp('^-?\\d{1,' + size + '}'); var num = value.substring(iValue).match(digits); if (!num) { throw 'Missing number at position {0}'.replace(/\{0\}/, iValue); } iValue += num[0].length; return parseInt(num[0], 10); }; var getName = function (match, shortNames, longNames, step) { var names = (doubled(match, step) ? longNames : shortNames); for (var i = 0; i < names.length; i++) { if (value.substr(iValue, names[i].length) == names[i]) { iValue += names[i].length; return i + 1; } } throw 'Unknown name at position {0}'.replace(/\{0\}/, iValue); }; var checkLiteral = function () { if (value.charAt(iValue) != format.charAt(iFormat)) { throw 'Unexpected literal at position {0}'.replace(/\{0\}/, iValue); } iValue++; }; var iValue = 0; for (var iFormat = 0; iFormat < format.length; iFormat++) { if (literal) { if (format.charAt(iFormat) == "'" && !doubled("'")) { literal = false; } else { checkLiteral(); } } else { switch (format.charAt(iFormat)) { case 'd': day = getNumber('d'); break; case 'D': getName('D', dayNamesShort, dayNames); break; case 'o': doy = getNumber('o'); break; case 'w': getNumber('w'); break; case 'm': month = getNumber('m'); break; case 'M': month = getName('M', monthNamesShort, monthNames); break; case 'y': var iSave = iFormat; shortYear = !doubled('y', 2); iFormat = iSave; year = getNumber('y', 2); break; case '@': var date = this._normaliseDate(new Date(getNumber('@') * 1000)); year = date.getFullYear(); month = date.getMonth() + 1; day = date.getDate(); break; case '!': var date = this._normaliseDate(new Date((getNumber('!') - this._ticksTo1970) / 10000)); year = date.getFullYear(); month = date.getMonth() + 1; day = date.getDate(); break; case '*': iValue = value.length; break; case "'": if (doubled("'")) { checkLiteral(); } else { literal = true; } break; default: checkLiteral(); } } } if (iValue < value.length) { throw 'Additional text found at end'; } if (year == -1) { year = this.today().getFullYear(); } else if (year < 100 && shortYear) { year += (shortYearCutoff == -1 ? 1900 : this.today().getFullYear() - this.today().getFullYear() % 100 - (year <= shortYearCutoff ? 0 : 100)); } if (doy > -1) { month = 1; day = doy; for (var dim = this.daysInMonth(year, month); day > dim; dim = this.daysInMonth(year, month)) { month++; day -= dim; } } var date = this.newDate(year, month, day); if (date.getFullYear() != year || date.getMonth() + 1 != month || date.getDate() != day) { throw 'Invalid date'; } return date; }, determineDate: function (dateSpec, defaultDate, currentDate, dateFormat, settings) { if (currentDate && typeof currentDate != 'object') { settings = dateFormat; dateFormat = currentDate; currentDate = null; } if (typeof dateFormat != 'string') { settings = dateFormat; dateFormat = ''; } var offsetString = function (offset) { try { return $.datepick.parseDate(dateFormat, offset, settings); } catch (e) { } offset = offset.toLowerCase(); var date = (offset.match(/^c/) && currentDate ? $.datepick.newDate(currentDate) : null) || $.datepick.today(); var pattern = /([+-]?[0-9]+)\s*(d|w|m|y)?/g; var matches = pattern.exec(offset); while (matches) { date = $.datepick.add(date, parseInt(matches[1], 10), matches[2] || 'd'); matches = pattern.exec(offset); } return date; }; defaultDate = (defaultDate ? $.datepick.newDate(defaultDate) : null); dateSpec = (dateSpec == null ? defaultDate : (typeof dateSpec == 'string' ? offsetString(dateSpec) : (typeof dateSpec == 'number' ? (isNaN(dateSpec) || dateSpec == Infinity || dateSpec == -Infinity ? defaultDate : $.datepick.add($.datepick.today(), dateSpec, 'd')) : $.datepick._normaliseDate(dateSpec)))); return dateSpec; }, daysInMonth: function (year, month) { month = (year.getFullYear ? year.getMonth() + 1 : month); year = (year.getFullYear ? year.getFullYear() : year); return this.newDate(year, month + 1, 0).getDate(); }, dayOfYear: function (year, month, day) { var date = (year.getFullYear ? year : this.newDate(year, month, day)); var newYear = this.newDate(date.getFullYear(), 1, 1); return Math.floor((date.getTime() - newYear.getTime()) / this._msPerDay) + 1; }, iso8601Week: function (year, month, day) { var checkDate = (year.getFullYear ? new Date(year.getTime()) : this.newDate(year, month, day)); checkDate.setDate(checkDate.getDate() + 4 - (checkDate.getDay() || 7)); var time = checkDate.getTime(); checkDate.setMonth(0, 1); return Math.floor(Math.round((time - checkDate) / 86400000) / 7) + 1; }, today: function () { return this._normaliseDate(new Date()); }, newDate: function (year, month, day) { return (!year ? null : (year.getFullYear ? this._normaliseDate(new Date(year.getTime())) : new Date(year, month - 1, day, 12))); }, _normaliseDate: function (date) { if (date) { date.setHours(12, 0, 0, 0); } return date; }, year: function (date, year) { date.setFullYear(year); return this._normaliseDate(date); }, month: function (date, month) { date.setMonth(month - 1); return this._normaliseDate(date); }, day: function (date, day) { date.setDate(day); return this._normaliseDate(date); }, add: function (date, amount, period) { if (period == 'd' || period == 'w') { this._normaliseDate(date); date.setDate(date.getDate() + amount * (period == 'w' ? 7 : 1)); } else { var year = date.getFullYear() + (period == 'y' ? amount : 0); var month = date.getMonth() + (period == 'm' ? amount : 0); date.setTime($.datepick.newDate(year, month + 1, Math.min(date.getDate(), this.daysInMonth(year, month + 1))).getTime()); } return date; }, _attachPicker: function (target, settings) { target = $(target); if (target.hasClass(this.markerClass)) { return; } target.addClass(this.markerClass); var inst = { target: target, selectedDates: [], drawDate: null, pickingRange: false, inline: ($.inArray(target[0].nodeName.toLowerCase(), ['div', 'span']) > -1), get: function (name) { var value = this.settings[name] !== undefined ? this.settings[name] : $.datepick._defaults[name]; if ($.inArray(name, ['defaultDate', 'minDate', 'maxDate']) > -1) { value = $.datepick.determineDate(value, null, this.selectedDates[0], this.get('dateFormat'), inst.getConfig()); } return value; }, curMinDate: function () { return (this.pickingRange ? this.selectedDates[0] : this.get('minDate')); }, getConfig: function () { return { dayNamesShort: this.get('dayNamesShort'), dayNames: this.get('dayNames'), monthNamesShort: this.get('monthNamesShort'), monthNames: this.get('monthNames'), calculateWeek: this.get('calculateWeek'), shortYearCutoff: this.get('shortYearCutoff') }; } }; $.data(target[0], this.dataName, inst); var inlineSettings = ($.fn.metadata ? target.metadata() : {}); inst.settings = $.extend({}, settings || {}, inlineSettings || {}); if (inst.inline) { this._update(target[0]); if ($.fn.mousewheel) { target.mousewheel(this._doMouseWheel); } } else { this._attachments(target, inst); target.bind('keydown.' + this.dataName, this._keyDown).bind('keypress.' + this.dataName, this._keyPress).bind('keyup.' + this.dataName, this._keyUp); if (target.attr('disabled')) { this.disable(target[0]); } } }, options: function (target, name) { var inst = $.data(target, this.dataName); return (inst ? (name ? (name == 'all' ? inst.settings : inst.settings[name]) : $.datepick._defaults) : {}); }, option: function (target, settings, value) { target = $(target); if (!target.hasClass(this.markerClass)) { return; } settings = settings || {}; if (typeof settings == 'string') { var name = settings; settings = {}; settings[name] = value; } var inst = $.data(target[0], this.dataName); var dates = inst.selectedDates; extendRemove(inst.settings, settings); this.setDate(target[0], dates, null, false, true); inst.pickingRange = false; inst.drawDate = $.datepick.newDate(this._checkMinMax((settings.defaultDate ? inst.get('defaultDate') : inst.drawDate) || inst.get('defaultDate') || $.datepick.today(), inst)); if (!inst.inline) { this._attachments(target, inst); } if (inst.inline || inst.div) { this._update(target[0]); } }, _attachments: function (target, inst) { target.unbind('focus.' + this.dataName); if (inst.get('showOnFocus')) { target.bind('focus.' + this.dataName, this.show); } if (inst.trigger) { inst.trigger.remove(); } var trigger = inst.get('showTrigger'); inst.trigger = (!trigger ? $([]) : $(trigger).clone().removeAttr('id').addClass(this._triggerClass)[inst.get('isRTL') ? 'insertBefore' : 'insertAfter'](target).click(function () { if (!$.datepick.isDisabled(target[0])) { $.datepick[$.datepick.curInst == inst ? 'hide' : 'show'](target[0]); } })); this._autoSize(target, inst); var dates = this._extractDates(inst, target.val()); if (dates) { this.setDate(target[0], dates, null, true); } if (inst.get('selectDefaultDate') && inst.get('defaultDate') && inst.selectedDates.length == 0) { this.setDate(target[0], $.datepick.newDate(inst.get('defaultDate') || $.datepick.today())); } }, _autoSize: function (target, inst) { if (inst.get('autoSize') && !inst.inline) { var date = $.datepick.newDate(2009, 10, 20); var dateFormat = inst.get('dateFormat'); if (dateFormat.match(/[DM]/)) { var findMax = function (names) { var max = 0; var maxI = 0; for (var i = 0; i < names.length; i++) { if (names[i].length > max) { max = names[i].length; maxI = i; } } return maxI; }; date.setMonth(findMax(inst.get(dateFormat.match(/MM/) ? 'monthNames' : 'monthNamesShort'))); date.setDate(findMax(inst.get(dateFormat.match(/DD/) ? 'dayNames' : 'dayNamesShort')) + 20 - date.getDay()); } inst.target.attr('size', $.datepick.formatDate(dateFormat, date, inst.getConfig()).length); } }, destroy: function (target) { target = $(target); if (!target.hasClass(this.markerClass)) { return; } var inst = $.data(target[0], this.dataName); if (inst.trigger) { inst.trigger.remove(); } target.removeClass(this.markerClass).empty().unbind('.' + this.dataName); if (inst.inline && $.fn.mousewheel) { target.unmousewheel(); } if (!inst.inline && inst.get('autoSize')) { target.removeAttr('size'); } $.removeData(target[0], this.dataName); }, multipleEvents: function (fns) { var funcs = arguments; return function (args) { for (var i = 0; i < funcs.length; i++) { funcs[i].apply(this, arguments); } }; }, enable: function (target) { var $target = $(target); if (!$target.hasClass(this.markerClass)) { return; } var inst = $.data(target, this.dataName); if (inst.inline) $target.children('.' + this._disableClass).remove().end().find('button,select').attr('disabled', '').end().find('a').attr('href', 'javascript:void(0)'); else { target.disabled = false; inst.trigger.filter('button.' + this._triggerClass).attr('disabled', '').end().filter('img.' + this._triggerClass).css({ opacity: '1.0', cursor: '' }); } this._disabled = $.map(this._disabled, function (value) { return (value == target ? null : value); }); }, disable: function (target) { var $target = $(target); if (!$target.hasClass(this.markerClass)) return; var inst = $.data(target, this.dataName); if (inst.inline) { var inline = $target.children(':last'); var offset = inline.offset(); var relOffset = { left: 0, top: 0 }; inline.parents().each(function () { if ($(this).css('position') == 'relative') { relOffset = $(this).offset(); return false; } }); var zIndex = $target.css('zIndex'); zIndex = (zIndex == 'auto' ? 0 : parseInt(zIndex, 10)) + 1; $target.prepend('<div class="' + this._disableClass + '" style="' + 'width: ' + inline.outerWidth() + 'px; height: ' + inline.outerHeight() + 'px; left: ' + (offset.left - relOffset.left) + 'px; top: ' + (offset.top - relOffset.top) + 'px; z-index: ' + zIndex + '"></div>').find('button,select').attr('disabled', 'disabled').end().find('a').removeAttr('href'); } else { target.disabled = true; inst.trigger.filter('button.' + this._triggerClass).attr('disabled', 'disabled').end().filter('img.' + this._triggerClass).css({ opacity: '0.5', cursor: 'default' }); } this._disabled = $.map(this._disabled, function (value) { return (value == target ? null : value); }); this._disabled.push(target); }, isDisabled: function (target) { return (target && $.inArray(target, this._disabled) > -1); }, show: function (target) { target = target.target || target; var inst = $.data(target, $.datepick.dataName); if ($.datepick.curInst == inst) { return; } if ($.datepick.curInst) { $.datepick.hide($.datepick.curInst, true); } if (inst) { inst.lastVal = null; inst.selectedDates = $.datepick._extractDates(inst, $(target).val()); inst.pickingRange = false; inst.drawDate = $.datepick._checkMinMax($.datepick.newDate(inst.selectedDates[0] || inst.get('defaultDate') || $.datepick.today()), inst); inst.prevDate = $.datepick.newDate(inst.drawDate); $.datepick.curInst = inst; $.datepick._update(target, true); var offset = $.datepick._checkOffset(inst); inst.div.css({ left: offset.left, top: offset.top }); var showAnim = inst.get('showAnim'); var showSpeed = inst.get('showSpeed'); showSpeed = (showSpeed == 'normal' && $.ui && $.ui.version >= '1.8' ? '_default' : showSpeed); var postProcess = function () { var borders = $.datepick._getBorders(inst.div); inst.div.find('.' + $.datepick._coverClass).css({ left: -borders[0], top: -borders[1], width: inst.div.outerWidth() + borders[0], height: inst.div.outerHeight() + borders[1] }); }; if ($.effects && $.effects[showAnim]) { var data = inst.div.data(); for (var key in data) { if (key.match(/^ec\.storage\./)) { data[key] = inst._mainDiv.css(key.replace(/ec\.storage\./, '')); } } inst.div.data(data).show(showAnim, inst.get('showOptions'), showSpeed, postProcess); } else { inst.div[showAnim || 'show']((showAnim ? showSpeed : ''), postProcess); } if (!showAnim) { postProcess(); } } }, _extractDates: function (inst, datesText) { if (datesText == inst.lastVal) { return; } inst.lastVal = datesText; var dateFormat = inst.get('dateFormat'); var multiSelect = inst.get('multiSelect'); var rangeSelect = inst.get('rangeSelect'); datesText = datesText.split(multiSelect ? inst.get('multiSeparator') : (rangeSelect ? inst.get('rangeSeparator') : '\x00')); var dates = []; for (var i = 0; i < datesText.length; i++) { try { var date = $.datepick.parseDate(dateFormat, datesText[i], inst.getConfig()); if (date) { var found = false; for (var j = 0; j < dates.length; j++) { if (dates[j].getTime() == date.getTime()) { found = true; break; } } if (!found) { dates.push(date); } } } catch (e) { } } dates.splice(multiSelect || (rangeSelect ? 2 : 1), dates.length); if (rangeSelect && dates.length == 1) { dates[1] = dates[0]; } return dates; }, _update: function (target, hidden) { target = $(target.target || target); var inst = $.data(target[0], $.datepick.dataName); if (inst) { if (inst.inline || $.datepick.curInst == inst) { var onChange = inst.get('onChangeMonthYear'); if (onChange && (!inst.prevDate || inst.prevDate.getFullYear() != inst.drawDate.getFullYear() || inst.prevDate.getMonth() != inst.drawDate.getMonth())) { onChange.apply(target[0], [inst.drawDate.getFullYear(), inst.drawDate.getMonth() + 1]); } } if (inst.inline) { target.html(this._generateContent(target[0], inst)); } else if ($.datepick.curInst == inst) { if (!inst.div) { inst.div = $('<div></div>').addClass(this._popupClass).css({ display: (hidden ? 'none' : 'static'), position: 'absolute', left: target.offset().left, top: target.offset().top + target.outerHeight() }).appendTo($(inst.get('popupContainer') || 'body')); if ($.fn.mousewheel) { inst.div.mousewheel(this._doMouseWheel); } } inst.div.html(this._generateContent(target[0], inst)); target.focus(); } } }, _updateInput: function (target, keyUp) { var inst = $.data(target, this.dataName); if (inst) { var value = ''; var altValue = ''; var sep = (inst.get('multiSelect') ? inst.get('multiSeparator') : inst.get('rangeSeparator')); var dateFormat = inst.get('dateFormat'); var altFormat = inst.get('altFormat') || dateFormat; for (var i = 0; i < inst.selectedDates.length; i++) { value += (keyUp ? '' : (i > 0 ? sep : '') + $.datepick.formatDate(dateFormat, inst.selectedDates[i], inst.getConfig())); altValue += (i > 0 ? sep : '') + $.datepick.formatDate(altFormat, inst.selectedDates[i], inst.getConfig()); } if (!inst.inline && !keyUp) { $(target).val(value); } $(inst.get('altField')).val(altValue); var onSelect = inst.get('onSelect'); if (onSelect && !keyUp && !inst.inSelect) { inst.inSelect = true; onSelect.apply(target, [inst.selectedDates]); inst.inSelect = false; } } }, _getBorders: function (elem) { var convert = function (value) { var extra = ($.browser.msie ? 1 : 0); return { thin: 1 + extra, medium: 3 + extra, thick: 5 + extra}[value] || value; }; return [parseFloat(convert(elem.css('border-left-width'))), parseFloat(convert(elem.css('border-top-width')))]; }, _checkOffset: function (inst) { var base = (inst.target.is(':hidden') && inst.trigger ? inst.trigger : inst.target); var offset = base.offset(); var isFixed = false; $(inst.target).parents().each(function () { isFixed |= $(this).css('position') == 'fixed'; return !isFixed; }); if (isFixed && $.browser.opera) { offset.left -= document.documentElement.scrollLeft; offset.top -= document.documentElement.scrollTop; } var browserWidth = (!$.browser.mozilla || document.doctype ? document.documentElement.clientWidth : 0) || document.body.clientWidth; var browserHeight = (!$.browser.mozilla || document.doctype ? document.documentElement.clientHeight : 0) || document.body.clientHeight; if (browserWidth == 0) { return offset; } var alignment = inst.get('alignment'); var isRTL = inst.get('isRTL'); var scrollX = document.documentElement.scrollLeft || document.body.scrollLeft; var scrollY = document.documentElement.scrollTop || document.body.scrollTop; var above = offset.top - inst.div.outerHeight() - (isFixed && $.browser.opera ? document.documentElement.scrollTop : 0); var below = offset.top + base.outerHeight(); var alignL = offset.left; var alignR = offset.left + base.outerWidth() - inst.div.outerWidth() - (isFixed && $.browser.opera ? document.documentElement.scrollLeft : 0); var tooWide = (offset.left + inst.div.outerWidth() - scrollX) > browserWidth; var tooHigh = (offset.top + inst.target.outerHeight() + inst.div.outerHeight() - scrollY) > browserHeight; if (alignment == 'topLeft') { offset = { left: alignL, top: above }; } else if (alignment == 'topRight') { offset = { left: alignR, top: above }; } else if (alignment == 'bottomLeft') { offset = { left: alignL, top: below }; } else if (alignment == 'bottomRight') { offset = { left: alignR, top: below }; } else if (alignment == 'top') { offset = { left: (isRTL || tooWide ? alignR : alignL), top: above }; } else { offset = { left: (isRTL || tooWide ? alignR : alignL), top: (tooHigh ? above : below) }; } offset.left = Math.max((isFixed ? 0 : scrollX), offset.left - (isFixed ? scrollX : 0)); offset.top = Math.max((isFixed ? 0 : scrollY), offset.top - (isFixed ? scrollY : 0)); return offset; }, _checkExternalClick: function (event) { if (!$.datepick.curInst) { return; } var target = $(event.target); if (!target.parents().andSelf().hasClass($.datepick._popupClass) && !target.hasClass($.datepick.markerClass) && !target.parents().andSelf().hasClass($.datepick._triggerClass)) { $.datepick.hide($.datepick.curInst); } }, hide: function (target, immediate) { var inst = $.data(target, this.dataName) || target; if (inst && inst == $.datepick.curInst) { var showAnim = (immediate ? '' : inst.get('showAnim')); var showSpeed = inst.get('showSpeed'); showSpeed = (showSpeed == 'normal' && $.ui && $.ui.version >= '1.8' ? '_default' : showSpeed); var postProcess = function () { inst.div.remove(); inst.div = null; $.datepick.curInst = null; var onClose = inst.get('onClose'); if (onClose) { onClose.apply(target, [inst.selectedDates]); } }; inst.div.stop(); if ($.effects && $.effects[showAnim]) { inst.div.hide(showAnim, inst.get('showOptions'), showSpeed, postProcess); } else { var hideAnim = (showAnim == 'slideDown' ? 'slideUp' : (showAnim == 'fadeIn' ? 'fadeOut' : 'hide')); inst.div[hideAnim]((showAnim ? showSpeed : ''), postProcess); } if (!showAnim) { postProcess(); } } }, _keyDown: function (event) { var target = event.target; var inst = $.data(target, $.datepick.dataName); var handled = false; if (inst.div) { if (event.keyCode == 9) { $.datepick.hide(target); } else if (event.keyCode == 13) { $.datepick.selectDate(target, $('a.' + inst.get('renderer').highlightedClass, inst.div)[0]); handled = true; } else { var commands = inst.get('commands'); for (var name in commands) { var command = commands[name]; if (command.keystroke.keyCode == event.keyCode && !!command.keystroke.ctrlKey == !!(event.ctrlKey || event.metaKey) && !!command.keystroke.altKey == event.altKey && !!command.keystroke.shiftKey == event.shiftKey) { $.datepick.performAction(target, name); handled = true; break; } } } } else { var command = inst.get('commands').current; if (command.keystroke.keyCode == event.keyCode && !!command.keystroke.ctrlKey == !!(event.ctrlKey || event.metaKey) && !!command.keystroke.altKey == event.altKey && !!command.keystroke.shiftKey == event.shiftKey) { $.datepick.show(target); handled = true; } } inst.ctrlKey = ((event.keyCode < 48 && event.keyCode != 32) || event.ctrlKey || event.metaKey); if (handled) { event.preventDefault(); event.stopPropagation(); } return !handled; }, _keyPress: function (event) { var target = event.target; var inst = $.data(target, $.datepick.dataName); if (inst && inst.get('constrainInput')) { var ch = String.fromCharCode(event.keyCode || event.charCode); var allowedChars = $.datepick._allowedChars(inst); return (event.metaKey || inst.ctrlKey || ch < ' ' || !allowedChars || allowedChars.indexOf(ch) > -1); } return true; }, _allowedChars: function (inst) { var dateFormat = inst.get('dateFormat'); var allowedChars = (inst.get('multiSelect') ? inst.get('multiSeparator') : (inst.get('rangeSelect') ? inst.get('rangeSeparator') : '')); var literal = false; var hasNum = false; for (var i = 0; i < dateFormat.length; i++) { var ch = dateFormat.charAt(i); if (literal) { if (ch == "'" && dateFormat.charAt(i + 1) != "'") { literal = false; } else { allowedChars += ch; } } else { switch (ch) { case 'd': case 'm': case 'o': case 'w': allowedChars += (hasNum ? '' : '0123456789'); hasNum = true; break; case 'y': case '@': case '!': allowedChars += (hasNum ? '' : '0123456789') + '-'; hasNum = true; break; case 'J': allowedChars += (hasNum ? '' : '0123456789') + '-.'; hasNum = true; break; case 'D': case 'M': case 'Y': return null; case "'": if (dateFormat.charAt(i + 1) == "'") { allowedChars += "'"; } else { literal = true; } break; default: allowedChars += ch; } } } return allowedChars; }, _keyUp: function (event) { var target = event.target; var inst = $.data(target, $.datepick.dataName); if (inst && !inst.ctrlKey && inst.lastVal != inst.target.val()) { try { var dates = $.datepick._extractDates(inst, inst.target.val()); if (dates.length > 0) { $.datepick.setDate(target, dates, null, true); } } catch (event) { } } return true; }, _doMouseWheel: function (event, delta) { var target = ($.datepick.curInst && $.datepick.curInst.target[0]) || $(event.target).closest('.' + $.datepick.markerClass)[0]; if ($.datepick.isDisabled(target)) { return; } var inst = $.data(target, $.datepick.dataName); if (inst.get('useMouseWheel')) { delta = ($.browser.opera ? -delta : delta); delta = (delta < 0 ? -1 : +1); $.datepick.changeMonth(target, -inst.get(event.ctrlKey ? 'monthsToJump' : 'monthsToStep') * delta); } event.preventDefault(); }, clear: function (target) { var inst = $.data(target, this.dataName); if (inst) { inst.selectedDates = []; this.hide(target); if (inst.get('selectDefaultDate') && inst.get('defaultDate')) { this.setDate(target, $.datepick.newDate(inst.get('defaultDate') || $.datepick.today())); } else { this._updateInput(target); } } }, getDate: function (target) { var inst = $.data(target, this.dataName); return (inst ? inst.selectedDates : []); }, setDate: function (target, dates, endDate, keyUp, setOpt) { var inst = $.data(target, this.dataName); if (inst) { if (!$.isArray(dates)) { dates = [dates]; if (endDate) { dates.push(endDate); } } var dateFormat = inst.get('dateFormat'); var minDate = inst.get('minDate'); var maxDate = inst.get('maxDate'); var curDate = inst.selectedDates[0]; inst.selectedDates = []; for (var i = 0; i < dates.length; i++) { var date = $.datepick.determineDate(dates[i], null, curDate, dateFormat, inst.getConfig()); if (date) { if ((!minDate || date.getTime() >= minDate.getTime()) && (!maxDate || date.getTime() <= maxDate.getTime())) { var found = false; for (var j = 0; j < inst.selectedDates.length; j++) { if (inst.selectedDates[j].getTime() == date.getTime()) { found = true; break; } } if (!found) { inst.selectedDates.push(date); } } } } var rangeSelect = inst.get('rangeSelect'); inst.selectedDates.splice(inst.get('multiSelect') || (rangeSelect ? 2 : 1), inst.selectedDates.length); if (rangeSelect) { switch (inst.selectedDates.length) { case 1: inst.selectedDates[1] = inst.selectedDates[0]; break; case 2: inst.selectedDates[1] = (inst.selectedDates[0].getTime() > inst.selectedDates[1].getTime() ? inst.selectedDates[0] : inst.selectedDates[1]); break; } inst.pickingRange = false; } inst.prevDate = (inst.drawDate ? $.datepick.newDate(inst.drawDate) : null); inst.drawDate = this._checkMinMax($.datepick.newDate(inst.selectedDates[0] || inst.get('defaultDate') || $.datepick.today()), inst); if (!setOpt) { this._update(target); this._updateInput(target, keyUp); } } }, isSelectable: function (target, date) { var inst = $.data(target, this.dataName); if (!inst) { return false; } date = $.datepick.determineDate(date, inst.selectedDates[0] || this.today(), null, inst.get('dateFormat'), inst.getConfig()); return this._isSelectable(target, date, inst.get('onDate'), inst.get('minDate'), inst.get('maxDate')); }, _isSelectable: function (target, date, onDate, minDate, maxDate) { var dateInfo = (typeof onDate == 'boolean' ? { selectable: onDate} : (!onDate ? {} : onDate.apply(target, [date, true]))); return (dateInfo.selectable != false) && (!minDate || date.getTime() >= minDate.getTime()) && (!maxDate || date.getTime() <= maxDate.getTime()); }, performAction: function (target, action) { var inst = $.data(target, this.dataName); if (inst && !this.isDisabled(target)) { var commands = inst.get('commands'); if (commands[action] && commands[action].enabled.apply(target, [inst])) { commands[action].action.apply(target, [inst]); } } }, showMonth: function (target, year, month, day) { var inst = $.data(target, this.dataName); if (inst && (day != null || (inst.drawDate.getFullYear() != year || inst.drawDate.getMonth() + 1 != month))) { inst.prevDate = $.datepick.newDate(inst.drawDate); var show = this._checkMinMax((year != null ? $.datepick.newDate(year, month, 1) : $.datepick.today()), inst); inst.drawDate = $.datepick.newDate(show.getFullYear(), show.getMonth() + 1, (day != null ? day : Math.min(inst.drawDate.getDate(), $.datepick.daysInMonth(show.getFullYear(), show.getMonth() + 1)))); this._update(target); } }, changeMonth: function (target, offset) { var inst = $.data(target, this.dataName); if (inst) { var date = $.datepick.add($.datepick.newDate(inst.drawDate), offset, 'm'); this.showMonth(target, date.getFullYear(), date.getMonth() + 1); } }, changeDay: function (target, offset) { var inst = $.data(target, this.dataName); if (inst) { var date = $.datepick.add($.datepick.newDate(inst.drawDate), offset, 'd'); this.showMonth(target, date.getFullYear(), date.getMonth() + 1, date.getDate()); } }, _checkMinMax: function (date, inst) { var minDate = inst.get('minDate'); var maxDate = inst.get('maxDate'); date = (minDate && date.getTime() < minDate.getTime() ? $.datepick.newDate(minDate) : date); date = (maxDate && date.getTime() > maxDate.getTime() ? $.datepick.newDate(maxDate) : date); return date; }, retrieveDate: function (target, elem) { var inst = $.data(target, this.dataName); return (!inst ? null : this._normaliseDate(new Date(parseInt(elem.className.replace(/^.*dp(-?\d+).*$/, '$1'), 10)))); }, selectDate: function (target, elem) { var inst = $.data(target, this.dataName); if (inst && !this.isDisabled(target)) { var date = this.retrieveDate(target, elem); var multiSelect = inst.get('multiSelect'); var rangeSelect = inst.get('rangeSelect'); if (multiSelect) { var found = false; for (var i = 0; i < inst.selectedDates.length; i++) { if (date.getTime() == inst.selectedDates[i].getTime()) { inst.selectedDates.splice(i, 1); found = true; break; } } if (!found && inst.selectedDates.length < multiSelect) { inst.selectedDates.push(date); } } else if (rangeSelect) { if (inst.pickingRange) { inst.selectedDates[1] = date; } else { inst.selectedDates = [date, date]; } inst.pickingRange = !inst.pickingRange; } else { inst.selectedDates = [date]; } inst.prevDate = $.datepick.newDate(date); this._updateInput(target); if (inst.inline || inst.pickingRange || inst.selectedDates.length < (multiSelect || (rangeSelect ? 2 : 1))) { this._update(target); } else { this.hide(target); } } }, _generateContent: function (target, inst) { var renderer = inst.get('renderer'); var monthsToShow = inst.get('monthsToShow'); monthsToShow = ($.isArray(monthsToShow) ? monthsToShow : [1, monthsToShow]); inst.drawDate = this._checkMinMax(inst.drawDate || inst.get('defaultDate') || $.datepick.today(), inst); var drawDate = $.datepick.add($.datepick.newDate(inst.drawDate), -inst.get('monthsOffset'), 'm'); var monthRows = ''; for (var row = 0; row < monthsToShow[0]; row++) { var months = ''; for (var col = 0; col < monthsToShow[1]; col++) { months += this._generateMonth(target, inst, drawDate.getFullYear(), drawDate.getMonth() + 1, renderer, (row == 0 && col == 0)); $.datepick.add(drawDate, 1, 'm'); } monthRows += this._prepare(renderer.monthRow, inst).replace(/\{months\}/, months); } var picker = this._prepare(renderer.picker, inst).replace(/\{months\}/, monthRows).replace(/\{weekHeader\}/g, this._generateDayHeaders(inst, renderer)) + ($.browser.msie && parseInt($.browser.version, 10) < 7 && !inst.inline ? '<iframe src="javascript:void(0);" class="' + this._coverClass + '"></iframe>' : ''); var commands = inst.get('commands'); var asDateFormat = inst.get('commandsAsDateFormat'); var addCommand = function (type, open, close, name, classes) { if (picker.indexOf('{' + type + ':' + name + '}') == -1) { return; } var command = commands[name]; var date = (asDateFormat ? command.date.apply(target, [inst]) : null); picker = picker.replace(new RegExp('\\{' + type + ':' + name + '\\}', 'g'), '<' + open + (command.status ? ' title="' + inst.get(command.status) + '"' : '') + ' class="' + renderer.commandClass + ' ' + renderer.commandClass + '-' + name + ' ' + classes + (command.enabled(inst) ? '' : ' ' + renderer.disabledClass) + '">' + (date ? $.datepick.formatDate(inst.get(command.text), date, inst.getConfig()) : inst.get(command.text)) + '</' + close + '>'); }; for (var name in commands) { addCommand('button', 'button type="button"', 'button', name, renderer.commandButtonClass); addCommand('link', 'a href="javascript:void(0)"', 'a', name, renderer.commandLinkClass); } picker = $(picker); if (monthsToShow[1] > 1) { var count = 0; $(renderer.monthSelector, picker).each(function () { var nth = ++count % monthsToShow[1]; $(this).addClass(nth == 1 ? 'first' : (nth == 0 ? 'last' : '')); }); } var self = this; picker.find(renderer.daySelector + ' a').hover(function () { $(this).addClass(renderer.highlightedClass); }, function () { (inst.inline ? $(this).parents('.' + self.markerClass) : inst.div).find(renderer.daySelector + ' a').removeClass(renderer.highlightedClass); }).click(function () { self.selectDate(target, this); }).end().find('select.' + this._monthYearClass + ':not(.' + this._anyYearClass + ')').change(function () { var monthYear = $(this).val().split('/'); self.showMonth(target, parseInt(monthYear[1], 10), parseInt(monthYear[0], 10)); }).end().find('select.' + this._anyYearClass).click(function () { $(this).css('visibility', 'hidden').next('input').css({ left: this.offsetLeft, top: this.offsetTop, width: this.offsetWidth, height: this.offsetHeight }).show().focus(); }).end().find('input.' + self._monthYearClass).change(function () { try { var year = parseInt($(this).val(), 10); year = (isNaN(year) ? inst.drawDate.getFullYear() : year); self.showMonth(target, year, inst.drawDate.getMonth() + 1, inst.drawDate.getDate()); } catch (e) { alert(e); } }).keydown(function (event) { if (event.keyCode == 13) { $(event.target).change(); } else if (event.keyCode == 27) { $(event.target).hide().prev('select').css('visibility', 'visible'); inst.target.focus(); } }); picker.find('.' + renderer.commandClass).click(function () { if (!$(this).hasClass(renderer.disabledClass)) { var action = this.className.replace(new RegExp('^.*' + renderer.commandClass + '-([^ ]+).*$'), '$1'); $.datepick.performAction(target, action); } }); if (inst.get('isRTL')) { picker.addClass(renderer.rtlClass); } if (monthsToShow[0] * monthsToShow[1] > 1) { picker.addClass(renderer.multiClass); } var pickerClass = inst.get('pickerClass'); if (pickerClass) { picker.addClass(pickerClass); } $('body').append(picker); var width = 0; picker.find(renderer.monthSelector).each(function () { width += $(this).outerWidth(); }); picker.width(width / monthsToShow[0]); var onShow = inst.get('onShow'); if (onShow) { onShow.apply(target, [picker, inst]); } return picker; }, _generateMonth: function (target, inst, year, month, renderer, first) { var daysInMonth = $.datepick.daysInMonth(year, month); var monthsToShow = inst.get('monthsToShow'); monthsToShow = ($.isArray(monthsToShow) ? monthsToShow : [1, monthsToShow]); var fixedWeeks = inst.get('fixedWeeks') || (monthsToShow[0] * monthsToShow[1] > 1); var firstDay = inst.get('firstDay'); var leadDays = ($.datepick.newDate(year, month, 1).getDay() - firstDay + 7) % 7; var numWeeks = (fixedWeeks ? 6 : Math.ceil((leadDays + daysInMonth) / 7)); var showOtherMonths = inst.get('showOtherMonths'); var selectOtherMonths = inst.get('selectOtherMonths') && showOtherMonths; var dayStatus = inst.get('dayStatus'); var minDate = (inst.pickingRange ? inst.selectedDates[0] : inst.get('minDate')); var maxDate = inst.get('maxDate'); var rangeSelect = inst.get('rangeSelect'); var onDate = inst.get('onDate'); var showWeeks = renderer.week.indexOf('{weekOfYear}') > -1; var calculateWeek = inst.get('calculateWeek'); var today = $.datepick.today(); var drawDate = $.datepick.newDate(year, month, 1); $.datepick.add(drawDate, -leadDays - (fixedWeeks && (drawDate.getDay() == firstDay) ? 7 : 0), 'd'); var ts = drawDate.getTime(); var weeks = ''; for (var week = 0; week < numWeeks; week++) { var weekOfYear = (!showWeeks ? '' : '<span class="dp' + ts + '">' + (calculateWeek ? calculateWeek(drawDate) : 0) + '</span>'); var days = ''; for (var day = 0; day < 7; day++) { var selected = false; if (rangeSelect && inst.selectedDates.length > 0) { selected = (drawDate.getTime() >= inst.selectedDates[0] && drawDate.getTime() <= inst.selectedDates[1]); } else { for (var i = 0; i < inst.selectedDates.length; i++) { if (inst.selectedDates[i].getTime() == drawDate.getTime()) { selected = true; break; } } } var dateInfo = (!onDate ? {} : onDate.apply(target, [drawDate, drawDate.getMonth() + 1 == month])); var selectable = (selectOtherMonths || drawDate.getMonth() + 1 == month) && this._isSelectable(target, drawDate, dateInfo.selectable, minDate, maxDate); days += this._prepare(renderer.day, inst).replace(/\{day\}/g, (selectable ? '<a href="javascript:void(0)"' : '<span') + ' class="dp' + ts + ' ' + (dateInfo.dateClass || '') + (selected && (selectOtherMonths || drawDate.getMonth() + 1 == month) ? ' ' + renderer.selectedClass : '') + (selectable ? ' ' + renderer.defaultClass : '') + ((drawDate.getDay() || 7) < 6 ? '' : ' ' + renderer.weekendClass) + (drawDate.getMonth() + 1 == month ? '' : ' ' + renderer.otherMonthClass) + (drawDate.getTime() == today.getTime() && (drawDate.getMonth() + 1) == month ? ' ' + renderer.todayClass : '') + (drawDate.getTime() == inst.drawDate.getTime() && (drawDate.getMonth() + 1) == month ? ' ' + renderer.highlightedClass : '') + '"' + (dateInfo.title || (dayStatus && selectable) ? ' title="' + (dateInfo.title || $.datepick.formatDate(dayStatus, drawDate, inst.getConfig())) + '"' : '') + '>' + (showOtherMonths || (drawDate.getMonth() + 1) == month ? dateInfo.content || drawDate.getDate() : '&nbsp;') + (selectable ? '</a>' : '</span>')); $.datepick.add(drawDate, 1, 'd'); ts = drawDate.getTime(); } weeks += this._prepare(renderer.week, inst).replace(/\{days\}/g, days).replace(/\{weekOfYear\}/g, weekOfYear); } var monthHeader = this._prepare(renderer.month, inst).match(/\{monthHeader(:[^\}]+)?\}/); monthHeader = (monthHeader[0].length <= 13 ? 'MM yyyy' : monthHeader[0].substring(13, monthHeader[0].length - 1)); monthHeader = (first ? this._generateMonthSelection(inst, year, month, minDate, maxDate, monthHeader, renderer) : $.datepick.formatDate(monthHeader, $.datepick.newDate(year, month, 1), inst.getConfig())); var weekHeader = this._prepare(renderer.weekHeader, inst).replace(/\{days\}/g, this._generateDayHeaders(inst, renderer)); return this._prepare(renderer.month, inst).replace(/\{monthHeader(:[^\}]+)?\}/g, monthHeader).replace(/\{weekHeader\}/g, weekHeader).replace(/\{weeks\}/g, weeks); }, _generateDayHeaders: function (inst, renderer) { var firstDay = inst.get('firstDay'); var dayNames = inst.get('dayNames'); var dayNamesMin = inst.get('dayNamesMin'); var header = ''; for (var day = 0; day < 7; day++) { var dow = (day + firstDay) % 7; header += this._prepare(renderer.dayHeader, inst).replace(/\{day\}/g, '<span class="' + this._curDoWClass + dow + '" title="' + dayNames[dow] + '">' + dayNamesMin[dow] + '</span>'); } return header; }, _generateMonthSelection: function (inst, year, month, minDate, maxDate, monthHeader) { if (!inst.get('changeMonth')) { return $.datepick.formatDate(monthHeader, $.datepick.newDate(year, month, 1), inst.getConfig()); } var monthNames = inst.get('monthNames' + (monthHeader.match(/mm/i) ? '' : 'Short')); var html = monthHeader.replace(/m+/i, '\\x2E').replace(/y+/i, '\\x2F'); var selector = '<select class="' + this._monthYearClass + '" title="' + inst.get('monthStatus') + '">'; for (var m = 1; m <= 12; m++) { if ((!minDate || $.datepick.newDate(year, m, $.datepick.daysInMonth(year, m)).getTime() >= minDate.getTime()) && (!maxDate || $.datepick.newDate(year, m, 1).getTime() <= maxDate.getTime())) { selector += '<option value="' + m + '/' + year + '"' + (month == m ? ' selected="selected"' : '') + '>' + monthNames[m - 1] + '</option>'; } } selector += '</select>'; html = html.replace(/\\x2E/, selector); var yearRange = inst.get('yearRange'); if (yearRange == 'any') { selector = '<select class="' + this._monthYearClass + ' ' + this._anyYearClass + '" title="' + inst.get('yearStatus') + '">' + '<option>' + year + '</option></select>' + '<input class="' + this._monthYearClass + ' ' + this._curMonthClass + month + '" value="' + year + '">'; } else { yearRange = yearRange.split(':'); var todayYear = $.datepick.today().getFullYear(); var start = (yearRange[0].match('c[+-].*') ? year + parseInt(yearRange[0].substring(1), 10) : ((yearRange[0].match('[+-].*') ? todayYear : 0) + parseInt(yearRange[0], 10))); var end = (yearRange[1].match('c[+-].*') ? year + parseInt(yearRange[1].substring(1), 10) : ((yearRange[1].match('[+-].*') ? todayYear : 0) + parseInt(yearRange[1], 10))); selector = '<select class="' + this._monthYearClass + '" title="' + inst.get('yearStatus') + '">'; start = $.datepick.add($.datepick.newDate(start + 1, 1, 1), -1, 'd'); end = $.datepick.newDate(end, 1, 1); var addYear = function (y) { if (y != 0) { selector += '<option value="' + month + '/' + y + '"' + (year == y ? ' selected="selected"' : '') + '>' + y + '</option>'; } }; if (start.getTime() < end.getTime()) { start = (minDate && minDate.getTime() > start.getTime() ? minDate : start).getFullYear(); end = (maxDate && maxDate.getTime() < end.getTime() ? maxDate : end).getFullYear(); for (var y = start; y <= end; y++) { addYear(y); } } else { start = (maxDate && maxDate.getTime() < start.getTime() ? maxDate : start).getFullYear(); end = (minDate && minDate.getTime() > end.getTime() ? minDate : end).getFullYear(); for (var y = start; y >= end; y--) { addYear(y); } } selector += '</select>'; } html = html.replace(/\\x2F/, selector); return html; }, _prepare: function (text, inst) { var replaceSection = function (type, retain) { while (true) { var start = text.indexOf('{' + type + ':start}'); if (start == -1) { return; } var end = text.substring(start).indexOf('{' + type + ':end}'); if (end > -1) { text = text.substring(0, start) + (retain ? text.substr(start + type.length + 8, end - type.length - 8) : '') + text.substring(start + end + type.length + 6); } } }; replaceSection('inline', inst.inline); replaceSection('popup', !inst.inline); var pattern = /\{l10n:([^\}]+)\}/; var matches = null; while (matches = pattern.exec(text)) { text = text.replace(matches[0], inst.get(matches[1])); } return text; } }); function extendRemove(target, props) { $.extend(target, props); for (var name in props) if (props[name] == null || props[name] == undefined) target[name] = props[name]; return target; }; $.fn.datepick = function (options) { var otherArgs = Array.prototype.slice.call(arguments, 1); if ($.inArray(options, ['getDate', 'isDisabled', 'isSelectable', 'options', 'retrieveDate']) > -1) { return $.datepick[options].apply($.datepick, [this[0]].concat(otherArgs)); } return this.each(function () { if (typeof options == 'string') { $.datepick[options].apply($.datepick, [this].concat(otherArgs)) } else { $.datepick._attachPicker(this, options || {}) } }) }; $.datepick = new Datepicker(); $(function () { $(document).mousedown($.datepick._checkExternalClick).resize(function () { $.datepick.hide($.datepick.curInst) }) }) })(jQuery);

(function (j, ra, p) { j.fn.dataTableSettings = []; var D = j.fn.dataTableSettings; j.fn.dataTableExt = {}; var n = j.fn.dataTableExt; n.sVersion = "1.7.6"; n.sErrMode = "alert"; n.iApiIndex = 0; n.oApi = {}; n.afnFiltering = []; n.aoFeatures = []; n.ofnSearch = {}; n.afnSortData = []; n.oStdClasses = { sPagePrevEnabled: "paginate_enabled_previous", sPagePrevDisabled: "paginate_disabled_previous", sPageNextEnabled: "paginate_enabled_next", sPageNextDisabled: "paginate_disabled_next", sPageJUINext: "", sPageJUIPrev: "", sPageButton: "paginate_button", sPageButtonActive: "paginate_active", sPageButtonStaticDisabled: "paginate_button", sPageFirst: "first", sPagePrevious: "previous", sPageNext: "next", sPageLast: "last", sStripOdd: "odd", sStripEven: "even", sRowEmpty: "dataTables_empty", sWrapper: "dataTables_wrapper", sFilter: "dataTables_filter", sInfo: "dataTables_info", sPaging: "dataTables_paginate paging_", sLength: "dataTables_length", sProcessing: "dataTables_processing", sSortAsc: "sorting_asc", sSortDesc: "sorting_desc", sSortable: "sorting", sSortableAsc: "sorting_asc_disabled", sSortableDesc: "sorting_desc_disabled", sSortableNone: "sorting_disabled", sSortColumn: "sorting_", sSortJUIAsc: "", sSortJUIDesc: "", sSortJUI: "", sSortJUIAscAllowed: "", sSortJUIDescAllowed: "", sSortJUIWrapper: "", sScrollWrapper: "dataTables_scroll", sScrollHead: "dataTables_scrollHead", sScrollHeadInner: "dataTables_scrollHeadInner", sScrollBody: "dataTables_scrollBody", sScrollFoot: "dataTables_scrollFoot", sScrollFootInner: "dataTables_scrollFootInner", sFooterTH: "" }; n.oJUIClasses = { sPagePrevEnabled: "fg-button ui-button ui-state-default ui-corner-left", sPagePrevDisabled: "fg-button ui-button ui-state-default ui-corner-left ui-state-disabled", sPageNextEnabled: "fg-button ui-button ui-state-default ui-corner-right", sPageNextDisabled: "fg-button ui-button ui-state-default ui-corner-right ui-state-disabled", sPageJUINext: "ui-icon ui-icon-circle-arrow-e", sPageJUIPrev: "ui-icon ui-icon-circle-arrow-w", sPageButton: "fg-button ui-button ui-state-default", sPageButtonActive: "fg-button ui-button ui-state-default ui-state-disabled", sPageButtonStaticDisabled: "fg-button ui-button ui-state-default ui-state-disabled", sPageFirst: "first ui-corner-tl ui-corner-bl", sPagePrevious: "previous", sPageNext: "next", sPageLast: "last ui-corner-tr ui-corner-br", sStripOdd: "odd", sStripEven: "even", sRowEmpty: "dataTables_empty", sWrapper: "dataTables_wrapper", sFilter: "dataTables_filter", sInfo: "dataTables_info", sPaging: "dataTables_paginate fg-buttonset ui-buttonset fg-buttonset-multi ui-buttonset-multi paging_", sLength: "dataTables_length", sProcessing: "dataTables_processing", sSortAsc: "ui-state-default", sSortDesc: "ui-state-default", sSortable: "ui-state-default", sSortableAsc: "ui-state-default", sSortableDesc: "ui-state-default", sSortableNone: "ui-state-default", sSortColumn: "sorting_", sSortJUIAsc: "css_right ui-icon ui-icon-triangle-1-n", sSortJUIDesc: "css_right ui-icon ui-icon-triangle-1-s", sSortJUI: "css_right ui-icon ui-icon-carat-2-n-s", sSortJUIAscAllowed: "css_right ui-icon ui-icon-carat-1-n", sSortJUIDescAllowed: "css_right ui-icon ui-icon-carat-1-s", sSortJUIWrapper: "DataTables_sort_wrapper", sScrollWrapper: "dataTables_scroll", sScrollHead: "dataTables_scrollHead ui-state-default", sScrollHeadInner: "dataTables_scrollHeadInner", sScrollBody: "dataTables_scrollBody", sScrollFoot: "dataTables_scrollFoot ui-state-default", sScrollFootInner: "dataTables_scrollFootInner", sFooterTH: "ui-state-default" }; n.oPagination = { two_button: { fnInit: function (g, m, r) { var s, w, y; if (g.bJUI) { s = p.createElement("a"); w = p.createElement("a"); y = p.createElement("span"); y.className = g.oClasses.sPageJUINext; w.appendChild(y); y = p.createElement("span"); y.className = g.oClasses.sPageJUIPrev; s.appendChild(y) } else { s = p.createElement("div"); w = p.createElement("div") } s.className = g.oClasses.sPagePrevDisabled; w.className = g.oClasses.sPageNextDisabled; s.title = g.oLanguage.oPaginate.sPrevious; w.title = g.oLanguage.oPaginate.sNext; m.appendChild(s); m.appendChild(w); j(s).bind("click.DT", function () { g.oApi._fnPageChange(g, "previous") && r(g) }); j(w).bind("click.DT", function () { g.oApi._fnPageChange(g, "next") && r(g) }); j(s).bind("selectstart.DT", function () { return false }); j(w).bind("selectstart.DT", function () { return false }); if (g.sTableId !== "" && typeof g.aanFeatures.p == "undefined") { m.setAttribute("id", g.sTableId + "_paginate"); s.setAttribute("id", g.sTableId + "_previous"); w.setAttribute("id", g.sTableId + "_next") } }, fnUpdate: function (g) { if (g.aanFeatures.p) for (var m = g.aanFeatures.p, r = 0, s = m.length; r < s; r++) if (m[r].childNodes.length !== 0) { m[r].childNodes[0].className = g._iDisplayStart === 0 ? g.oClasses.sPagePrevDisabled : g.oClasses.sPagePrevEnabled; m[r].childNodes[1].className = g.fnDisplayEnd() == g.fnRecordsDisplay() ? g.oClasses.sPageNextDisabled : g.oClasses.sPageNextEnabled } } }, iFullNumbersShowPages: 5, full_numbers: { fnInit: function (g, m, r) { var s = p.createElement("span"), w = p.createElement("span"), y = p.createElement("span"), F = p.createElement("span"), x = p.createElement("span"); s.innerHTML = g.oLanguage.oPaginate.sFirst; w.innerHTML = g.oLanguage.oPaginate.sPrevious; F.innerHTML = g.oLanguage.oPaginate.sNext; x.innerHTML = g.oLanguage.oPaginate.sLast; var u = g.oClasses; s.className = u.sPageButton + " " + u.sPageFirst; w.className = u.sPageButton + " " + u.sPagePrevious; F.className = u.sPageButton + " " + u.sPageNext; x.className = u.sPageButton + " " + u.sPageLast; m.appendChild(s); m.appendChild(w); m.appendChild(y); m.appendChild(F); m.appendChild(x); j(s).bind("click.DT", function () { g.oApi._fnPageChange(g, "first") && r(g) }); j(w).bind("click.DT", function () { g.oApi._fnPageChange(g, "previous") && r(g) }); j(F).bind("click.DT", function () { g.oApi._fnPageChange(g, "next") && r(g) }); j(x).bind("click.DT", function () { g.oApi._fnPageChange(g, "last") && r(g) }); j("span", m).bind("mousedown.DT", function () { return false }).bind("selectstart.DT", function () { return false }); if (g.sTableId !== "" && typeof g.aanFeatures.p == "undefined") { m.setAttribute("id", g.sTableId + "_paginate"); s.setAttribute("id", g.sTableId + "_first"); w.setAttribute("id", g.sTableId + "_previous"); F.setAttribute("id", g.sTableId + "_next"); x.setAttribute("id", g.sTableId + "_last") } }, fnUpdate: function (g, m) { if (g.aanFeatures.p) { var r = n.oPagination.iFullNumbersShowPages, s = Math.floor(r / 2), w = Math.ceil(g.fnRecordsDisplay() / g._iDisplayLength), y = Math.ceil(g._iDisplayStart / g._iDisplayLength) + 1, F = "", x, u = g.oClasses; if (w < r) { s = 1; x = w } else if (y <= s) { s = 1; x = r } else if (y >= w - s) { s = w - r + 1; x = w } else { s = y - Math.ceil(r / 2) + 1; x = s + r - 1 } for (r = s; r <= x; r++) F += y != r ? '<span class="' + u.sPageButton + '">' + r + "</span>" : '<span class="' + u.sPageButtonActive + '">' + r + "</span>"; x = g.aanFeatures.p; var z, U = function () { g._iDisplayStart = (this.innerHTML * 1 - 1) * g._iDisplayLength; m(g); return false }, C = function () { return false }; r = 0; for (s = x.length; r < s; r++) if (x[r].childNodes.length !== 0) { z = j("span:eq(2)", x[r]); z.html(F); j("span", z).bind("click.DT", U).bind("mousedown.DT", C).bind("selectstart.DT", C); z = x[r].getElementsByTagName("span"); z = [z[0], z[1], z[z.length - 2], z[z.length - 1]]; j(z).removeClass(u.sPageButton + " " + u.sPageButtonActive + " " + u.sPageButtonStaticDisabled); if (y == 1) { z[0].className += " " + u.sPageButtonStaticDisabled; z[1].className += " " + u.sPageButtonStaticDisabled } else { z[0].className += " " + u.sPageButton; z[1].className += " " + u.sPageButton } if (w === 0 || y == w || g._iDisplayLength == -1) { z[2].className += " " + u.sPageButtonStaticDisabled; z[3].className += " " + u.sPageButtonStaticDisabled } else { z[2].className += " " + u.sPageButton; z[3].className += " " + u.sPageButton } } } } } }; n.oSort = { "string-asc": function (g, m) { g = g.toLowerCase(); m = m.toLowerCase(); return g < m ? -1 : g > m ? 1 : 0 }, "string-desc": function (g, m) { g = g.toLowerCase(); m = m.toLowerCase(); return g < m ? 1 : g > m ? -1 : 0 }, "html-asc": function (g, m) { g = g.replace(/<.*?>/g, "").toLowerCase(); m = m.replace(/<.*?>/g, "").toLowerCase(); return g < m ? -1 : g > m ? 1 : 0 }, "html-desc": function (g, m) { g = g.replace(/<.*?>/g, "").toLowerCase(); m = m.replace(/<.*?>/g, "").toLowerCase(); return g < m ? 1 : g > m ? -1 : 0 }, "date-asc": function (g, m) { g = Date.parse(g); m = Date.parse(m); if (isNaN(g) || g === "") g = Date.parse("01/01/1970 00:00:00"); if (isNaN(m) || m === "") m = Date.parse("01/01/1970 00:00:00"); return g - m }, "date-desc": function (g, m) { g = Date.parse(g); m = Date.parse(m); if (isNaN(g) || g === "") g = Date.parse("01/01/1970 00:00:00"); if (isNaN(m) || m === "") m = Date.parse("01/01/1970 00:00:00"); return m - g }, "numeric-asc": function (g, m) { return (g == "-" || g === "" ? 0 : g * 1) - (m == "-" || m === "" ? 0 : m * 1) }, "numeric-desc": function (g, m) { return (m == "-" || m === "" ? 0 : m * 1) - (g == "-" || g === "" ? 0 : g * 1) } }; n.aTypes = [function (g) { if (g.length === 0) return "numeric"; var m, r = false; m = g.charAt(0); if ("0123456789-".indexOf(m) == -1) return null; for (var s = 1; s < g.length; s++) { m = g.charAt(s); if ("0123456789.".indexOf(m) == -1) return null; if (m == ".") { if (r) return null; r = true } } return "numeric" }, function (g) { var m = Date.parse(g); if (m !== null && !isNaN(m) || g.length === 0) return "date"; return null }, function (g) { if (g.indexOf("<") != -1 && g.indexOf(">") != -1) return "html"; return null } ]; n.fnVersionCheck = function (g) { var m = function (x, u) { for (; x.length < u; ) x += "0"; return x }, r = n.sVersion.split("."); g = g.split("."); for (var s = "", w = "", y = 0, F = g.length; y < F; y++) { s += m(r[y], 3); w += m(g[y], 3) } return parseInt(s, 10) >= parseInt(w, 10) }; n._oExternConfig = { iNextUnique: 0 }; j.fn.dataTable = function (g) { function m() { this.fnRecordsTotal = function () { return this.oFeatures.bServerSide ? parseInt(this._iRecordsTotal, 10) : this.aiDisplayMaster.length }; this.fnRecordsDisplay = function () { return this.oFeatures.bServerSide ? parseInt(this._iRecordsDisplay, 10) : this.aiDisplay.length }; this.fnDisplayEnd = function () { return this.oFeatures.bServerSide ? this.oFeatures.bPaginate === false || this._iDisplayLength == -1 ? this._iDisplayStart + this.aiDisplay.length : Math.min(this._iDisplayStart + this._iDisplayLength, this._iRecordsDisplay) : this._iDisplayEnd }; this.sInstance = this.oInstance = null; this.oFeatures = { bPaginate: true, bLengthChange: true, bFilter: true, bSort: true, bInfo: true, bAutoWidth: true, bProcessing: false, bSortClasses: true, bStateSave: false, bServerSide: false }; this.oScroll = { sX: "", sXInner: "", sY: "", bCollapse: false, bInfinite: false, iLoadGap: 100, iBarWidth: 0, bAutoCss: true }; this.aanFeatures = []; this.oLanguage = { sProcessing: JS_RESOURCES.sProcessing, sLengthMenu: JS_RESOURCES.sLengthMenu, sZeroRecords: JS_RESOURCES.sZeroRecords, sEmptyTable: JS_RESOURCES.sEmptyTable, sInfo: JS_RESOURCES.sInfo, sInfoEmpty: JS_RESOURCES.sInfoEmpty, sInfoFiltered: JS_RESOURCES.sInfoFiltered, sInfoPostFix: "", sSearch: JS_RESOURCES.sSearch, sUrl: "", oPaginate: { sFirst: JS_RESOURCES.sFirst, sPrevious: JS_RESOURCES.sPrevious, sNext: JS_RESOURCES.sNext, sLast: JS_RESOURCES.sLast }, fnInfoCallback: null }; this.aoData = []; this.aiDisplay = []; this.aiDisplayMaster = []; this.aoColumns = []; this.iNextId = 0; this.asDataSearch = []; this.oPreviousSearch = { sSearch: "", bRegex: false, bSmart: true }; this.aoPreSearchCols = []; this.aaSorting = [[0, "asc", 0]]; this.aaSortingFixed = null; this.asStripClasses = []; this.asDestoryStrips = []; this.sDestroyWidth = 0; this.fnFooterCallback = this.fnHeaderCallback = this.fnRowCallback = null; this.aoDrawCallback = []; this.fnInitComplete = null; this.sTableId = ""; this.nTableWrapper = this.nTBody = this.nTFoot = this.nTHead = this.nTable = null; this.bInitialised = false; this.aoOpenRows = []; this.sDom = "lfrtip"; this.sPaginationType = "two_button"; this.iCookieDuration = 7200; this.sCookiePrefix = "SpryMedia_DataTables_"; this.fnCookieCallback = null; this.aoStateSave = []; this.aoStateLoad = []; this.sAjaxSource = this.oLoadedState = null; this.bAjaxDataGet = true; this.fnServerData = function (a, b, c) { j.ajax({ url: a, data: b, success: c, dataType: "json", cache: false, error: function (d, f) { f == "parsererror" && alert("DataTables warning: JSON data from server could not be parsed. This is caused by a JSON formatting error.") } }) }; this.fnFormatNumber = function (a) { if (a < 1E3) return a; else { var b = a + ""; a = b.split(""); var c = ""; b = b.length; for (var d = 0; d < b; d++) { if (d % 3 === 0 && d !== 0) c = "," + c; c = a[b - d - 1] + c } } return c }; this.aLengthMenu = [10, 25, 50, 100]; this.bDrawing = this.iDraw = 0; this.iDrawError = -1; this._iDisplayLength = 10; this._iDisplayStart = 0; this._iDisplayEnd = 10; this._iRecordsDisplay = this._iRecordsTotal = 0; this.bJUI = false; this.oClasses = n.oStdClasses; this.bSorted = this.bFiltered = false; this.oInit = null } function r(a) { return function () { var b = [A(this[n.iApiIndex])].concat(Array.prototype.slice.call(arguments)); return n.oApi[a].apply(this, b) } } function s(a) { var b, c; if (a.bInitialised === false) setTimeout(function () { s(a) }, 200); else { sa(a); U(a); K(a, true); a.oFeatures.bAutoWidth && $(a); b = 0; for (c = a.aoColumns.length; b < c; b++) if (a.aoColumns[b].sWidth !== null) a.aoColumns[b].nTh.style.width = v(a.aoColumns[b].sWidth); if (a.oFeatures.bSort) O(a); else { a.aiDisplay = a.aiDisplayMaster.slice(); E(a); C(a) } if (a.sAjaxSource !== null && !a.oFeatures.bServerSide) a.fnServerData.call(a.oInstance, a.sAjaxSource, [], function (d) { for (b = 0; b < d.aaData.length; b++) u(a, d.aaData[b]); a.iInitDisplayStart = a._iDisplayStart; if (a.oFeatures.bSort) O(a); else { a.aiDisplay = a.aiDisplayMaster.slice(); E(a); C(a) } K(a, false); w(a, d) }); else if (!a.oFeatures.bServerSide) { K(a, false); w(a) } } } function w(a, b) { a._bInitComplete = true; if (typeof a.fnInitComplete == "function") typeof b != "undefined" ? a.fnInitComplete.call(a.oInstance, a, b) : a.fnInitComplete.call(a.oInstance, a) } function y(a, b, c) { o(a.oLanguage, b, "sProcessing"); o(a.oLanguage, b, "sLengthMenu"); o(a.oLanguage, b, "sEmptyTable"); o(a.oLanguage, b, "sZeroRecords"); o(a.oLanguage, b, "sInfo"); o(a.oLanguage, b, "sInfoEmpty"); o(a.oLanguage, b, "sInfoFiltered"); o(a.oLanguage, b, "sInfoPostFix"); o(a.oLanguage, b, "sSearch"); if (typeof b.oPaginate != "undefined") { o(a.oLanguage.oPaginate, b.oPaginate, "sFirst"); o(a.oLanguage.oPaginate, b.oPaginate, "sPrevious"); o(a.oLanguage.oPaginate, b.oPaginate, "sNext"); o(a.oLanguage.oPaginate, b.oPaginate, "sLast") } typeof b.sEmptyTable == "undefined" && typeof b.sZeroRecords != "undefined" && o(a.oLanguage, b, "sZeroRecords", "sEmptyTable"); c && s(a) } function F(a, b) { a.aoColumns[a.aoColumns.length++] = { sType: null, _bAutoType: true, bVisible: true, bSearchable: true, bSortable: true, asSorting: ["asc", "desc"], sSortingClass: a.oClasses.sSortable, sSortingClassJUI: a.oClasses.sSortJUI, sTitle: b ? b.innerHTML : "", sName: "", sWidth: null, sWidthOrig: null, sClass: null, fnRender: null, bUseRendered: true, iDataSort: a.aoColumns.length - 1, sSortDataType: "std", nTh: b ? b : p.createElement("th"), nTf: null, anThExtra: [], anTfExtra: [] }; b = a.aoColumns.length - 1; if (typeof a.aoPreSearchCols[b] == "undefined" || a.aoPreSearchCols[b] === null) a.aoPreSearchCols[b] = { sSearch: "", bRegex: false, bSmart: true }; else { if (typeof a.aoPreSearchCols[b].bRegex == "undefined") a.aoPreSearchCols[b].bRegex = true; if (typeof a.aoPreSearchCols[b].bSmart == "undefined") a.aoPreSearchCols[b].bSmart = true } x(a, b, null) } function x(a, b, c) { b = a.aoColumns[b]; if (typeof c != "undefined" && c !== null) { if (typeof c.sType != "undefined") { b.sType = c.sType; b._bAutoType = false } o(b, c, "bVisible"); o(b, c, "bSearchable"); o(b, c, "bSortable"); o(b, c, "sTitle"); o(b, c, "sName"); o(b, c, "sWidth"); o(b, c, "sWidth", "sWidthOrig"); o(b, c, "sClass"); o(b, c, "fnRender"); o(b, c, "bUseRendered"); o(b, c, "iDataSort"); o(b, c, "asSorting"); o(b, c, "sSortDataType") } if (!a.oFeatures.bSort) b.bSortable = false; if (!b.bSortable || j.inArray("asc", b.asSorting) == -1 && j.inArray("desc", b.asSorting) == -1) { b.sSortingClass = a.oClasses.sSortableNone; b.sSortingClassJUI = "" } else if (j.inArray("asc", b.asSorting) != -1 && j.inArray("desc", b.asSorting) == -1) { b.sSortingClass = a.oClasses.sSortableAsc; b.sSortingClassJUI = a.oClasses.sSortJUIAscAllowed } else if (j.inArray("asc", b.asSorting) == -1 && j.inArray("desc", b.asSorting) != -1) { b.sSortingClass = a.oClasses.sSortableDesc; b.sSortingClassJUI = a.oClasses.sSortJUIDescAllowed } } function u(a, b) { if (b.length != a.aoColumns.length && a.iDrawError != a.iDraw) { H(a, 0, "Added data (size " + b.length + ") does not match known number of columns (" + a.aoColumns.length + ")"); a.iDrawError = a.iDraw; return -1 } b = b.slice(); var c = a.aoData.length; a.aoData.push({ nTr: p.createElement("tr"), _iId: a.iNextId++, _aData: b, _anHidden: [], _sRowStripe: "" }); for (var d, f, e = 0; e < b.length; e++) { d = p.createElement("td"); if (b[e] === null) b[e] = ""; if (typeof a.aoColumns[e].fnRender == "function") { f = a.aoColumns[e].fnRender({ iDataRow: c, iDataColumn: e, aData: b, oSettings: a }); d.innerHTML = f; if (a.aoColumns[e].bUseRendered) a.aoData[c]._aData[e] = f } else d.innerHTML = b[e]; if (typeof b[e] != "string") b[e] += ""; b[e] = j.trim(b[e]); if (a.aoColumns[e].sClass !== null) d.className = a.aoColumns[e].sClass; if (a.aoColumns[e]._bAutoType && a.aoColumns[e].sType != "string") { f = aa(a.aoData[c]._aData[e]); if (a.aoColumns[e].sType === null) a.aoColumns[e].sType = f; else if (a.aoColumns[e].sType != f) a.aoColumns[e].sType = "string" } if (a.aoColumns[e].bVisible) { a.aoData[c].nTr.appendChild(d); a.aoData[c]._anHidden[e] = null } else a.aoData[c]._anHidden[e] = d } a.aiDisplayMaster.push(c); return c } function z(a) { var b, c, d, f, e, i, h, k; if (a.sAjaxSource === null) { h = a.nTBody.childNodes; b = 0; for (c = h.length; b < c; b++) if (h[b].nodeName.toUpperCase() == "TR") { i = a.aoData.length; a.aoData.push({ nTr: h[b], _iId: a.iNextId++, _aData: [], _anHidden: [], _sRowStripe: "" }); a.aiDisplayMaster.push(i); k = a.aoData[i]._aData; i = h[b].childNodes; d = e = 0; for (f = i.length; d < f; d++) if (i[d].nodeName.toUpperCase() == "TD") { k[e] = j.trim(i[d].innerHTML); e++ } } } h = R(a); i = []; b = 0; for (c = h.length; b < c; b++) { d = 0; for (f = h[b].childNodes.length; d < f; d++) { e = h[b].childNodes[d]; e.nodeName.toUpperCase() == "TD" && i.push(e) } } i.length != h.length * a.aoColumns.length && H(a, 1, "Unexpected number of TD elements. Expected " + h.length * a.aoColumns.length + " and got " + i.length + ". DataTables does not support rowspan / colspan in the table body, and there must be one cell for each row/column combination."); h = 0; for (d = a.aoColumns.length; h < d; h++) { if (a.aoColumns[h].sTitle === null) a.aoColumns[h].sTitle = a.aoColumns[h].nTh.innerHTML; f = a.aoColumns[h]._bAutoType; e = typeof a.aoColumns[h].fnRender == "function"; k = a.aoColumns[h].sClass !== null; var l = a.aoColumns[h].bVisible, q, t; if (f || e || k || !l) { b = 0; for (c = a.aoData.length; b < c; b++) { q = i[b * d + h]; if (f) if (a.aoColumns[h].sType != "string") { t = aa(a.aoData[b]._aData[h]); if (a.aoColumns[h].sType === null) a.aoColumns[h].sType = t; else if (a.aoColumns[h].sType != t) a.aoColumns[h].sType = "string" } if (e) { t = a.aoColumns[h].fnRender({ iDataRow: b, iDataColumn: h, aData: a.aoData[b]._aData, oSettings: a }); q.innerHTML = t; if (a.aoColumns[h].bUseRendered) a.aoData[b]._aData[h] = t } if (k) q.className += " " + a.aoColumns[h].sClass; if (l) a.aoData[b]._anHidden[h] = null; else { a.aoData[b]._anHidden[h] = q; q.parentNode.removeChild(q) } } } } } function U(a) { var b, c, d, f, e, i = a.nTHead.getElementsByTagName("tr"), h = 0, k; if (a.nTHead.getElementsByTagName("th").length !== 0) { b = 0; for (d = a.aoColumns.length; b < d; b++) { c = a.aoColumns[b].nTh; a.aoColumns[b].sClass !== null && j(c).addClass(a.aoColumns[b].sClass); f = 1; for (e = i.length; f < e; f++) { k = j(i[f]).children(); a.aoColumns[b].anThExtra.push(k[b - h]); a.aoColumns[b].bVisible || i[f].removeChild(k[b - h]) } if (a.aoColumns[b].bVisible) { if (a.aoColumns[b].sTitle != c.innerHTML) c.innerHTML = a.aoColumns[b].sTitle } else { c.parentNode.removeChild(c); h++ } } } else { f = p.createElement("tr"); b = 0; for (d = a.aoColumns.length; b < d; b++) { c = a.aoColumns[b].nTh; c.innerHTML = a.aoColumns[b].sTitle; a.aoColumns[b].sClass !== null && j(c).addClass(a.aoColumns[b].sClass); a.aoColumns[b].bVisible && f.appendChild(c) } j(a.nTHead).html("")[0].appendChild(f) } if (a.bJUI) { b = 0; for (d = a.aoColumns.length; b < d; b++) { c = a.aoColumns[b].nTh; f = p.createElement("div"); f.className = a.oClasses.sSortJUIWrapper; j(c).contents().appendTo(f); f.appendChild(p.createElement("span")); c.appendChild(f) } } d = function () { this.onselectstart = function () { return false }; return false }; if (a.oFeatures.bSort) for (b = 0; b < a.aoColumns.length; b++) if (a.aoColumns[b].bSortable !== false) { ba(a, a.aoColumns[b].nTh, b); j(a.aoColumns[b].nTh).bind("mousedown.DT", d) } else j(a.aoColumns[b].nTh).addClass(a.oClasses.sSortableNone); if (a.nTFoot !== null) { h = 0; i = a.nTFoot.getElementsByTagName("tr"); c = i[0].getElementsByTagName("th"); b = 0; for (d = c.length; b < d; b++) if (typeof a.aoColumns[b] != "undefined") { a.aoColumns[b].nTf = c[b - h]; if (a.oClasses.sFooterTH !== "") a.aoColumns[b].nTf.className += " " + a.oClasses.sFooterTH; f = 1; for (e = i.length; f < e; f++) { k = j(i[f]).children(); a.aoColumns[b].anTfExtra.push(k[b - h]); a.aoColumns[b].bVisible || i[f].removeChild(k[b - h]) } if (!a.aoColumns[b].bVisible) { c[b - h].parentNode.removeChild(c[b - h]); h++ } } } } function C(a) { var b, c, d = [], f = 0, e = false; b = a.asStripClasses.length; c = a.aoOpenRows.length; a.bDrawing = true; if (typeof a.iInitDisplayStart != "undefined" && a.iInitDisplayStart != -1) { a._iDisplayStart = a.oFeatures.bServerSide ? a.iInitDisplayStart : a.iInitDisplayStart >= a.fnRecordsDisplay() ? 0 : a.iInitDisplayStart; a.iInitDisplayStart = -1; E(a) } if (!(!a.bDestroying && a.oFeatures.bServerSide && !ta(a))) { a.oFeatures.bServerSide || a.iDraw++; if (a.aiDisplay.length !== 0) { var i = a._iDisplayStart, h = a._iDisplayEnd; if (a.oFeatures.bServerSide) { i = 0; h = a.aoData.length } for (i = i; i < h; i++) { var k = a.aoData[a.aiDisplay[i]], l = k.nTr; if (b !== 0) { var q = a.asStripClasses[f % b]; if (k._sRowStripe != q) { j(l).removeClass(k._sRowStripe).addClass(q); k._sRowStripe = q } } if (typeof a.fnRowCallback == "function") { l = a.fnRowCallback.call(a.oInstance, l, a.aoData[a.aiDisplay[i]]._aData, f, i); if (!l && !e) { H(a, 0, "A node was not returned by fnRowCallback"); e = true } } d.push(l); f++; if (c !== 0) for (k = 0; k < c; k++) l == a.aoOpenRows[k].nParent && d.push(a.aoOpenRows[k].nTr) } } else { d[0] = p.createElement("tr"); if (typeof a.asStripClasses[0] != "undefined") d[0].className = a.asStripClasses[0]; e = p.createElement("td"); e.setAttribute("valign", "top"); e.colSpan = S(a); e.className = a.oClasses.sRowEmpty; e.innerHTML = typeof a.oLanguage.sEmptyTable != "undefined" && a.fnRecordsTotal() === 0 ? a.oLanguage.sEmptyTable : a.oLanguage.sZeroRecords.replace("_MAX_", a.fnFormatNumber(a.fnRecordsTotal())); d[f].appendChild(e) } typeof a.fnHeaderCallback == "function" && a.fnHeaderCallback.call(a.oInstance, j(">tr", a.nTHead)[0], V(a), a._iDisplayStart, a.fnDisplayEnd(), a.aiDisplay); typeof a.fnFooterCallback == "function" && a.fnFooterCallback.call(a.oInstance, j(">tr", a.nTFoot)[0], V(a), a._iDisplayStart, a.fnDisplayEnd(), a.aiDisplay); f = p.createDocumentFragment(); b = p.createDocumentFragment(); if (a.nTBody) { e = a.nTBody.parentNode; b.appendChild(a.nTBody); if (!a.oScroll.bInfinite || !a._bInitComplete || a.bSorted || a.bFiltered) { c = a.nTBody.childNodes; for (b = c.length - 1; b >= 0; b--) c[b].parentNode.removeChild(c[b]) } b = 0; for (c = d.length; b < c; b++) f.appendChild(d[b]); a.nTBody.appendChild(f); e !== null && e.appendChild(a.nTBody) } for (b = a.aoDrawCallback.length - 1; b >= 0; b--) a.aoDrawCallback[b].fn.call(a.oInstance, a); a.bSorted = false; a.bFiltered = false; a.bDrawing = false; if (a.oFeatures.bServerSide) { K(a, false); typeof a._bInitComplete == "undefined" && w(a) } } } function W(a) { if (a.oFeatures.bSort) O(a, a.oPreviousSearch); else if (a.oFeatures.bFilter) P(a, a.oPreviousSearch); else { E(a); C(a) } } function ta(a) { if (a.bAjaxDataGet) { K(a, true); var b = a.aoColumns.length, c = [], d; a.iDraw++; c.push({ name: "sEcho", value: a.iDraw }); c.push({ name: "iColumns", value: b }); c.push({ name: "sColumns", value: ca(a) }); c.push({ name: "iDisplayStart", value: a._iDisplayStart }); c.push({ name: "iDisplayLength", value: a.oFeatures.bPaginate !== false ? a._iDisplayLength : -1 }); if (a.oFeatures.bFilter !== false) { c.push({ name: "sSearch", value: a.oPreviousSearch.sSearch }); c.push({ name: "bRegex", value: a.oPreviousSearch.bRegex }); for (d = 0; d < b; d++) { c.push({ name: "sSearch_" + d, value: a.aoPreSearchCols[d].sSearch }); c.push({ name: "bRegex_" + d, value: a.aoPreSearchCols[d].bRegex }); c.push({ name: "bSearchable_" + d, value: a.aoColumns[d].bSearchable }) } } if (a.oFeatures.bSort !== false) { var f = a.aaSortingFixed !== null ? a.aaSortingFixed.length : 0, e = a.aaSorting.length; c.push({ name: "iSortingCols", value: f + e }); for (d = 0; d < f; d++) { c.push({ name: "iSortCol_" + d, value: a.aaSortingFixed[d][0] }); c.push({ name: "sSortDir_" + d, value: a.aaSortingFixed[d][1] }) } for (d = 0; d < e; d++) { c.push({ name: "iSortCol_" + (d + f), value: a.aaSorting[d][0] }); c.push({ name: "sSortDir_" + (d + f), value: a.aaSorting[d][1] }) } for (d = 0; d < b; d++) c.push({ name: "bSortable_" + d, value: a.aoColumns[d].bSortable }) } a.fnServerData.call(a.oInstance, a.sAjaxSource, c, function (i) { ua(a, i) }); return false } else return true } function ua(a, b) { if (typeof b.sEcho != "undefined") if (b.sEcho * 1 < a.iDraw) return; else a.iDraw = b.sEcho * 1; if (!a.oScroll.bInfinite || a.oScroll.bInfinite && (a.bSorted || a.bFiltered)) da(a); a._iRecordsTotal = b.iTotalRecords; a._iRecordsDisplay = b.iTotalDisplayRecords; var c = ca(a); if (c = typeof b.sColumns != "undefined" && c !== "" && b.sColumns != c) var d = va(a, b.sColumns); for (var f = 0, e = b.aaData.length; f < e; f++) if (c) { for (var i = [], h = 0, k = a.aoColumns.length; h < k; h++) i.push(b.aaData[f][d[h]]); u(a, i) } else u(a, b.aaData[f]); a.aiDisplay = a.aiDisplayMaster.slice(); a.bAjaxDataGet = false; C(a); a.bAjaxDataGet = true; K(a, false) } function sa(a) { var b = p.createElement("div"); a.nTable.parentNode.insertBefore(b, a.nTable); a.nTableWrapper = p.createElement("div"); a.nTableWrapper.className = a.oClasses.sWrapper; a.sTableId !== "" && a.nTableWrapper.setAttribute("id", a.sTableId + "_wrapper"); for (var c = a.nTableWrapper, d = a.sDom.split(""), f, e, i, h, k, l, q, t = 0; t < d.length; t++) { e = 0; i = d[t]; if (i == "<") { h = p.createElement("div"); k = d[t + 1]; if (k == "'" || k == '"') { l = ""; for (q = 2; d[t + q] != k; ) { l += d[t + q]; q++ } if (l == "H") l = "fg-toolbar ui-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix"; else if (l == "F") l = "fg-toolbar ui-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix"; if (l.indexOf(".") != -1) { k = l.split("."); h.setAttribute("id", k[0].substr(1, k[0].length - 1)); h.className = k[1] } else if (l.charAt(0) == "#") h.setAttribute("id", l.substr(1, l.length - 1)); else h.className = l; t += q } c.appendChild(h); c = h } else if (i == ">") c = c.parentNode; else if (i == "l" && a.oFeatures.bPaginate && a.oFeatures.bLengthChange) { f = wa(a); e = 1 } else if (i == "f" && a.oFeatures.bFilter) { f = xa(a); e = 1 } else if (i == "r" && a.oFeatures.bProcessing) { f = ya(a); e = 1 } else if (i == "t") { f = za(a); e = 1 } else if (i == "i" && a.oFeatures.bInfo) { f = Aa(a); e = 1 } else if (i == "p" && a.oFeatures.bPaginate) { f = Ba(a); e = 1 } else if (n.aoFeatures.length !== 0) { h = n.aoFeatures; q = 0; for (k = h.length; q < k; q++) if (i == h[q].cFeature) { if (f = h[q].fnInit(a)) e = 1; break } } if (e == 1 && f !== null) { if (typeof a.aanFeatures[i] != "object") a.aanFeatures[i] = []; a.aanFeatures[i].push(f); c.appendChild(f) } } b.parentNode.replaceChild(a.nTableWrapper, b) } function za(a) { if (a.oScroll.sX === "" && a.oScroll.sY === "") return a.nTable; var b = p.createElement("div"), c = p.createElement("div"), d = p.createElement("div"), f = p.createElement("div"), e = p.createElement("div"), i = p.createElement("div"), h = a.nTable.cloneNode(false), k = a.nTable.cloneNode(false), l = a.nTable.getElementsByTagName("thead")[0], q = a.nTable.getElementsByTagName("tfoot").length === 0 ? null : a.nTable.getElementsByTagName("tfoot")[0], t = typeof g.bJQueryUI != "undefined" && g.bJQueryUI ? n.oJUIClasses : n.oStdClasses; c.appendChild(d); e.appendChild(i); f.appendChild(a.nTable); b.appendChild(c); b.appendChild(f); d.appendChild(h); h.appendChild(l); if (q !== null) { b.appendChild(e); i.appendChild(k); k.appendChild(q) } b.className = t.sScrollWrapper; c.className = t.sScrollHead; d.className = t.sScrollHeadInner; f.className = t.sScrollBody; e.className = t.sScrollFoot; i.className = t.sScrollFootInner; if (a.oScroll.bAutoCss) { c.style.overflow = "hidden"; c.style.position = "relative"; e.style.overflow = "hidden"; f.style.overflow = "auto" } c.style.border = "0"; c.style.width = "100%"; e.style.border = "0"; d.style.width = "150%"; h.removeAttribute("id"); h.style.marginLeft = "0"; a.nTable.style.marginLeft = "0"; if (q !== null) { k.removeAttribute("id"); k.style.marginLeft = "0" } d = j(">caption", a.nTable); i = 0; for (k = d.length; i < k; i++) h.appendChild(d[i]); if (a.oScroll.sX !== "") { c.style.width = v(a.oScroll.sX); f.style.width = v(a.oScroll.sX); if (q !== null) e.style.width = v(a.oScroll.sX); j(f).scroll(function () { c.scrollLeft = this.scrollLeft; if (q !== null) e.scrollLeft = this.scrollLeft }) } if (a.oScroll.sY !== "") f.style.height = v(a.oScroll.sY); a.aoDrawCallback.push({ fn: Ca, sName: "scrolling" }); a.oScroll.bInfinite && j(f).scroll(function () { if (!a.bDrawing) if (j(this).scrollTop() + j(this).height() > j(a.nTable).height() - a.oScroll.iLoadGap) if (a.fnDisplayEnd() < a.fnRecordsDisplay()) { ea(a, "next"); E(a); C(a) } }); a.nScrollHead = c; a.nScrollFoot = e; return b } function Ca(a) { var b = a.nScrollHead.getElementsByTagName("div")[0], c = b.getElementsByTagName("table")[0], d = a.nTable.parentNode, f, e, i, h, k, l, q, t, G = []; i = a.nTable.getElementsByTagName("thead"); i.length > 0 && a.nTable.removeChild(i[0]); if (a.nTFoot !== null) { k = a.nTable.getElementsByTagName("tfoot"); k.length > 0 && a.nTable.removeChild(k[0]) } i = a.nTHead.cloneNode(true); a.nTable.insertBefore(i, a.nTable.childNodes[0]); if (a.nTFoot !== null) { k = a.nTFoot.cloneNode(true); a.nTable.insertBefore(k, a.nTable.childNodes[1]) } var J = fa(i); f = 0; for (e = J.length; f < e; f++) { q = ga(a, f); J[f].style.width = a.aoColumns[q].sWidth } a.nTFoot !== null && L(function (B) { B.style.width = "" }, k.getElementsByTagName("tr")); f = j(a.nTable).outerWidth(); if (a.oScroll.sX === "") { a.nTable.style.width = "100%"; if (j.browser.msie && j.browser.version <= 7) a.nTable.style.width = v(j(a.nTable).outerWidth() - a.oScroll.iBarWidth) } else if (a.oScroll.sXInner !== "") a.nTable.style.width = v(a.oScroll.sXInner); else if (f == j(d).width() && j(d).height() < j(a.nTable).height()) { a.nTable.style.width = v(f - a.oScroll.iBarWidth); if (j(a.nTable).outerWidth() > f - a.oScroll.iBarWidth) a.nTable.style.width = v(f) } else a.nTable.style.width = v(f); f = j(a.nTable).outerWidth(); e = a.nTHead.getElementsByTagName("tr"); i = i.getElementsByTagName("tr"); L(function (B, I) { l = B.style; l.paddingTop = "0"; l.paddingBottom = "0"; l.borderTopWidth = "0"; l.borderBottomWidth = "0"; l.height = 0; t = j(B).width(); I.style.width = v(t); G.push(t) }, i, e); j(i).height(0); if (a.nTFoot !== null) { h = k.getElementsByTagName("tr"); k = a.nTFoot.getElementsByTagName("tr"); L(function (B, I) { l = B.style; l.paddingTop = "0"; l.paddingBottom = "0"; l.borderTopWidth = "0"; l.borderBottomWidth = "0"; l.height = 0; t = j(B).width(); I.style.width = v(t); G.push(t) }, h, k); j(h).height(0) } L(function (B) { B.innerHTML = ""; B.style.width = v(G.shift()) }, i); a.nTFoot !== null && L(function (B) { B.innerHTML = ""; B.style.width = v(G.shift()) }, h); if (j(a.nTable).outerWidth() < f) if (a.oScroll.sX === "") H(a, 1, "The table cannot fit into the current element which will cause column misalignment. It is suggested that you enable x-scrolling or increase the width the table has in which to be drawn"); else a.oScroll.sXInner !== "" && H(a, 1, "The table cannot fit into the current element which will cause column misalignment. It is suggested that you increase the sScrollXInner property to allow it to draw in a larger area, or simply remove that parameter to allow automatic calculation"); if (a.oScroll.sY === "") if (j.browser.msie && j.browser.version <= 7) d.style.height = v(a.nTable.offsetHeight + a.oScroll.iBarWidth); if (a.oScroll.sY !== "" && a.oScroll.bCollapse) { d.style.height = v(a.oScroll.sY); h = a.oScroll.sX !== "" && a.nTable.offsetWidth > d.offsetWidth ? a.oScroll.iBarWidth : 0; if (a.nTable.offsetHeight < d.offsetHeight) d.style.height = v(j(a.nTable).height() + h) } h = j(a.nTable).outerWidth(); c.style.width = v(h); b.style.width = v(h + a.oScroll.iBarWidth); if (a.nTFoot !== null) { b = a.nScrollFoot.getElementsByTagName("div")[0]; c = b.getElementsByTagName("table")[0]; b.style.width = v(a.nTable.offsetWidth + a.oScroll.iBarWidth); c.style.width = v(a.nTable.offsetWidth) } if (a.bSorted || a.bFiltered) d.scrollTop = 0 } function X(a) { if (a.oFeatures.bAutoWidth === false) return false; $(a); for (var b = 0, c = a.aoColumns.length; b < c; b++) a.aoColumns[b].nTh.style.width = a.aoColumns[b].sWidth } function xa(a) { var b = p.createElement("div"); a.sTableId !== "" && typeof a.aanFeatures.f == "undefined" && b.setAttribute("id", a.sTableId + "_filter"); b.className = a.oClasses.sFilter; b.innerHTML = a.oLanguage.sSearch + (a.oLanguage.sSearch === "" ? "" : " ") + '<input type="text" />'; var c = j("input", b); c.val(a.oPreviousSearch.sSearch.replace('"', "&quot;")); c.bind("keyup.DT", function () { for (var d = a.aanFeatures.f, f = 0, e = d.length; f < e; f++) d[f] != this.parentNode && j("input", d[f]).val(this.value); this.value != a.oPreviousSearch.sSearch && P(a, { sSearch: this.value, bRegex: a.oPreviousSearch.bRegex, bSmart: a.oPreviousSearch.bSmart }) }); c.bind("keypress.DT", function (d) { if (d.keyCode == 13) return false }); return b } function P(a, b, c) { Da(a, b.sSearch, c, b.bRegex, b.bSmart); for (b = 0; b < a.aoPreSearchCols.length; b++) Ea(a, a.aoPreSearchCols[b].sSearch, b, a.aoPreSearchCols[b].bRegex, a.aoPreSearchCols[b].bSmart); n.afnFiltering.length !== 0 && Fa(a); a.bFiltered = true; a._iDisplayStart = 0; E(a); C(a); ha(a, 0) } function Fa(a) { for (var b = n.afnFiltering, c = 0, d = b.length; c < d; c++) for (var f = 0, e = 0, i = a.aiDisplay.length; e < i; e++) { var h = a.aiDisplay[e - f]; if (!b[c](a, a.aoData[h]._aData, h)) { a.aiDisplay.splice(e - f, 1); f++ } } } function Ea(a, b, c, d, f) { if (b !== "") { var e = 0; b = ia(b, d, f); for (d = a.aiDisplay.length - 1; d >= 0; d--) { f = ja(a.aoData[a.aiDisplay[d]]._aData[c], a.aoColumns[c].sType); if (!b.test(f)) { a.aiDisplay.splice(d, 1); e++ } } } } function Da(a, b, c, d, f) { var e = ia(b, d, f); if (typeof c == "undefined" || c === null) c = 0; if (n.afnFiltering.length !== 0) c = 1; if (b.length <= 0) { a.aiDisplay.splice(0, a.aiDisplay.length); a.aiDisplay = a.aiDisplayMaster.slice() } else if (a.aiDisplay.length == a.aiDisplayMaster.length || a.oPreviousSearch.sSearch.length > b.length || c == 1 || b.indexOf(a.oPreviousSearch.sSearch) !== 0) { a.aiDisplay.splice(0, a.aiDisplay.length); ha(a, 1); for (c = 0; c < a.aiDisplayMaster.length; c++) e.test(a.asDataSearch[c]) && a.aiDisplay.push(a.aiDisplayMaster[c]) } else { var i = 0; for (c = 0; c < a.asDataSearch.length; c++) if (!e.test(a.asDataSearch[c])) { a.aiDisplay.splice(c - i, 1); i++ } } a.oPreviousSearch.sSearch = b; a.oPreviousSearch.bRegex = d; a.oPreviousSearch.bSmart = f } function ha(a, b) { a.asDataSearch.splice(0, a.asDataSearch.length); b = typeof b != "undefined" && b == 1 ? a.aiDisplayMaster : a.aiDisplay; for (var c = 0, d = b.length; c < d; c++) a.asDataSearch[c] = ka(a, a.aoData[b[c]]._aData) } function ka(a, b) { for (var c = "", d = p.createElement("div"), f = 0, e = a.aoColumns.length; f < e; f++) if (a.aoColumns[f].bSearchable) c += ja(b[f], a.aoColumns[f].sType) + "  "; if (c.indexOf("&") !== -1) { d.innerHTML = c; c = d.textContent ? d.textContent : d.innerText; c = c.replace(/\n/g, " ").replace(/\r/g, "") } return c } function ia(a, b, c) { if (c) { a = b ? a.split(" ") : la(a).split(" "); a = "^(?=.*?" + a.join(")(?=.*?") + ").*$"; return new RegExp(a, "i") } else { a = b ? a : la(a); return new RegExp(a, "i") } } function ja(a, b) { if (typeof n.ofnSearch[b] == "function") return n.ofnSearch[b](a); else if (b == "html") return a.replace(/\n/g, " ").replace(/<.*?>/g, ""); else if (typeof a == "string") return a.replace(/\n/g, " "); return a } function O(a, b) { var c, d, f, e, i, h, k = [], l = [], q = n.oSort, t = a.aoData, G = a.aoColumns; if (!a.oFeatures.bServerSide && (a.aaSorting.length !== 0 || a.aaSortingFixed !== null)) { k = a.aaSortingFixed !== null ? a.aaSortingFixed.concat(a.aaSorting) : a.aaSorting.slice(); for (f = 0; f < k.length; f++) { e = k[f][0]; i = M(a, e); h = a.aoColumns[e].sSortDataType; if (typeof n.afnSortData[h] != "undefined") { var J = n.afnSortData[h](a, e, i); i = 0; for (h = t.length; i < h; i++) t[i]._aData[e] = J[i] } } f = 0; for (e = a.aiDisplayMaster.length; f < e; f++) l[a.aiDisplayMaster[f]] = f; var B = k.length; a.aiDisplayMaster.sort(function (I, Y) { var N; for (f = 0; f < B; f++) { c = G[k[f][0]].iDataSort; d = G[c].sType; N = q[d + "-" + k[f][1]](t[I]._aData[c], t[Y]._aData[c]); if (N !== 0) return N } return q["numeric-asc"](l[I], l[Y]) }) } if (typeof b == "undefined" || b) T(a); a.bSorted = true; if (a.oFeatures.bFilter) P(a, a.oPreviousSearch, 1); else { a.aiDisplay = a.aiDisplayMaster.slice(); a._iDisplayStart = 0; E(a); C(a) } } function ba(a, b, c, d) { j(b).bind("click.DT", function (f) { if (a.aoColumns[c].bSortable !== false) { var e = function () { var i, h; if (f.shiftKey) { for (var k = false, l = 0; l < a.aaSorting.length; l++) if (a.aaSorting[l][0] == c) { k = true; i = a.aaSorting[l][0]; h = a.aaSorting[l][2] + 1; if (typeof a.aoColumns[i].asSorting[h] == "undefined") a.aaSorting.splice(l, 1); else { a.aaSorting[l][1] = a.aoColumns[i].asSorting[h]; a.aaSorting[l][2] = h } break } k === false && a.aaSorting.push([c, a.aoColumns[c].asSorting[0], 0]) } else if (a.aaSorting.length == 1 && a.aaSorting[0][0] == c) { i = a.aaSorting[0][0]; h = a.aaSorting[0][2] + 1; if (typeof a.aoColumns[i].asSorting[h] == "undefined") h = 0; a.aaSorting[0][1] = a.aoColumns[i].asSorting[h]; a.aaSorting[0][2] = h } else { a.aaSorting.splice(0, a.aaSorting.length); a.aaSorting.push([c, a.aoColumns[c].asSorting[0], 0]) } O(a) }; if (a.oFeatures.bProcessing) { K(a, true); setTimeout(function () { e(); a.oFeatures.bServerSide || K(a, false) }, 0) } else e(); typeof d == "function" && d(a) } }) } function T(a) { var b, c, d, f, e, i = a.aoColumns.length, h = a.oClasses; for (b = 0; b < i; b++) a.aoColumns[b].bSortable && j(a.aoColumns[b].nTh).removeClass(h.sSortAsc + " " + h.sSortDesc + " " + a.aoColumns[b].sSortingClass); f = a.aaSortingFixed !== null ? a.aaSortingFixed.concat(a.aaSorting) : a.aaSorting.slice(); for (b = 0; b < a.aoColumns.length; b++) if (a.aoColumns[b].bSortable) { e = a.aoColumns[b].sSortingClass; d = -1; for (c = 0; c < f.length; c++) if (f[c][0] == b) { e = f[c][1] == "asc" ? h.sSortAsc : h.sSortDesc; d = c; break } j(a.aoColumns[b].nTh).addClass(e); if (a.bJUI) { c = j("span", a.aoColumns[b].nTh); c.removeClass(h.sSortJUIAsc + " " + h.sSortJUIDesc + " " + h.sSortJUI + " " + h.sSortJUIAscAllowed + " " + h.sSortJUIDescAllowed); c.addClass(d == -1 ? a.aoColumns[b].sSortingClassJUI : f[d][1] == "asc" ? h.sSortJUIAsc : h.sSortJUIDesc) } } else j(a.aoColumns[b].nTh).addClass(a.aoColumns[b].sSortingClass); e = h.sSortColumn; if (a.oFeatures.bSort && a.oFeatures.bSortClasses) { d = Z(a); if (d.length >= i) for (b = 0; b < i; b++) if (d[b].className.indexOf(e + "1") != -1) { c = 0; for (a = d.length / i; c < a; c++) d[i * c + b].className = j.trim(d[i * c + b].className.replace(e + "1", "")) } else if (d[b].className.indexOf(e + "2") != -1) { c = 0; for (a = d.length / i; c < a; c++) d[i * c + b].className = j.trim(d[i * c + b].className.replace(e + "2", "")) } else if (d[b].className.indexOf(e + "3") != -1) { c = 0; for (a = d.length / i; c < a; c++) d[i * c + b].className = j.trim(d[i * c + b].className.replace(" " + e + "3", "")) } h = 1; var k; for (b = 0; b < f.length; b++) { k = parseInt(f[b][0], 10); c = 0; for (a = d.length / i; c < a; c++) d[i * c + k].className += " " + e + h; h < 3 && h++ } } } function Ba(a) { if (a.oScroll.bInfinite) return null; var b = p.createElement("div"); b.className = a.oClasses.sPaging + a.sPaginationType; n.oPagination[a.sPaginationType].fnInit(a, b, function (c) { E(c); C(c) }); typeof a.aanFeatures.p == "undefined" && a.aoDrawCallback.push({ fn: function (c) { n.oPagination[c.sPaginationType].fnUpdate(c, function (d) { E(d); C(d) }) }, sName: "pagination" }); return b } function ea(a, b) { var c = a._iDisplayStart; if (b == "first") a._iDisplayStart = 0; else if (b == "previous") { a._iDisplayStart = a._iDisplayLength >= 0 ? a._iDisplayStart - a._iDisplayLength : 0; if (a._iDisplayStart < 0) a._iDisplayStart = 0 } else if (b == "next") if (a._iDisplayLength >= 0) { if (a._iDisplayStart + a._iDisplayLength < a.fnRecordsDisplay()) a._iDisplayStart += a._iDisplayLength } else a._iDisplayStart = 0; else if (b == "last") if (a._iDisplayLength >= 0) { b = parseInt((a.fnRecordsDisplay() - 1) / a._iDisplayLength, 10) + 1; a._iDisplayStart = (b - 1) * a._iDisplayLength } else a._iDisplayStart = 0; else H(a, 0, "Unknown paging action: " + b); return c != a._iDisplayStart } function Aa(a) { var b = p.createElement("div"); b.className = a.oClasses.sInfo; if (typeof a.aanFeatures.i == "undefined") { a.aoDrawCallback.push({ fn: Ga, sName: "information" }); a.sTableId !== "" && b.setAttribute("id", a.sTableId + "_info") } return b } function Ga(a) { if (!(!a.oFeatures.bInfo || a.aanFeatures.i.length === 0)) { var b = a._iDisplayStart + 1, c = a.fnDisplayEnd(), d = a.fnRecordsTotal(), f = a.fnRecordsDisplay(), e = a.fnFormatNumber(b), i = a.fnFormatNumber(c), h = a.fnFormatNumber(d), k = a.fnFormatNumber(f); if (a.oScroll.bInfinite) e = a.fnFormatNumber(1); e = a.fnRecordsDisplay() === 0 && a.fnRecordsDisplay() == a.fnRecordsTotal() ? a.oLanguage.sInfoEmpty + a.oLanguage.sInfoPostFix : a.fnRecordsDisplay() === 0 ? a.oLanguage.sInfoEmpty + " " + a.oLanguage.sInfoFiltered.replace("_MAX_", h) + a.oLanguage.sInfoPostFix : a.fnRecordsDisplay() == a.fnRecordsTotal() ? a.oLanguage.sInfo.replace("_START_", e).replace("_END_", i).replace("_TOTAL_", k) + a.oLanguage.sInfoPostFix : a.oLanguage.sInfo.replace("_START_", e).replace("_END_", i).replace("_TOTAL_", k) + " " + a.oLanguage.sInfoFiltered.replace("_MAX_", a.fnFormatNumber(a.fnRecordsTotal())) + a.oLanguage.sInfoPostFix; if (a.oLanguage.fnInfoCallback !== null) e = a.oLanguage.fnInfoCallback(a, b, c, d, f, e); a = a.aanFeatures.i; b = 0; for (c = a.length; b < c; b++) j(a[b]).html(e) } } function wa(a) { if (a.oScroll.bInfinite) return null; var b = '<select size="1" ' + (a.sTableId === "" ? "" : 'name="' + a.sTableId + '_length"') + ">", c, d; if (a.aLengthMenu.length == 2 && typeof a.aLengthMenu[0] == "object" && typeof a.aLengthMenu[1] == "object") { c = 0; for (d = a.aLengthMenu[0].length; c < d; c++) b += '<option value="' + a.aLengthMenu[0][c] + '">' + a.aLengthMenu[1][c] + "</option>" } else { c = 0; for (d = a.aLengthMenu.length; c < d; c++) b += '<option value="' + a.aLengthMenu[c] + '">' + a.aLengthMenu[c] + "</option>" } b += "</select>"; var f = p.createElement("div"); a.sTableId !== "" && typeof a.aanFeatures.l == "undefined" && f.setAttribute("id", a.sTableId + "_length"); f.className = a.oClasses.sLength; f.innerHTML = a.oLanguage.sLengthMenu.replace("_MENU_", b); j('select option[value="' + a._iDisplayLength + '"]', f).attr("selected", true); j("select", f).bind("change.DT", function () { var e = j(this).val(), i = a.aanFeatures.l; c = 0; for (d = i.length; c < d; c++) i[c] != this.parentNode && j("select", i[c]).val(e); a._iDisplayLength = parseInt(e, 10); E(a); if (a.fnDisplayEnd() == a.fnRecordsDisplay()) { a._iDisplayStart = a.fnDisplayEnd() - a._iDisplayLength; if (a._iDisplayStart < 0) a._iDisplayStart = 0 } if (a._iDisplayLength == -1) a._iDisplayStart = 0; C(a) }); return f } function ya(a) { var b = p.createElement("div"); a.sTableId !== "" && typeof a.aanFeatures.r == "undefined" && b.setAttribute("id", a.sTableId + "_processing"); b.innerHTML = a.oLanguage.sProcessing; b.className = a.oClasses.sProcessing; a.nTable.parentNode.insertBefore(b, a.nTable); return b } function K(a, b) { if (a.oFeatures.bProcessing) { a = a.aanFeatures.r; for (var c = 0, d = a.length; c < d; c++) a[c].style.visibility = b ? "visible" : "hidden" } } function ga(a, b) { for (var c = -1, d = 0; d < a.aoColumns.length; d++) { a.aoColumns[d].bVisible === true && c++; if (c == b) return d } return null } function M(a, b) { for (var c = -1, d = 0; d < a.aoColumns.length; d++) { a.aoColumns[d].bVisible === true && c++; if (d == b) return a.aoColumns[d].bVisible === true ? c : null } return null } function Q(a, b) { var c, d; c = a._iDisplayStart; for (d = a._iDisplayEnd; c < d; c++) if (a.aoData[a.aiDisplay[c]].nTr == b) return a.aiDisplay[c]; c = 0; for (d = a.aoData.length; c < d; c++) if (a.aoData[c].nTr == b) return c; return null } function S(a) { for (var b = 0, c = 0; c < a.aoColumns.length; c++) a.aoColumns[c].bVisible === true && b++; return b } function E(a) { a._iDisplayEnd = a.oFeatures.bPaginate === false ? a.aiDisplay.length : a._iDisplayStart + a._iDisplayLength > a.aiDisplay.length || a._iDisplayLength == -1 ? a.aiDisplay.length : a._iDisplayStart + a._iDisplayLength } function Ha(a, b) { if (!a || a === null || a === "") return 0; if (typeof b == "undefined") b = p.getElementsByTagName("body")[0]; var c = p.createElement("div"); c.style.width = a; b.appendChild(c); a = c.offsetWidth; b.removeChild(c); return a } function $(a) { var b = 0, c, d = 0, f = a.aoColumns.length, e, i = j("th", a.nTHead); for (e = 0; e < f; e++) if (a.aoColumns[e].bVisible) { d++; if (a.aoColumns[e].sWidth !== null) { c = Ha(a.aoColumns[e].sWidthOrig, a.nTable.parentNode); if (c !== null) a.aoColumns[e].sWidth = v(c); b++ } } if (f == i.length && b === 0 && d == f && a.oScroll.sX === "" && a.oScroll.sY === "") for (e = 0; e < a.aoColumns.length; e++) { c = j(i[e]).width(); if (c !== null) a.aoColumns[e].sWidth = v(c) } else { b = a.nTable.cloneNode(false); e = p.createElement("tbody"); c = p.createElement("tr"); b.removeAttribute("id"); b.appendChild(a.nTHead.cloneNode(true)); if (a.nTFoot !== null) { b.appendChild(a.nTFoot.cloneNode(true)); L(function (h) { h.style.width = "" }, b.getElementsByTagName("tr")) } b.appendChild(e); e.appendChild(c); e = j("thead th", b); if (e.length === 0) e = j("tbody tr:eq(0)>td", b); e.each(function (h) { this.style.width = ""; h = ga(a, h); if (h !== null && a.aoColumns[h].sWidthOrig !== "") this.style.width = a.aoColumns[h].sWidthOrig }); for (e = 0; e < f; e++) if (a.aoColumns[e].bVisible) { d = Ia(a, e); if (d !== null) { d = d.cloneNode(true); c.appendChild(d) } } e = a.nTable.parentNode; e.appendChild(b); if (a.oScroll.sX !== "" && a.oScroll.sXInner !== "") b.style.width = v(a.oScroll.sXInner); else if (a.oScroll.sX !== "") { b.style.width = ""; if (j(b).width() < e.offsetWidth) b.style.width = v(e.offsetWidth) } else if (a.oScroll.sY !== "") b.style.width = v(e.offsetWidth); b.style.visibility = "hidden"; Ja(a, b); f = j("tbody tr:eq(0)>td", b); if (f.length === 0) f = j("thead tr:eq(0)>th", b); for (e = c = 0; e < a.aoColumns.length; e++) if (a.aoColumns[e].bVisible) { d = j(f[c]).outerWidth(); if (d !== null && d > 0) a.aoColumns[e].sWidth = v(d); c++ } a.nTable.style.width = v(j(b).outerWidth()); b.parentNode.removeChild(b) } } function Ja(a, b) { if (a.oScroll.sX === "" && a.oScroll.sY !== "") { j(b).width(); b.style.width = v(j(b).outerWidth() - a.oScroll.iBarWidth) } else if (a.oScroll.sX !== "") b.style.width = v(j(b).outerWidth()) } function Ia(a, b, c) { if (typeof c == "undefined" || c) { c = Ka(a, b); b = M(a, b); if (c < 0) return null; return a.aoData[c].nTr.getElementsByTagName("td")[b] } var d = -1, f, e; c = -1; var i = p.createElement("div"); i.style.visibility = "hidden"; i.style.position = "absolute"; p.body.appendChild(i); f = 0; for (e = a.aoData.length; f < e; f++) { i.innerHTML = a.aoData[f]._aData[b]; if (i.offsetWidth > d) { d = i.offsetWidth; c = f } } p.body.removeChild(i); if (c >= 0) { b = M(a, b); if (a = a.aoData[c].nTr.getElementsByTagName("td")[b]) return a } return null } function Ka(a, b) { for (var c = -1, d = -1, f = 0; f < a.aoData.length; f++) { var e = a.aoData[f]._aData[b]; if (e.length > c) { c = e.length; d = f } } return d } function v(a) { if (a === null) return "0px"; if (typeof a == "number") { if (a < 0) return "0px"; return a + "px" } var b = a.charCodeAt(a.length - 1); if (b < 48 || b > 57) return a; return a + "px" } function Oa(a, b) { if (a.length != b.length) return 1; for (var c = 0; c < a.length; c++) if (a[c] != b[c]) return 2; return 0 } function aa(a) { for (var b = n.aTypes, c = b.length, d = 0; d < c; d++) { var f = b[d](a); if (f !== null) return f } return "string" } function A(a) { for (var b = 0; b < D.length; b++) if (D[b].nTable == a) return D[b]; return null } function V(a) { for (var b = [], c = a.aoData.length, d = 0; d < c; d++) b.push(a.aoData[d]._aData); return b } function R(a) { for (var b = [], c = a.aoData.length, d = 0; d < c; d++) b.push(a.aoData[d].nTr); return b } function Z(a) { var b = R(a), c = [], d, f = [], e, i, h, k; e = 0; for (i = b.length; e < i; e++) { c = []; h = 0; for (k = b[e].childNodes.length; h < k; h++) { d = b[e].childNodes[h]; d.nodeName.toUpperCase() == "TD" && c.push(d) } h = d = 0; for (k = a.aoColumns.length; h < k; h++) if (a.aoColumns[h].bVisible) f.push(c[h - d]); else { f.push(a.aoData[e]._anHidden[h]); d++ } } return f } function la(a) { return a.replace(new RegExp("(\\/|\\.|\\*|\\+|\\?|\\||\\(|\\)|\\[|\\]|\\{|\\}|\\\\|\\$|\\^)", "g"), "\\$1") } function ma(a, b) { for (var c = -1, d = 0, f = a.length; d < f; d++) if (a[d] == b) c = d; else a[d] > b && a[d]--; c != -1 && a.splice(c, 1) } function va(a, b) { b = b.split(","); for (var c = [], d = 0, f = a.aoColumns.length; d < f; d++) for (var e = 0; e < f; e++) if (a.aoColumns[d].sName == b[e]) { c.push(e); break } return c } function ca(a) { for (var b = "", c = 0, d = a.aoColumns.length; c < d; c++) b += a.aoColumns[c].sName + ","; if (b.length == d) return ""; return b.slice(0, -1) } function H(a, b, c) { a = a.sTableId === "" ? "DataTables warning: " + c : "DataTables warning (table id = '" + a.sTableId + "'): " + c; if (b === 0) if (n.sErrMode == "alert") alert(a); else throw a; else typeof console != "undefined" && typeof console.log != "undefined" && console.log(a) } function da(a) { a.aoData.splice(0, a.aoData.length); a.aiDisplayMaster.splice(0, a.aiDisplayMaster.length); a.aiDisplay.splice(0, a.aiDisplay.length); E(a) } function na(a) { if (!(!a.oFeatures.bStateSave || typeof a.bDestroying != "undefined")) { var b, c, d, f = "{"; f += '"iCreate":' + (new Date).getTime() + ","; f += '"iStart":' + a._iDisplayStart + ","; f += '"iEnd":' + a._iDisplayEnd + ","; f += '"iLength":' + a._iDisplayLength + ","; f += '"sFilter":"' + encodeURIComponent(a.oPreviousSearch.sSearch) + '",'; f += '"sFilterEsc":' + !a.oPreviousSearch.bRegex + ","; f += '"aaSorting":[ '; for (b = 0; b < a.aaSorting.length; b++) f += "[" + a.aaSorting[b][0] + ',"' + a.aaSorting[b][1] + '"],'; f = f.substring(0, f.length - 1); f += "],"; f += '"aaSearchCols":[ '; for (b = 0; b < a.aoPreSearchCols.length; b++) f += '["' + encodeURIComponent(a.aoPreSearchCols[b].sSearch) + '",' + !a.aoPreSearchCols[b].bRegex + "],"; f = f.substring(0, f.length - 1); f += "],"; f += '"abVisCols":[ '; for (b = 0; b < a.aoColumns.length; b++) f += a.aoColumns[b].bVisible + ","; f = f.substring(0, f.length - 1); f += "]"; b = 0; for (c = a.aoStateSave.length; b < c; b++) { d = a.aoStateSave[b].fn(a, f); if (d !== "") f = d } f += "}"; La(a.sCookiePrefix + a.sInstance, f, a.iCookieDuration, a.sCookiePrefix, a.fnCookieCallback) } } function Ma(a, b) { if (a.oFeatures.bStateSave) { var c, d, f; d = oa(a.sCookiePrefix + a.sInstance); if (d !== null && d !== "") { try { c = typeof j.parseJSON == "function" ? j.parseJSON(d.replace(/'/g, '"')) : eval("(" + d + ")") } catch (e) { return } d = 0; for (f = a.aoStateLoad.length; d < f; d++) if (!a.aoStateLoad[d].fn(a, c)) return; a.oLoadedState = j.extend(true, {}, c); a._iDisplayStart = c.iStart; a.iInitDisplayStart = c.iStart; a._iDisplayEnd = c.iEnd; a._iDisplayLength = c.iLength; a.oPreviousSearch.sSearch = decodeURIComponent(c.sFilter); a.aaSorting = c.aaSorting.slice(); a.saved_aaSorting = c.aaSorting.slice(); if (typeof c.sFilterEsc != "undefined") a.oPreviousSearch.bRegex = !c.sFilterEsc; if (typeof c.aaSearchCols != "undefined") for (d = 0; d < c.aaSearchCols.length; d++) a.aoPreSearchCols[d] = { sSearch: decodeURIComponent(c.aaSearchCols[d][0]), bRegex: !c.aaSearchCols[d][1] }; if (typeof c.abVisCols != "undefined") { b.saved_aoColumns = []; for (d = 0; d < c.abVisCols.length; d++) { b.saved_aoColumns[d] = {}; b.saved_aoColumns[d].bVisible = c.abVisCols[d] } } } } } function La(a, b, c, d, f) { var e = new Date; e.setTime(e.getTime() + c * 1E3); c = ra.location.pathname.split("/"); a = a + "_" + c.pop().replace(/[\/:]/g, "").toLowerCase(); var i; if (f !== null) { i = typeof j.parseJSON == "function" ? j.parseJSON(b) : eval("(" + b + ")"); b = f(a, i, e.toGMTString(), c.join("/") + "/") } else b = a + "=" + encodeURIComponent(b) + "; expires=" + e.toGMTString() + "; path=" + c.join("/") + "/"; f = ""; e = 9999999999999; if ((oa(a) !== null ? p.cookie.length : b.length + p.cookie.length) + 10 > 4096) { a = p.cookie.split(";"); for (var h = 0, k = a.length; h < k; h++) if (a[h].indexOf(d) != -1) { var l = a[h].split("="); try { i = eval("(" + decodeURIComponent(l[1]) + ")") } catch (q) { continue } if (typeof i.iCreate != "undefined" && i.iCreate < e) { f = l[0]; e = i.iCreate } } if (f !== "") p.cookie = f + "=; expires=Thu, 01-Jan-1970 00:00:01 GMT; path=" + c.join("/") + "/" } p.cookie = b } function oa(a) { var b = ra.location.pathname.split("/"); a = a + "_" + b[b.length - 1].replace(/[\/:]/g, "").toLowerCase() + "="; b = p.cookie.split(";"); for (var c = 0; c < b.length; c++) { for (var d = b[c]; d.charAt(0) == " "; ) d = d.substring(1, d.length); if (d.indexOf(a) === 0) return decodeURIComponent(d.substring(a.length, d.length)) } return null } function fa(a) { a = a.getElementsByTagName("tr"); if (a.length == 1) return a[0].getElementsByTagName("th"); var b = [], c = [], d, f, e, i, h, k, l = function (I, Y, N) { for (; typeof I[Y][N] != "undefined"; ) N++; return N }, q = function (I) { if (typeof b[I] == "undefined") b[I] = [] }; d = 0; for (i = a.length; d < i; d++) { q(d); var t = 0, G = []; f = 0; for (h = a[d].childNodes.length; f < h; f++) if (a[d].childNodes[f].nodeName.toUpperCase() == "TD" || a[d].childNodes[f].nodeName.toUpperCase() == "TH") G.push(a[d].childNodes[f]); f = 0; for (h = G.length; f < h; f++) { var J = G[f].getAttribute("colspan") * 1, B = G[f].getAttribute("rowspan") * 1; if (!J || J === 0 || J === 1) { k = l(b, d, t); b[d][k] = G[f].nodeName.toUpperCase() == "TD" ? 4 : G[f]; if (B || B === 0 || B === 1) for (e = 1; e < B; e++) { q(d + e); b[d + e][k] = 2 } t++ } else { k = l(b, d, t); for (e = 0; e < J; e++) b[d][k + e] = 3; t += J } } } d = 0; for (i = b.length; d < i; d++) { f = 0; for (h = b[d].length; f < h; f++) if (typeof b[d][f] == "object" && typeof c[f] == "undefined") c[f] = b[d][f] } return c } function Na() { var a = p.createElement("p"), b = a.style; b.width = "100%"; b.height = "200px"; var c = p.createElement("div"); b = c.style; b.position = "absolute"; b.top = "0px"; b.left = "0px"; b.visibility = "hidden"; b.width = "200px"; b.height = "150px"; b.overflow = "hidden"; c.appendChild(a); p.body.appendChild(c); b = a.offsetWidth; c.style.overflow = "scroll"; a = a.offsetWidth; if (b == a) a = c.clientWidth; p.body.removeChild(c); return b - a } function L(a, b, c) { for (var d = 0, f = b.length; d < f; d++) for (var e = 0, i = b[d].childNodes.length; e < i; e++) if (b[d].childNodes[e].nodeType == 1) typeof c != "undefined" ? a(b[d].childNodes[e], c[d].childNodes[e]) : a(b[d].childNodes[e]) } function o(a, b, c, d) { if (typeof d == "undefined") d = c; if (typeof b[c] != "undefined") a[d] = b[c] } this.oApi = {}; this.fnDraw = function (a) { var b = A(this[n.iApiIndex]); if (typeof a != "undefined" && a === false) { E(b); C(b) } else W(b) }; this.fnFilter = function (a, b, c, d, f) { var e = A(this[n.iApiIndex]); if (e.oFeatures.bFilter) { if (typeof c == "undefined") c = false; if (typeof d == "undefined") d = true; if (typeof f == "undefined") f = true; if (typeof b == "undefined" || b === null) { P(e, { sSearch: a, bRegex: c, bSmart: d }, 1); if (f && typeof e.aanFeatures.f != "undefined") { b = e.aanFeatures.f; c = 0; for (d = b.length; c < d; c++) j("input", b[c]).val(a) } } else { e.aoPreSearchCols[b].sSearch = a; e.aoPreSearchCols[b].bRegex = c; e.aoPreSearchCols[b].bSmart = d; P(e, e.oPreviousSearch, 1) } } }; this.fnSettings = function () { return A(this[n.iApiIndex]) }; this.fnVersionCheck = n.fnVersionCheck; this.fnSort = function (a) { var b = A(this[n.iApiIndex]); b.aaSorting = a; O(b) }; this.fnSortListener = function (a, b, c) { ba(A(this[n.iApiIndex]), a, b, c) }; this.fnAddData = function (a, b) { if (a.length === 0) return []; var c = [], d, f = A(this[n.iApiIndex]); if (typeof a[0] == "object") for (var e = 0; e < a.length; e++) { d = u(f, a[e]); if (d == -1) return c; c.push(d) } else { d = u(f, a); if (d == -1) return c; c.push(d) } f.aiDisplay = f.aiDisplayMaster.slice(); if (typeof b == "undefined" || b) W(f); return c }; this.fnDeleteRow = function (a, b, c) { var d = A(this[n.iApiIndex]); a = typeof a == "object" ? Q(d, a) : a; var f = d.aoData.splice(a, 1), e = j.inArray(a, d.aiDisplay); d.asDataSearch.splice(e, 1); ma(d.aiDisplayMaster, a); ma(d.aiDisplay, a); typeof b == "function" && b.call(this, d, f); if (d._iDisplayStart >= d.aiDisplay.length) { d._iDisplayStart -= d._iDisplayLength; if (d._iDisplayStart < 0) d._iDisplayStart = 0 } if (typeof c == "undefined" || c) { E(d); C(d) } return f }; this.fnClearTable = function (a) { var b = A(this[n.iApiIndex]); da(b); if (typeof a == "undefined" || a) C(b) }; this.fnOpen = function (a, b, c) { var d = A(this[n.iApiIndex]); this.fnClose(a); var f = p.createElement("tr"), e = p.createElement("td"); f.appendChild(e); e.className = c; e.colSpan = S(d); e.innerHTML = b; b = j("tr", d.nTBody); j.inArray(a, b) != -1 && j(f).insertAfter(a); d.aoOpenRows.push({ nTr: f, nParent: a }); return f }; this.fnClose = function (a) { for (var b = A(this[n.iApiIndex]), c = 0; c < b.aoOpenRows.length; c++) if (b.aoOpenRows[c].nParent == a) { (a = b.aoOpenRows[c].nTr.parentNode) && a.removeChild(b.aoOpenRows[c].nTr); b.aoOpenRows.splice(c, 1); return 0 } return 1 }; this.fnGetData = function (a) { var b = A(this[n.iApiIndex]); if (typeof a != "undefined") { a = typeof a == "object" ? Q(b, a) : a; return (aRowData = b.aoData[a]) ? aRowData._aData : null } return V(b) }; this.fnGetNodes = function (a) { var b = A(this[n.iApiIndex]); if (typeof a != "undefined") return (aRowData = b.aoData[a]) ? aRowData.nTr : null; return R(b) }; this.fnGetPosition = function (a) { var b = A(this[n.iApiIndex]); if (a.nodeName.toUpperCase() == "TR") return Q(b, a); else if (a.nodeName.toUpperCase() == "TD") for (var c = Q(b, a.parentNode), d = 0, f = 0; f < b.aoColumns.length; f++) if (b.aoColumns[f].bVisible) { if (b.aoData[c].nTr.getElementsByTagName("td")[f - d] == a) return [c, f - d, f] } else d++; return null }; this.fnUpdate = function (a, b, c, d, f) { var e = A(this[n.iApiIndex]), i, h; b = typeof b == "object" ? Q(e, b) : b; if (typeof a != "object") { h = a; e.aoData[b]._aData[c] = h; if (e.aoColumns[c].fnRender !== null) { h = e.aoColumns[c].fnRender({ iDataRow: b, iDataColumn: c, aData: e.aoData[b]._aData, oSettings: e }); if (e.aoColumns[c].bUseRendered) e.aoData[b]._aData[c] = h } i = M(e, c); if (i !== null) e.aoData[b].nTr.getElementsByTagName("td")[i].innerHTML = h; else e.aoData[b]._anHidden[c].innerHTML = h } else { if (a.length != e.aoColumns.length) { H(e, 0, "An array passed to fnUpdate must have the same number of columns as the table in question - in this case " + e.aoColumns.length); return 1 } for (c = 0; c < a.length; c++) { h = a[c]; e.aoData[b]._aData[c] = h; if (e.aoColumns[c].fnRender !== null) { h = e.aoColumns[c].fnRender({ iDataRow: b, iDataColumn: c, aData: e.aoData[b]._aData, oSettings: e }); if (e.aoColumns[c].bUseRendered) e.aoData[b]._aData[c] = h } i = M(e, c); if (i !== null) e.aoData[b].nTr.getElementsByTagName("td")[i].innerHTML = h; else e.aoData[b]._anHidden[c].innerHTML = h } } a = j.inArray(b, e.aiDisplay); e.asDataSearch[a] = ka(e, e.aoData[b]._aData); if (typeof f == "undefined" || f) X(e); if (typeof d == "undefined" || d) W(e); return 0 }; this.fnSetColumnVis = function (a, b, c) { var d = A(this[n.iApiIndex]), f, e; e = d.aoColumns.length; var i, h, k, l, q; if (d.aoColumns[a].bVisible != b) { l = j(">tr", d.nTHead)[0]; i = j(">tr", d.nTFoot)[0]; q = []; h = []; for (f = 0; f < e; f++) { q.push(d.aoColumns[f].nTh); h.push(d.aoColumns[f].nTf) } if (b) { for (f = b = 0; f < a; f++) d.aoColumns[f].bVisible && b++; if (b >= S(d)) { l.appendChild(q[a]); l = j(">tr", d.nTHead); f = 1; for (e = l.length; f < e; f++) l[f].appendChild(d.aoColumns[a].anThExtra[f - 1]); if (i) { i.appendChild(h[a]); l = j(">tr", d.nTFoot); f = 1; for (e = l.length; f < e; f++) l[f].appendChild(d.aoColumns[a].anTfExtra[f - 1]) } f = 0; for (e = d.aoData.length; f < e; f++) { i = d.aoData[f]._anHidden[a]; d.aoData[f].nTr.appendChild(i) } } else { for (f = a; f < e; f++) { k = M(d, f); if (k !== null) break } l.insertBefore(q[a], l.getElementsByTagName("th")[k]); l = j(">tr", d.nTHead); f = 1; for (e = l.length; f < e; f++) { q = j(l[f]).children(); l[f].insertBefore(d.aoColumns[a].anThExtra[f - 1], q[k]) } if (i) { i.insertBefore(h[a], i.getElementsByTagName("th")[k]); l = j(">tr", d.nTFoot); f = 1; for (e = l.length; f < e; f++) { q = j(l[f]).children(); l[f].insertBefore(d.aoColumns[a].anTfExtra[f - 1], q[k]) } } Z(d); f = 0; for (e = d.aoData.length; f < e; f++) { i = d.aoData[f]._anHidden[a]; d.aoData[f].nTr.insertBefore(i, j(">td:eq(" + k + ")", d.aoData[f].nTr)[0]) } } d.aoColumns[a].bVisible = true } else { l.removeChild(q[a]); f = 0; for (e = d.aoColumns[a].anThExtra.length; f < e; f++) { k = d.aoColumns[a].anThExtra[f]; k.parentNode.removeChild(k) } if (i) { i.removeChild(h[a]); f = 0; for (e = d.aoColumns[a].anTfExtra.length; f < e; f++) { k = d.aoColumns[a].anTfExtra[f]; k.parentNode.removeChild(k) } } h = Z(d); f = 0; for (e = d.aoData.length; f < e; f++) { i = h[f * d.aoColumns.length + a * 1]; d.aoData[f]._anHidden[a] = i; i.parentNode.removeChild(i) } d.aoColumns[a].bVisible = false } f = 0; for (e = d.aoOpenRows.length; f < e; f++) d.aoOpenRows[f].nTr.colSpan = S(d); if (typeof c == "undefined" || c) { X(d); C(d) } na(d) } }; this.fnPageChange = function (a, b) { var c = A(this[n.iApiIndex]); ea(c, a); E(c); if (typeof b == "undefined" || b) C(c) }; this.fnDestroy = function () { var a = A(this[n.iApiIndex]), b = a.nTableWrapper.parentNode, c = a.nTBody, d, f; a.bDestroying = true; j(a.nTableWrapper).find("*").andSelf().unbind(".DT"); d = 0; for (f = a.aoColumns.length; d < f; d++) a.aoColumns[d].bVisible === false && this.fnSetColumnVis(d, true); j("tbody>tr>td." + a.oClasses.sRowEmpty, a.nTable).parent().remove(); if (a.nTable != a.nTHead.parentNode) { j(">thead", a.nTable).remove(); a.nTable.appendChild(a.nTHead) } if (a.nTFoot && a.nTable != a.nTFoot.parentNode) { j(">tfoot", a.nTable).remove(); a.nTable.appendChild(a.nTFoot) } a.nTable.parentNode.removeChild(a.nTable); j(a.nTableWrapper).remove(); a.aaSorting = []; a.aaSortingFixed = []; T(a); j(R(a)).removeClass(a.asStripClasses.join(" ")); if (a.bJUI) { j("th", a.nTHead).removeClass([n.oStdClasses.sSortable, n.oJUIClasses.sSortableAsc, n.oJUIClasses.sSortableDesc, n.oJUIClasses.sSortableNone].join(" ")); j("th span", a.nTHead).remove() } else j("th", a.nTHead).removeClass([n.oStdClasses.sSortable, n.oStdClasses.sSortableAsc, n.oStdClasses.sSortableDesc, n.oStdClasses.sSortableNone].join(" ")); b.appendChild(a.nTable); d = 0; for (f = a.aoData.length; d < f; d++) c.appendChild(a.aoData[d].nTr); a.nTable.style.width = v(a.sDestroyWidth); j(">tr:even", c).addClass(a.asDestoryStrips[0]); j(">tr:odd", c).addClass(a.asDestoryStrips[1]); d = 0; for (f = D.length; d < f; d++) D[d] == a && D.splice(d, 1) }; this.fnAdjustColumnSizing = function (a) { var b = A(this[n.iApiIndex]); X(b); if (typeof a == "undefined" || a) this.fnDraw(false); else if (b.oScroll.sX !== "" || b.oScroll.sY !== "") this.oApi._fnScrollDraw(b) }; for (var pa in n.oApi) if (pa) this[pa] = r(pa); this.oApi._fnExternApiFunc = r; this.oApi._fnInitalise = s; this.oApi._fnLanguageProcess = y; this.oApi._fnAddColumn = F; this.oApi._fnColumnOptions = x; this.oApi._fnAddData = u; this.oApi._fnGatherData = z; this.oApi._fnDrawHead = U; this.oApi._fnDraw = C; this.oApi._fnReDraw = W; this.oApi._fnAjaxUpdate = ta; this.oApi._fnAjaxUpdateDraw = ua; this.oApi._fnAddOptionsHtml = sa; this.oApi._fnFeatureHtmlTable = za; this.oApi._fnScrollDraw = Ca; this.oApi._fnAjustColumnSizing = X; this.oApi._fnFeatureHtmlFilter = xa; this.oApi._fnFilterComplete = P; this.oApi._fnFilterCustom = Fa; this.oApi._fnFilterColumn = Ea; this.oApi._fnFilter = Da; this.oApi._fnBuildSearchArray = ha; this.oApi._fnBuildSearchRow = ka; this.oApi._fnFilterCreateSearch = ia; this.oApi._fnDataToSearch = ja; this.oApi._fnSort = O; this.oApi._fnSortAttachListener = ba; this.oApi._fnSortingClasses = T; this.oApi._fnFeatureHtmlPaginate = Ba; this.oApi._fnPageChange = ea; this.oApi._fnFeatureHtmlInfo = Aa; this.oApi._fnUpdateInfo = Ga; this.oApi._fnFeatureHtmlLength = wa; this.oApi._fnFeatureHtmlProcessing = ya; this.oApi._fnProcessingDisplay = K; this.oApi._fnVisibleToColumnIndex = ga; this.oApi._fnColumnIndexToVisible = M; this.oApi._fnNodeToDataIndex = Q; this.oApi._fnVisbleColumns = S; this.oApi._fnCalculateEnd = E; this.oApi._fnConvertToWidth = Ha; this.oApi._fnCalculateColumnWidths = $; this.oApi._fnScrollingWidthAdjust = Ja; this.oApi._fnGetWidestNode = Ia; this.oApi._fnGetMaxLenString = Ka; this.oApi._fnStringToCss = v; this.oApi._fnArrayCmp = Oa; this.oApi._fnDetectType = aa; this.oApi._fnSettingsFromNode = A; this.oApi._fnGetDataMaster = V; this.oApi._fnGetTrNodes = R; this.oApi._fnGetTdNodes = Z; this.oApi._fnEscapeRegex = la; this.oApi._fnDeleteIndex = ma; this.oApi._fnReOrderIndex = va; this.oApi._fnColumnOrdering = ca; this.oApi._fnLog = H; this.oApi._fnClearTable = da; this.oApi._fnSaveState = na; this.oApi._fnLoadState = Ma; this.oApi._fnCreateCookie = La; this.oApi._fnReadCookie = oa; this.oApi._fnGetUniqueThs = fa; this.oApi._fnScrollBarWidth = Na; this.oApi._fnApplyToChildren = L; this.oApi._fnMap = o; var qa = this; return this.each(function () { var a = 0, b, c, d, f; a = 0; for (b = D.length; a < b; a++) { if (D[a].nTable == this) if (typeof g == "undefined" || typeof g.bRetrieve != "undefined" && g.bRetrieve === true) return D[a].oInstance; else if (typeof g.bDestroy != "undefined" && g.bDestroy === true) { D[a].oInstance.fnDestroy(); break } else { H(D[a], 0, "Cannot reinitialise DataTable.\n\nTo retrieve the DataTables object for this table, please pass either no arguments to the dataTable() function, or set bRetrieve to true. Alternatively, to destory the old table and create a new one, set bDestroy to true (note that a lot of changes to the configuration can be made through the API which is usually much faster)."); return } if (D[a].sTableId !== "" && D[a].sTableId == this.getAttribute("id")) { D.splice(a, 1); break } } var e = new m; D.push(e); var i = false, h = false; a = this.getAttribute("id"); if (a !== null) { e.sTableId = a; e.sInstance = a } else e.sInstance = n._oExternConfig.iNextUnique++; if (this.nodeName.toLowerCase() != "table") H(e, 0, "Attempted to initialise DataTables on a node which is not a table: " + this.nodeName); else { e.nTable = this; e.oInstance = qa.length == 1 ? qa : j(this).dataTable(); e.oApi = qa.oApi; e.sDestroyWidth = j(this).width(); if (typeof g != "undefined" && g !== null) { e.oInit = g; o(e.oFeatures, g, "bPaginate"); o(e.oFeatures, g, "bLengthChange"); o(e.oFeatures, g, "bFilter"); o(e.oFeatures, g, "bSort"); o(e.oFeatures, g, "bInfo"); o(e.oFeatures, g, "bProcessing"); o(e.oFeatures, g, "bAutoWidth"); o(e.oFeatures, g, "bSortClasses"); o(e.oFeatures, g, "bServerSide"); o(e.oScroll, g, "sScrollX", "sX"); o(e.oScroll, g, "sScrollXInner", "sXInner"); o(e.oScroll, g, "sScrollY", "sY"); o(e.oScroll, g, "bScrollCollapse", "bCollapse"); o(e.oScroll, g, "bScrollInfinite", "bInfinite"); o(e.oScroll, g, "iScrollLoadGap", "iLoadGap"); o(e.oScroll, g, "bScrollAutoCss", "bAutoCss"); o(e, g, "asStripClasses"); o(e, g, "fnRowCallback"); o(e, g, "fnHeaderCallback"); o(e, g, "fnFooterCallback"); o(e, g, "fnCookieCallback"); o(e, g, "fnInitComplete"); o(e, g, "fnServerData"); o(e, g, "fnFormatNumber"); o(e, g, "aaSorting"); o(e, g, "aaSortingFixed"); o(e, g, "aLengthMenu"); o(e, g, "sPaginationType"); o(e, g, "sAjaxSource"); o(e, g, "iCookieDuration"); o(e, g, "sCookiePrefix"); o(e, g, "sDom"); o(e, g, "oSearch", "oPreviousSearch"); o(e, g, "aoSearchCols", "aoPreSearchCols"); o(e, g, "iDisplayLength", "_iDisplayLength"); o(e, g, "bJQueryUI", "bJUI"); o(e.oLanguage, g, "fnInfoCallback"); typeof g.fnDrawCallback == "function" && e.aoDrawCallback.push({ fn: g.fnDrawCallback, sName: "user" }); typeof g.fnStateSaveCallback == "function" && e.aoStateSave.push({ fn: g.fnStateSaveCallback, sName: "user" }); typeof g.fnStateLoadCallback == "function" && e.aoStateLoad.push({ fn: g.fnStateLoadCallback, sName: "user" }); e.oFeatures.bServerSide && e.oFeatures.bSort && e.oFeatures.bSortClasses && e.aoDrawCallback.push({ fn: T, sName: "server_side_sort_classes" }); if (typeof g.bJQueryUI != "undefined" && g.bJQueryUI) { e.oClasses = n.oJUIClasses; if (typeof g.sDom == "undefined") e.sDom = '<"H"lfr>t<"F"ip>' } if (e.oScroll.sX !== "" || e.oScroll.sY !== "") e.oScroll.iBarWidth = Na(); if (typeof g.iDisplayStart != "undefined" && typeof e.iInitDisplayStart == "undefined") { e.iInitDisplayStart = g.iDisplayStart; e._iDisplayStart = g.iDisplayStart } if (typeof g.bStateSave != "undefined") { e.oFeatures.bStateSave = g.bStateSave; Ma(e, g); e.aoDrawCallback.push({ fn: na, sName: "state_save" }) } if (typeof g.aaData != "undefined") h = true; if (typeof g != "undefined" && typeof g.aoData != "undefined") g.aoColumns = g.aoData; if (typeof g.oLanguage != "undefined") if (typeof g.oLanguage.sUrl != "undefined" && g.oLanguage.sUrl !== "") { e.oLanguage.sUrl = g.oLanguage.sUrl; j.getJSON(e.oLanguage.sUrl, null, function (q) { y(e, q, true) }); i = true } else y(e, g.oLanguage, false) } else g = {}; if (typeof g.asStripClasses == "undefined") { e.asStripClasses.push(e.oClasses.sStripOdd); e.asStripClasses.push(e.oClasses.sStripEven) } c = false; d = j(">tbody>tr", this); a = 0; for (b = e.asStripClasses.length; a < b; a++) if (d.filter(":lt(2)").hasClass(e.asStripClasses[a])) { c = true; break } if (c) { e.asDestoryStrips = ["", ""]; if (j(d[0]).hasClass(e.oClasses.sStripOdd)) e.asDestoryStrips[0] += e.oClasses.sStripOdd + " "; if (j(d[0]).hasClass(e.oClasses.sStripEven)) e.asDestoryStrips[0] += e.oClasses.sStripEven; if (j(d[1]).hasClass(e.oClasses.sStripOdd)) e.asDestoryStrips[1] += e.oClasses.sStripOdd + " "; if (j(d[1]).hasClass(e.oClasses.sStripEven)) e.asDestoryStrips[1] += e.oClasses.sStripEven; d.removeClass(e.asStripClasses.join(" ")) } a = this.getElementsByTagName("thead"); c = a.length === 0 ? [] : fa(a[0]); var k; if (typeof g.aoColumns == "undefined") { k = []; a = 0; for (b = c.length; a < b; a++) k.push(null) } else k = g.aoColumns; a = 0; for (b = k.length; a < b; a++) { if (typeof g.saved_aoColumns != "undefined" && g.saved_aoColumns.length == b) { if (k[a] === null) k[a] = {}; k[a].bVisible = g.saved_aoColumns[a].bVisible } F(e, c ? c[a] : null) } if (typeof g.aoColumnDefs != "undefined") for (a = g.aoColumnDefs.length - 1; a >= 0; a--) { var l = g.aoColumnDefs[a].aTargets; j.isArray(l) || H(e, 1, "aTargets must be an array of targets, not a " + typeof l); c = 0; for (d = l.length; c < d; c++) if (typeof l[c] == "number" && l[c] >= 0) { for (; e.aoColumns.length <= l[c]; ) F(e); x(e, l[c], g.aoColumnDefs[a]) } else if (typeof l[c] == "number" && l[c] < 0) x(e, e.aoColumns.length + l[c], g.aoColumnDefs[a]); else if (typeof l[c] == "string") { b = 0; for (f = e.aoColumns.length; b < f; b++) if (l[c] == "_all" || e.aoColumns[b].nTh.className.indexOf(l[c]) != -1) x(e, b, g.aoColumnDefs[a]) } } if (typeof k != "undefined") { a = 0; for (b = k.length; a < b; a++) x(e, a, k[a]) } a = 0; for (b = e.aaSorting.length; a < b; a++) { if (e.aaSorting[a][0] >= e.aoColumns.length) e.aaSorting[a][0] = 0; k = e.aoColumns[e.aaSorting[a][0]]; if (typeof e.aaSorting[a][2] == "undefined") e.aaSorting[a][2] = 0; if (typeof g.aaSorting == "undefined" && typeof e.saved_aaSorting == "undefined") e.aaSorting[a][1] = k.asSorting[0]; c = 0; for (d = k.asSorting.length; c < d; c++) if (e.aaSorting[a][1] == k.asSorting[c]) { e.aaSorting[a][2] = c; break } } T(e); this.getElementsByTagName("thead").length === 0 && this.appendChild(p.createElement("thead")); this.getElementsByTagName("tbody").length === 0 && this.appendChild(p.createElement("tbody")); e.nTHead = this.getElementsByTagName("thead")[0]; e.nTBody = this.getElementsByTagName("tbody")[0]; if (this.getElementsByTagName("tfoot").length > 0) e.nTFoot = this.getElementsByTagName("tfoot")[0]; if (h) for (a = 0; a < g.aaData.length; a++) u(e, g.aaData[a]); else z(e); e.aiDisplay = e.aiDisplayMaster.slice(); e.bInitialised = true; i === false && s(e) } }) } })(jQuery, window, document);

/*** jsTree ***/
(function ($) { $.vakata = {}; $.vakata.css = { get_css: function (rule_name, delete_flag, sheet) { rule_name = rule_name.toLowerCase(); var css_rules = sheet.cssRules || sheet.rules, j = 0; do { if (css_rules.length && j > css_rules.length + 5) { return false } if (css_rules[j].selectorText && css_rules[j].selectorText.toLowerCase() == rule_name) { if (delete_flag === true) { if (sheet.removeRule) { sheet.removeRule(j) } if (sheet.deleteRule) { sheet.deleteRule(j) } return true } else { return css_rules[j] } } } while (css_rules[++j]); return false }, add_css: function (rule_name, sheet) { if ($.jstree.css.get_css(rule_name, false, sheet)) { return false } if (sheet.insertRule) { sheet.insertRule(rule_name + ' { }', 0) } else { sheet.addRule(rule_name, null, 0) } return $.vakata.css.get_css(rule_name) }, remove_css: function (rule_name, sheet) { return $.vakata.css.get_css(rule_name, true, sheet) }, add_sheet: function (opts) { var tmp; if (opts.str) { tmp = document.createElement("style"); tmp.setAttribute('type', "text/css"); if (tmp.styleSheet) { document.getElementsByTagName("head")[0].appendChild(tmp); tmp.styleSheet.cssText = opts.str } else { tmp.appendChild(document.createTextNode(opts.str)); document.getElementsByTagName("head")[0].appendChild(tmp) } return tmp.sheet || tmp.styleSheet } if (opts.url) { if (document.createStyleSheet) { try { tmp = document.createStyleSheet(opts.url) } catch (e) { } } else { tmp = document.createElement('link'); tmp.rel = 'stylesheet'; tmp.type = 'text/css'; tmp.media = "all"; tmp.href = opts.url; document.getElementsByTagName("head")[0].appendChild(tmp); return tmp.styleSheet } } } } })(jQuery); (function ($) { var instances = [], focused_instance = -1, plugins = {}, prepared_move = {}, is_ie6 = false; $.fn.jstree = function (settings) { var isMethodCall = (typeof settings == 'string'), args = Array.prototype.slice.call(arguments, 1), returnValue = this; if (!isMethodCall && $.meta) { args.push($.metadata.get(this).jstree) } settings = !isMethodCall && args.length ? $.extend.apply(null, [true, settings].concat(args)) : settings; if (isMethodCall && settings.substring(0, 1) == '_') { return returnValue } if (isMethodCall) { this.each(function () { var instance = instances[$.data(this, "jstree-instance-id")], methodValue = (instance && $.isFunction(instance[settings])) ? instance[settings].apply(instance, args) : instance; if (typeof methodValue !== "undefined" && (settings.indexOf("is_" === 0) || (methodValue !== true && methodValue !== false))) { returnValue = methodValue; return false } }) } else { this.each(function () { var instance_id = $.data(this, "jstree-instance-id"), s = false; if (typeof instance_id !== "undefined" && instances[instance_id]) { instances[instance_id].destroy() } instance_id = parseInt(instances.push({}), 10) - 1; $.data(this, "jstree-instance-id", instance_id); if (!settings) { settings = {} } settings.plugins = $.isArray(settings.plugins) ? settings.plugins : $.jstree.defaults.plugins; if ($.inArray("core", settings.plugins) === -1) { settings.plugins.unshift("core") } s = $.extend(true, {}, $.jstree.defaults, settings); s.plugins = settings.plugins; $.each(plugins, function (i, val) { if ($.inArray(i, s.plugins) === -1) { s[i] = null; delete s[i] } }); instances[instance_id] = new $.jstree._instance(instance_id, $(this).addClass("jstree jstree-" + instance_id), s); $.each(instances[instance_id]._get_settings().plugins, function (i, val) { instances[instance_id].data[val] = {} }); $.each(instances[instance_id]._get_settings().plugins, function (i, val) { if (plugins[val]) { plugins[val].__init.apply(instances[instance_id]) } }); instances[instance_id].init() }) } return returnValue }; $.jstree = { defaults: { plugins: [] }, _focused: function () { return instances[focused_instance] || null }, _reference: function (needle) { if (instances[needle]) { return instances[needle] } var o = $(needle); if (!o.length && typeof needle === "string") { o = $("#" + needle) } if (!o.length) { return null } return instances[o.closest(".jstree").data("jstree-instance-id")] || null }, _instance: function (index, container, settings) { this.data = { core: {} }; this.get_settings = function () { return $.extend(true, {}, settings) }; this._get_settings = function () { return settings }; this.get_index = function () { return index }; this.get_container = function () { return container }; this._set_settings = function (s) { settings = $.extend(true, {}, settings, s) } }, _fn: {}, plugin: function (pname, pdata) { pdata = $.extend({}, { __init: $.noop, __destroy: $.noop, _fn: {}, defaults: false }, pdata); plugins[pname] = pdata; $.jstree.defaults[pname] = pdata.defaults; $.each(pdata._fn, function (i, val) { val.plugin = pname; val.old = $.jstree._fn[i]; $.jstree._fn[i] = function () { var rslt, func = val, args = Array.prototype.slice.call(arguments), evnt = new $.Event("before.jstree"), rlbk = false; do { if (func && func.plugin && $.inArray(func.plugin, this._get_settings().plugins) !== -1) { break } func = func.old } while (func); if (!func) { return } rslt = this.get_container().triggerHandler(evnt, { "func": i, "inst": this, "args": args }); if (rslt === false) { return } if (typeof rslt !== "undefined") { args = rslt } if (i.indexOf("_") === 0) { rslt = func.apply(this, args) } else { rslt = func.apply($.extend({}, this, { __callback: function (data) { this.get_container().triggerHandler(i + '.jstree', { "inst": this, "args": args, "rslt": data, "rlbk": rlbk }) }, __rollback: function () { rlbk = this.get_rollback(); return rlbk }, __call_old: function (replace_arguments) { return func.old.apply(this, (replace_arguments ? Array.prototype.slice.call(arguments, 1) : args)) } }), args) } return rslt }; $.jstree._fn[i].old = val.old; $.jstree._fn[i].plugin = pname }) }, rollback: function (rb) { if (rb) { if (!$.isArray(rb)) { rb = [rb] } $.each(rb, function (i, val) { instances[val.i].set_rollback(val.h, val.d) }) } } }; $.jstree._fn = $.jstree._instance.prototype = {}; $(function () { var u = navigator.userAgent.toLowerCase(), v = (u.match(/.+?(?:rv|it|ra|ie)[\/: ]([\d.]+)/) || [0, '0'])[1], css_string = '' + '.jstree ul, .jstree li { display:block; margin:0 0 0 0; padding:0 0 0 0; list-style-type:none; } ' + '.jstree li { display:block; min-height:18px; line-height:18px; white-space:nowrap; margin-left:18px; } ' + '.jstree-rtl li { margin-left:0; margin-right:18px; } ' + '.jstree > ul > li { margin-left:0px; } ' + '.jstree-rtl > ul > li { margin-right:0px; } ' + '.jstree ins { display:inline-block; text-decoration:none; width:18px; height:18px; margin:0 0 0 0; padding:0; } ' + '.jstree a { display:inline-block; line-height:16px; height:16px; color:black; white-space:nowrap; text-decoration:none; padding:1px 2px; margin:0; } ' + '.jstree a:focus { outline: none; } ' + '.jstree a > ins { height:16px; width:16px; } ' + '.jstree a > .jstree-icon { margin-right:3px; } ' + '.jstree-rtl a > .jstree-icon { margin-left:3px; margin-right:0; } ' + 'li.jstree-open > ul { display:block; } ' + 'li.jstree-closed > ul { display:none; } '; if (/msie/.test(u) && parseInt(v, 10) == 6) { is_ie6 = true; css_string += '' + '.jstree li { height:18px; margin-left:0; margin-right:0; } ' + '.jstree li li { margin-left:18px; } ' + '.jstree-rtl li li { margin-left:0px; margin-right:18px; } ' + 'li.jstree-open ul { display:block; } ' + 'li.jstree-closed ul { display:none !important; } ' + '.jstree li a { display:inline; border-width:0 !important; padding:0px 2px !important; } ' + '.jstree li a ins { height:16px; width:16px; margin-right:3px; } ' + '.jstree-rtl li a ins { margin-right:0px; margin-left:3px; } ' } if (/msie/.test(u) && parseInt(v, 10) == 7) { css_string += '.jstree li a { border-width:0 !important; padding:0px 2px !important; } ' } $.vakata.css.add_sheet({ str: css_string }) }); $.jstree.plugin("core", { __init: function () { this.data.core.to_open = $.map($.makeArray(this.get_settings().core.initially_open), function (n) { return "#" + n.toString().replace(/^#/, "").replace('\\/', '/').replace('/', '\\/') }) }, defaults: { html_titles: false, animation: 500, initially_open: [], rtl: false, strings: { loading: "Loading ...", new_node: "New node"} }, _fn: { init: function () { this.set_focus(); if (this._get_settings().core.rtl) { this.get_container().addClass("jstree-rtl").css("direction", "rtl") } this.get_container().html("<ul><li class='jstree-last jstree-leaf'><ins>&#160;</ins><a class='jstree-loading' href='#'><ins class='jstree-icon'>&#160;</ins>" + this._get_settings().core.strings.loading + "</a></li></ul>"); this.data.core.li_height = this.get_container().find("ul li.jstree-closed, ul li.jstree-leaf").eq(0).height() || 18; this.get_container().delegate("li > ins", "click.jstree", $.proxy(function (event) { var trgt = $(event.target); if (trgt.is("ins") && event.pageY - trgt.offset().top < this.data.core.li_height) { this.toggle_node(trgt) } }, this)).bind("mousedown.jstree", $.proxy(function () { this.set_focus() }, this)).bind("dblclick.jstree", function (event) { var sel; if (document.selection && document.selection.empty) { document.selection.empty() } else { if (window.getSelection) { sel = window.getSelection(); try { sel.removeAllRanges(); sel.collapse() } catch (err) { } } } }); this.__callback(); this.load_node(-1, function () { this.loaded(); this.reopen() }) }, destroy: function () { var i, n = this.get_index(), s = this._get_settings(), _this = this; $.each(s.plugins, function (i, val) { try { plugins[val].__destroy.apply(_this) } catch (err) { } }); this.__callback(); if (this.is_focused()) { for (i in instances) { if (instances.hasOwnProperty(i) && i != n) { instances[i].set_focus(); break } } } if (n === focused_instance) { focused_instance = -1 } this.get_container().unbind(".jstree").undelegate(".jstree").removeData("jstree-instance-id").find("[class^='jstree']").andSelf().attr("class", function () { return this.className.replace(/jstree[^ ]*|$/ig, '') }); instances[n] = null; delete instances[n] }, save_opened: function () { var _this = this; this.data.core.to_open = []; this.get_container().find(".jstree-open").each(function () { _this.data.core.to_open.push("#" + this.id.toString().replace(/^#/, "").replace('\\/', '/').replace('/', '\\/')) }); this.__callback(_this.data.core.to_open) }, reopen: function (is_callback) { var _this = this, done = true, current = [], remaining = []; if (!is_callback) { this.data.core.reopen = false; this.data.core.refreshing = true } if (this.data.core.to_open.length) { $.each(this.data.core.to_open, function (i, val) { if (val == "#") { return true } if ($(val).length && $(val).is(".jstree-closed")) { current.push(val) } else { remaining.push(val) } }); if (current.length) { this.data.core.to_open = remaining; $.each(current, function (i, val) { _this.open_node(val, function () { _this.reopen(true) }, true) }); done = false } } if (done) { if (this.data.core.reopen) { clearTimeout(this.data.core.reopen) } this.data.core.reopen = setTimeout(function () { _this.__callback({}, _this) }, 50); this.data.core.refreshing = false } }, refresh: function (obj) { var _this = this; this.save_opened(); if (!obj) { obj = -1 } obj = this._get_node(obj); if (!obj) { obj = -1 } if (obj !== -1) { obj.children("UL").remove() } this.load_node(obj, function () { _this.__callback({ "obj": obj }); _this.reopen() }) }, loaded: function () { this.__callback() }, set_focus: function () { var f = $.jstree._focused(); if (f && f !== this) { f.get_container().removeClass("jstree-focused") } if (f !== this) { this.get_container().addClass("jstree-focused"); focused_instance = this.get_index() } this.__callback() }, is_focused: function () { return focused_instance == this.get_index() }, _get_node: function (obj) { var $obj = $(obj, this.get_container()); if ($obj.is(".jstree") || obj == -1) { return -1 } $obj = $obj.closest("li", this.get_container()); return $obj.length ? $obj : false }, _get_next: function (obj, strict) { obj = this._get_node(obj); if (obj === -1) { return this.get_container().find("> ul > li:first-child") } if (!obj.length) { return false } if (strict) { return (obj.nextAll("li").size() > 0) ? obj.nextAll("li:eq(0)") : false } if (obj.hasClass("jstree-open")) { return obj.find("li:eq(0)") } else if (obj.nextAll("li").size() > 0) { return obj.nextAll("li:eq(0)") } else { return obj.parentsUntil(".jstree", "li").next("li").eq(0) } }, _get_prev: function (obj, strict) { obj = this._get_node(obj); if (obj === -1) { return this.get_container().find("> ul > li:last-child") } if (!obj.length) { return false } if (strict) { return (obj.prevAll("li").length > 0) ? obj.prevAll("li:eq(0)") : false } if (obj.prev("li").length) { obj = obj.prev("li").eq(0); while (obj.hasClass("jstree-open")) { obj = obj.children("ul:eq(0)").children("li:last") } return obj } else { var o = obj.parentsUntil(".jstree", "li:eq(0)"); return o.length ? o : false } }, _get_parent: function (obj) { obj = this._get_node(obj); if (obj == -1 || !obj.length) { return false } var o = obj.parentsUntil(".jstree", "li:eq(0)"); return o.length ? o : -1 }, _get_children: function (obj) { obj = this._get_node(obj); if (obj === -1) { return this.get_container().children("ul:eq(0)").children("li") } if (!obj.length) { return false } return obj.children("ul:eq(0)").children("li") }, get_path: function (obj, id_mode) { var p = [], _this = this; obj = this._get_node(obj); if (obj === -1 || !obj || !obj.length) { return false } obj.parentsUntil(".jstree", "li").each(function () { p.push(id_mode ? this.id : _this.get_text(this)) }); p.reverse(); p.push(id_mode ? obj.attr("id") : this.get_text(obj)); return p }, is_open: function (obj) { obj = this._get_node(obj); return obj && obj !== -1 && obj.hasClass("jstree-open") }, is_closed: function (obj) { obj = this._get_node(obj); return obj && obj !== -1 && obj.hasClass("jstree-closed") }, is_leaf: function (obj) { obj = this._get_node(obj); return obj && obj !== -1 && obj.hasClass("jstree-leaf") }, open_node: function (obj, callback, skip_animation) { obj = this._get_node(obj); if (!obj.length) { return false } if (!obj.hasClass("jstree-closed")) { if (callback) { callback.call() } return false } var s = skip_animation || is_ie6 ? 0 : this._get_settings().core.animation, t = this; if (!this._is_loaded(obj)) { obj.children("a").addClass("jstree-loading"); this.load_node(obj, function () { t.open_node(obj, callback, skip_animation) }, callback) } else { if (s) { obj.children("ul").css("display", "none") } obj.removeClass("jstree-closed").addClass("jstree-open").children("a").removeClass("jstree-loading"); if (s) { obj.children("ul").stop(true).slideDown(s, function () { this.style.display = "" }) } this.__callback({ "obj": obj }); if (callback) { callback.call() } } }, close_node: function (obj, skip_animation) { obj = this._get_node(obj); var s = skip_animation || is_ie6 ? 0 : this._get_settings().core.animation; if (!obj.length || !obj.hasClass("jstree-open")) { return false } if (s) { obj.children("ul").attr("style", "display:block !important") } obj.removeClass("jstree-open").addClass("jstree-closed"); if (s) { obj.children("ul").stop(true).slideUp(s, function () { this.style.display = "" }) } this.__callback({ "obj": obj }) }, toggle_node: function (obj) { obj = this._get_node(obj); if (obj.hasClass("jstree-closed")) { return this.open_node(obj) } if (obj.hasClass("jstree-open")) { return this.close_node(obj) } }, open_all: function (obj, original_obj) { obj = obj ? this._get_node(obj) : this.get_container(); if (!obj || obj === -1) { obj = this.get_container() } if (original_obj) { obj = obj.find("li.jstree-closed") } else { original_obj = obj; if (obj.is(".jstree-closed")) { obj = obj.find("li.jstree-closed").andSelf() } else { obj = obj.find("li.jstree-closed") } } var _this = this; obj.each(function () { var __this = this; if (!_this._is_loaded(this)) { _this.open_node(this, function () { _this.open_all(__this, original_obj) }, true) } else { _this.open_node(this, false, true) } }); if (original_obj.find('li.jstree-closed').length === 0) { this.__callback({ "obj": original_obj }) } }, close_all: function (obj) { var _this = this; obj = obj ? this._get_node(obj) : this.get_container(); if (!obj || obj === -1) { obj = this.get_container() } obj.find("li.jstree-open").andSelf().each(function () { _this.close_node(this) }); this.__callback({ "obj": obj }) }, clean_node: function (obj) { obj = obj && obj != -1 ? $(obj) : this.get_container(); obj = obj.is("li") ? obj.find("li").andSelf() : obj.find("li"); obj.removeClass("jstree-last").filter("li:last-child").addClass("jstree-last").end().filter(":has(li)").not(".jstree-open").removeClass("jstree-leaf").addClass("jstree-closed"); obj.not(".jstree-open, .jstree-closed").addClass("jstree-leaf").children("ul").remove(); this.__callback({ "obj": obj }) }, get_rollback: function () { this.__callback(); return { i: this.get_index(), h: this.get_container().children("ul").clone(true), d: this.data} }, set_rollback: function (html, data) { this.get_container().empty().append(html); this.data = data; this.__callback() }, load_node: function (obj, s_call, e_call) { this.__callback({ "obj": obj }) }, _is_loaded: function (obj) { return true }, create_node: function (obj, position, js, callback, is_loaded) { obj = this._get_node(obj); position = typeof position === "undefined" ? "last" : position; var d = $("<li>"), s = this._get_settings().core, tmp; if (obj !== -1 && !obj.length) { return false } if (!is_loaded && !this._is_loaded(obj)) { this.load_node(obj, function () { this.create_node(obj, position, js, callback, true) }); return false } this.__rollback(); if (typeof js === "string") { js = { "data": js} } if (!js) { js = {} } if (js.attr) { d.attr(js.attr) } if (js.state) { d.addClass("jstree-" + js.state) } if (!js.data) { js.data = s.strings.new_node } if (!$.isArray(js.data)) { tmp = js.data; js.data = []; js.data.push(tmp) } $.each(js.data, function (i, m) { tmp = $("<a>"); if ($.isFunction(m)) { m = m.call(this, js) } if (typeof m == "string") { tmp.attr('href', '#')[s.html_titles ? "html" : "text"](m) } else { if (!m.attr) { m.attr = {} } if (!m.attr.href) { m.attr.href = '#' } tmp.attr(m.attr)[s.html_titles ? "html" : "text"](m.title); if (m.language) { tmp.addClass(m.language) } } tmp.prepend("<ins class='jstree-icon'>&#160;</ins>"); if (m.icon) { if (m.icon.indexOf("/") === -1) { tmp.children("ins").addClass(m.icon) } else { tmp.children("ins").css("background", "url('" + m.icon + "') center center no-repeat") } } d.append(tmp) }); d.prepend("<ins class='jstree-icon'>&#160;</ins>"); if (obj === -1) { obj = this.get_container(); if (position === "before") { position = "first" } if (position === "after") { position = "last" } } switch (position) { case "before": obj.before(d); tmp = this._get_parent(obj); break; case "after": obj.after(d); tmp = this._get_parent(obj); break; case "inside": case "first": if (!obj.children("ul").length) { obj.append("<ul>") } obj.children("ul").prepend(d); tmp = obj; break; case "last": if (!obj.children("ul").length) { obj.append("<ul>") } obj.children("ul").append(d); tmp = obj; break; default: if (!obj.children("ul").length) { obj.append("<ul>") } if (!position) { position = 0 } tmp = obj.children("ul").children("li").eq(position); if (tmp.length) { tmp.before(d) } else { obj.children("ul").append(d) } tmp = obj; break } if (tmp === -1 || tmp.get(0) === this.get_container().get(0)) { tmp = -1 } this.clean_node(tmp); this.__callback({ "obj": d, "parent": tmp }); if (callback) { callback.call(this, d) } return d }, get_text: function (obj) { obj = this._get_node(obj); if (!obj.length) { return false } var s = this._get_settings().core.html_titles; obj = obj.children("a:eq(0)"); if (s) { obj = obj.clone(); obj.children("INS").remove(); return obj.html() } else { obj = obj.contents().filter(function () { return this.nodeType == 3 })[0]; return obj.nodeValue } }, set_text: function (obj, val) { obj = this._get_node(obj); if (!obj.length) { return false } obj = obj.children("a:eq(0)"); if (this._get_settings().core.html_titles) { var tmp = obj.children("INS").clone(); obj.html(val).prepend(tmp); this.__callback({ "obj": obj, "name": val }); return true } else { obj = obj.contents().filter(function () { return this.nodeType == 3 })[0]; this.__callback({ "obj": obj, "name": val }); return (obj.nodeValue = val) } }, rename_node: function (obj, val) { obj = this._get_node(obj); this.__rollback(); if (obj && obj.length && this.set_text.apply(this, Array.prototype.slice.call(arguments))) { this.__callback({ "obj": obj, "name": val }) } }, delete_node: function (obj) { obj = this._get_node(obj); if (!obj.length) { return false } this.__rollback(); var p = this._get_parent(obj), prev = this._get_prev(obj); obj = obj.remove(); if (p !== -1 && p.find("> ul > li").length === 0) { p.removeClass("jstree-open jstree-closed").addClass("jstree-leaf") } this.clean_node(p); this.__callback({ "obj": obj, "prev": prev }); return obj }, prepare_move: function (o, r, pos, cb, is_cb) { var p = {}; p.ot = $.jstree._reference(p.o) || this; p.o = p.ot._get_node(o); p.r = r === -1 ? -1 : this._get_node(r); p.p = (typeof p === "undefined") ? "last" : pos; if (!is_cb && prepared_move.o && prepared_move.o[0] === p.o[0] && prepared_move.r[0] === p.r[0] && prepared_move.p === p.p) { this.__callback(prepared_move); if (cb) { cb.call(this, prepared_move) } return } p.ot = $.jstree._reference(p.o) || this; p.rt = r === -1 ? p.ot : $.jstree._reference(p.r) || this; if (p.r === -1) { p.cr = -1; switch (p.p) { case "first": case "before": case "inside": p.cp = 0; break; case "after": case "last": p.cp = p.rt.get_container().find(" > ul > li").length; break; default: p.cp = p.p; break } } else { if (!/^(before|after)$/.test(p.p) && !this._is_loaded(p.r)) { return this.load_node(p.r, function () { this.prepare_move(o, r, pos, cb, true) }) } switch (p.p) { case "before": p.cp = p.r.index(); p.cr = p.rt._get_parent(p.r); break; case "after": p.cp = p.r.index() + 1; p.cr = p.rt._get_parent(p.r); break; case "inside": case "first": p.cp = 0; p.cr = p.r; break; case "last": p.cp = p.r.find(" > ul > li").length; p.cr = p.r; break; default: p.cp = p.p; p.cr = p.r; break } } p.np = p.cr == -1 ? p.rt.get_container() : p.cr; p.op = p.ot._get_parent(p.o); p.or = p.np.find(" > ul > li:nth-child(" + (p.cp + 1) + ")"); prepared_move = p; this.__callback(prepared_move); if (cb) { cb.call(this, prepared_move) } }, check_move: function () { var obj = prepared_move, ret = true; if (obj.or[0] === obj.o[0]) { return false } obj.o.each(function () { if (obj.r.parentsUntil(".jstree").andSelf().filter("li").index(this) !== -1) { ret = false; return false } }); return ret }, move_node: function (obj, ref, position, is_copy, is_prepared, skip_check) { if (!is_prepared) { return this.prepare_move(obj, ref, position, function (p) { this.move_node(p, false, false, is_copy, true, skip_check) }) } if (!skip_check && !this.check_move()) { return false } this.__rollback(); var o = false; if (is_copy) { o = obj.o.clone(); o.find("*[id]").andSelf().each(function () { if (this.id) { this.id = "copy_" + this.id } }) } else { o = obj.o } if (obj.or.length) { obj.or.before(o) } else { if (!obj.np.children("ul").length) { $("<ul>").appendTo(obj.np) } obj.np.children("ul:eq(0)").append(o) } try { obj.ot.clean_node(obj.op); obj.rt.clean_node(obj.np); if (!obj.op.find("> ul > li").length) { obj.op.removeClass("jstree-open jstree-closed").addClass("jstree-leaf").children("ul").remove() } } catch (e) { } if (is_copy) { prepared_move.cy = true; prepared_move.oc = o } this.__callback(prepared_move); return prepared_move }, _get_move: function () { return prepared_move } } }) })(jQuery); (function ($) { $.jstree.plugin("ui", { __init: function () { this.data.ui.selected = $(); this.data.ui.last_selected = false; this.data.ui.hovered = null; this.data.ui.to_select = this.get_settings().ui.initially_select; this.get_container().delegate("a", "click.jstree", $.proxy(function (event) { event.preventDefault(); this.select_node(event.currentTarget, true, event) }, this)).delegate("a", "mouseenter.jstree", $.proxy(function (event) { this.hover_node(event.target) }, this)).delegate("a", "mouseleave.jstree", $.proxy(function (event) { this.dehover_node(event.target) }, this)).bind("reopen.jstree", $.proxy(function () { this.reselect() }, this)).bind("get_rollback.jstree", $.proxy(function () { this.dehover_node(); this.save_selected() }, this)).bind("set_rollback.jstree", $.proxy(function () { this.reselect() }, this)).bind("close_node.jstree", $.proxy(function (event, data) { var s = this._get_settings().ui, obj = this._get_node(data.rslt.obj), clk = (obj && obj.length) ? obj.children("ul").find(".jstree-clicked") : $(), _this = this; if (s.selected_parent_close === false || !clk.length) { return } clk.each(function () { _this.deselect_node(this); if (s.selected_parent_close === "select_parent") { _this.select_node(obj) } }) }, this)).bind("delete_node.jstree", $.proxy(function (event, data) { var s = this._get_settings().ui.select_prev_on_delete, obj = this._get_node(data.rslt.obj), clk = (obj && obj.length) ? obj.find(".jstree-clicked") : [], _this = this; clk.each(function () { _this.deselect_node(this) }); if (s && clk.length) { this.select_node(data.rslt.prev) } }, this)).bind("move_node.jstree", $.proxy(function (event, data) { if (data.rslt.cy) { data.rslt.oc.find(".jstree-clicked").removeClass("jstree-clicked") } }, this)) }, defaults: { select_limit: -1, select_multiple_modifier: "ctrl", selected_parent_close: "select_parent", select_prev_on_delete: true, disable_selecting_children: false, initially_select: [] }, _fn: { _get_node: function (obj, allow_multiple) { if (typeof obj === "undefined" || obj === null) { return allow_multiple ? this.data.ui.selected : this.data.ui.last_selected } var $obj = $(obj, this.get_container()); if ($obj.is(".jstree") || obj == -1) { return -1 } $obj = $obj.closest("li", this.get_container()); return $obj.length ? $obj : false }, save_selected: function () { var _this = this; this.data.ui.to_select = []; this.data.ui.selected.each(function () { _this.data.ui.to_select.push("#" + this.id.toString().replace(/^#/, "").replace('\\/', '/').replace('/', '\\/')) }); this.__callback(this.data.ui.to_select) }, reselect: function () { var _this = this, s = this.data.ui.to_select; s = $.map($.makeArray(s), function (n) { return "#" + n.toString().replace(/^#/, "").replace('\\/', '/').replace('/', '\\/') }); this.deselect_all(); $.each(s, function (i, val) { if (val && val !== "#") { _this.select_node(val) } }); this.__callback() }, refresh: function (obj) { this.save_selected(); return this.__call_old() }, hover_node: function (obj) { obj = this._get_node(obj); if (!obj.length) { return false } if (!obj.hasClass("jstree-hovered")) { this.dehover_node() } this.data.ui.hovered = obj.children("a").addClass("jstree-hovered").parent(); this.__callback({ "obj": obj }) }, dehover_node: function () { var obj = this.data.ui.hovered, p; if (!obj || !obj.length) { return false } p = obj.children("a").removeClass("jstree-hovered").parent(); if (this.data.ui.hovered[0] === p[0]) { this.data.ui.hovered = null } this.__callback({ "obj": obj }) }, select_node: function (obj, check, e) { obj = this._get_node(obj); if (obj == -1 || !obj || !obj.length) { return false } var s = this._get_settings().ui, is_multiple = (s.select_multiple_modifier == "on" || (s.select_multiple_modifier !== false && e && e[s.select_multiple_modifier + "Key"])), is_selected = this.is_selected(obj), proceed = true; if (check) { if (s.disable_selecting_children && is_multiple && obj.parents("li", this.get_container()).children(".jstree-clicked").length) { return false } proceed = false; switch (!0) { case (is_selected && !is_multiple): this.deselect_all(); is_selected = false; proceed = true; break; case (!is_selected && !is_multiple): if (s.select_limit == -1 || s.select_limit > 0) { this.deselect_all(); proceed = true } break; case (is_selected && is_multiple): this.deselect_node(obj); break; case (!is_selected && is_multiple): if (s.select_limit == -1 || this.data.ui.selected.length + 1 <= s.select_limit) { proceed = true } break } } if (proceed && !is_selected) { obj.children("a").addClass("jstree-clicked"); this.data.ui.selected = this.data.ui.selected.add(obj); this.data.ui.last_selected = obj; this.__callback({ "obj": obj }) } }, deselect_node: function (obj) { obj = this._get_node(obj); if (!obj.length) { return false } if (this.is_selected(obj)) { obj.children("a").removeClass("jstree-clicked"); this.data.ui.selected = this.data.ui.selected.not(obj); if (this.data.ui.last_selected.get(0) === obj.get(0)) { this.data.ui.last_selected = this.data.ui.selected.eq(0) } this.__callback({ "obj": obj }) } }, toggle_select: function (obj) { obj = this._get_node(obj); if (!obj.length) { return false } if (this.is_selected(obj)) { this.deselect_node(obj) } else { this.select_node(obj) } }, is_selected: function (obj) { return this.data.ui.selected.index(this._get_node(obj)) >= 0 }, get_selected: function (context) { return context ? $(context).find(".jstree-clicked").parent() : this.data.ui.selected }, deselect_all: function (context) { if (context) { $(context).find(".jstree-clicked").removeClass("jstree-clicked") } else { this.get_container().find(".jstree-clicked").removeClass("jstree-clicked") } this.data.ui.selected = $([]); this.data.ui.last_selected = false; this.__callback() } } }); $.jstree.defaults.plugins.push("ui") })(jQuery); (function ($) { $.jstree.plugin("crrm", { __init: function () { this.get_container().bind("move_node.jstree", $.proxy(function (e, data) { if (this._get_settings().crrm.move.open_onmove) { var t = this; data.rslt.np.parentsUntil(".jstree").andSelf().filter(".jstree-closed").each(function () { t.open_node(this, false, true) }) } }, this)) }, defaults: { input_width_limit: 200, move: { always_copy: false, open_onmove: true, default_position: "last", check_move: function (m) { return true } } }, _fn: { _show_input: function (obj, callback) { obj = this._get_node(obj); var rtl = this._get_settings().core.rtl, w = this._get_settings().crrm.input_width_limit, w1 = obj.children("ins").width(), w2 = obj.find("> a:visible > ins").width() * obj.find("> a:visible > ins").length, t = this.get_text(obj), h1 = $("<div>", { css: { "position": "absolute", "top": "-200px", "left": (rtl ? "0px" : "-1000px"), "visibility": "hidden"} }).appendTo("body"), h2 = obj.css("position", "relative").append($("<input>", { "value": t, "css": { "padding": "0", "border": "1px solid silver", "position": "absolute", "left": (rtl ? "auto" : (w1 + w2 + 4) + "px"), "right": (rtl ? (w1 + w2 + 4) + "px" : "auto"), "top": "0px", "height": (this.data.core.li_height - 2) + "px", "lineHeight": (this.data.core.li_height - 2) + "px", "width": "150px" }, "blur": $.proxy(function () { var i = obj.children("input"), v = i.val(); if (v === "") { v = t } i.remove(); this.set_text(obj, t); this.rename_node(obj, v); callback.call(this, obj, v, t); obj.css("position", "") }, this), "keyup": function (event) { var key = event.keyCode || event.which; if (key == 27) { this.value = t; this.blur(); return } else if (key == 13) { this.blur(); return } else { h2.width(Math.min(h1.text("pW" + this.value).width(), w)) } } })).children("input"); this.set_text(obj, ""); h1.css({ fontFamily: h2.css('fontFamily') || '', fontSize: h2.css('fontSize') || '', fontWeight: h2.css('fontWeight') || '', fontStyle: h2.css('fontStyle') || '', fontStretch: h2.css('fontStretch') || '', fontVariant: h2.css('fontVariant') || '', letterSpacing: h2.css('letterSpacing') || '', wordSpacing: h2.css('wordSpacing') || '' }); h2.width(Math.min(h1.text("pW" + h2[0].value).width(), w))[0].select() }, rename: function (obj) { obj = this._get_node(obj); this.__rollback(); var f = this.__callback; this._show_input(obj, function (obj, new_name, old_name) { f.call(this, { "obj": obj, "new_name": new_name, "old_name": old_name }) }) }, create: function (obj, position, js, callback, skip_rename) { var t, _this = this; obj = this._get_node(obj); if (!obj) { obj = -1 } this.__rollback(); t = this.create_node(obj, position, js, function (t) { var p = this._get_parent(t), pos = $(t).index(); if (callback) { callback.call(this, t) } if (p.length && p.hasClass("jstree-closed")) { this.open_node(p, false, true) } if (!skip_rename) { this._show_input(t, function (obj, new_name, old_name) { _this.__callback({ "obj": obj, "name": new_name, "parent": p, "position": pos }) }) } else { _this.__callback({ "obj": t, "name": this.get_text(t), "parent": p, "position": pos }) } }); return t }, remove: function (obj) { obj = this._get_node(obj, true); this.__rollback(); this.delete_node(obj); this.__callback({ "obj": obj }) }, check_move: function () { if (!this.__call_old()) { return false } var s = this._get_settings().crrm.move; if (!s.check_move.call(this, this._get_move())) { return false } return true }, move_node: function (obj, ref, position, is_copy, is_prepared, skip_check) { var s = this._get_settings().crrm.move; if (!is_prepared) { if (!position) { position = s.default_position } if (position === "inside" && !s.default_position.match(/^(before|after)$/)) { position = s.default_position } return this.__call_old(true, obj, ref, position, is_copy, false, skip_check) } if (s.always_copy === true || (s.always_copy === "multitree" && obj.rt.get_index() !== obj.ot.get_index())) { is_copy = true } this.__call_old(true, obj, ref, position, is_copy, true, skip_check) }, cut: function (obj) { obj = this._get_node(obj); this.data.crrm.cp_nodes = false; this.data.crrm.ct_nodes = false; if (!obj || !obj.length) { return false } this.data.crrm.ct_nodes = obj }, copy: function (obj) { obj = this._get_node(obj); this.data.crrm.cp_nodes = false; this.data.crrm.ct_nodes = false; if (!obj || !obj.length) { return false } this.data.crrm.cp_nodes = obj }, paste: function (obj) { obj = this._get_node(obj); if (!obj || !obj.length) { return false } if (!this.data.crrm.ct_nodes && !this.data.crrm.cp_nodes) { return false } if (this.data.crrm.ct_nodes) { this.move_node(this.data.crrm.ct_nodes, obj) } if (this.data.crrm.cp_nodes) { this.move_node(this.data.crrm.cp_nodes, obj, false, true) } this.data.crrm.cp_nodes = false; this.data.crrm.ct_nodes = false } } }); $.jstree.defaults.plugins.push("crrm") })(jQuery); (function ($) { var themes_loaded = []; $.jstree._themes = false; $.jstree.plugin("themes", { __init: function () { this.get_container().bind("init.jstree", $.proxy(function () { var s = this._get_settings().themes; this.data.themes.dots = s.dots; this.data.themes.icons = s.icons; this.set_theme(s.theme, s.url) }, this)).bind("loaded.jstree", $.proxy(function () { if (!this.data.themes.dots) { this.hide_dots() } else { this.show_dots() } if (!this.data.themes.icons) { this.hide_icons() } else { this.show_icons() } }, this)) }, defaults: { theme: "default", url: false, dots: true, icons: true }, _fn: { set_theme: function (theme_name, theme_url) { if (!theme_name) { return false } if (!theme_url) { theme_url = $.jstree._themes + theme_name + '/style.css' } if ($.inArray(theme_url, themes_loaded) == -1) { $.vakata.css.add_sheet({ "url": theme_url, "rel": "jstree" }); themes_loaded.push(theme_url) } if (this.data.themes.theme != theme_name) { this.get_container().removeClass('jstree-' + this.data.themes.theme); this.data.themes.theme = theme_name } this.get_container().addClass('jstree-' + theme_name); if (!this.data.themes.dots) { this.hide_dots() } else { this.show_dots() } if (!this.data.themes.icons) { this.hide_icons() } else { this.show_icons() } this.__callback() }, get_theme: function () { return this.data.themes.theme }, show_dots: function () { this.data.themes.dots = true; this.get_container().children("ul").removeClass("jstree-no-dots") }, hide_dots: function () { this.data.themes.dots = false; this.get_container().children("ul").addClass("jstree-no-dots") }, toggle_dots: function () { if (this.data.themes.dots) { this.hide_dots() } else { this.show_dots() } }, show_icons: function () { this.data.themes.icons = true; this.get_container().children("ul").removeClass("jstree-no-icons") }, hide_icons: function () { this.data.themes.icons = false; this.get_container().children("ul").addClass("jstree-no-icons") }, toggle_icons: function () { if (this.data.themes.icons) { this.hide_icons() } else { this.show_icons() } } } }); $(function () { if ($.jstree._themes === false) { $("script").each(function () { if (this.src.toString().match(/jquery\.jstree[^\/]*?\.js(\?.*)?$/)) { $.jstree._themes = this.src.toString().replace(/jquery\.jstree[^\/]*?\.js(\?.*)?$/, "") + 'themes/'; return false } }) } if ($.jstree._themes === false) { $.jstree._themes = "themes/" } }); $.jstree.defaults.plugins.push("themes") })(jQuery); (function ($) { var bound = []; function exec(i, event) { var f = $.jstree._focused(), tmp; if (f && f.data && f.data.hotkeys && f.data.hotkeys.enabled) { tmp = f._get_settings().hotkeys[i]; if (tmp) { return tmp.call(f, event) } } } $.jstree.plugin("hotkeys", { __init: function () { if (typeof $.hotkeys === "undefined") { throw "jsTree hotkeys: jQuery hotkeys plugin not included."; } if (!this.data.ui) { throw "jsTree hotkeys: jsTree UI plugin not included."; } $.each(this._get_settings().hotkeys, function (i, val) { if ($.inArray(i, bound) == -1) { $(document).bind("keydown", i, function (event) { return exec(i, event) }); bound.push(i) } }); this.enable_hotkeys() }, defaults: { "up": function () { var o = this.data.ui.hovered || this.data.ui.last_selected || -1; this.hover_node(this._get_prev(o)); return false }, "down": function () { var o = this.data.ui.hovered || this.data.ui.last_selected || -1; this.hover_node(this._get_next(o)); return false }, "left": function () { var o = this.data.ui.hovered || this.data.ui.last_selected; if (o) { if (o.hasClass("jstree-open")) { this.close_node(o) } else { this.hover_node(this._get_prev(o)) } } return false }, "right": function () { var o = this.data.ui.hovered || this.data.ui.last_selected; if (o && o.length) { if (o.hasClass("jstree-closed")) { this.open_node(o) } else { this.hover_node(this._get_next(o)) } } return false }, "space": function () { if (this.data.ui.hovered) { this.data.ui.hovered.children("a:eq(0)").click() } return false }, "ctrl+space": function (event) { event.type = "click"; if (this.data.ui.hovered) { this.data.ui.hovered.children("a:eq(0)").trigger(event) } return false }, "f2": function () { this.rename(this.data.ui.hovered || this.data.ui.last_selected) }, "del": function () { this.remove(this.data.ui.hovered || this._get_node(null)) } }, _fn: { enable_hotkeys: function () { this.data.hotkeys.enabled = true }, disable_hotkeys: function () { this.data.hotkeys.enabled = false } } }) })(jQuery); (function ($) { $.jstree.plugin("json_data", { defaults: { data: false, ajax: false, correct_state: true, progressive_render: false }, _fn: { load_node: function (obj, s_call, e_call) { var _this = this; this.load_node_json(obj, function () { _this.__callback({ "obj": obj }); s_call.call(this) }, e_call) }, _is_loaded: function (obj) { var s = this._get_settings().json_data, d; obj = this._get_node(obj); if (obj && obj !== -1 && s.progressive_render && !obj.is(".jstree-open, .jstree-leaf") && obj.children("ul").children("li").length === 0 && obj.data("jstree-children")) { d = this._parse_json(obj.data("jstree-children")); if (d) { obj.append(d); $.removeData(obj, "jstree-children") } this.clean_node(obj); return true } return obj == -1 || !obj || !s.ajax || obj.is(".jstree-open, .jstree-leaf") || obj.children("ul").children("li").size() > 0 }, load_node_json: function (obj, s_call, e_call) { var s = this.get_settings().json_data, d, error_func = function () { }, success_func = function () { }; obj = this._get_node(obj); if (obj && obj !== -1) { if (obj.data("jstree-is-loading")) { return } else { obj.data("jstree-is-loading", true) } } switch (!0) { case (!s.data && !s.ajax): throw "Neither data nor ajax settings supplied."; case (!!s.data && !s.ajax) || (!!s.data && !!s.ajax && (!obj || obj === -1)): if (!obj || obj == -1) { d = this._parse_json(s.data); if (d) { this.get_container().children("ul").empty().append(d.children()); this.clean_node() } else { if (s.correct_state) { this.get_container().children("ul").empty() } } } if (s_call) { s_call.call(this) } break; case (!s.data && !!s.ajax) || (!!s.data && !!s.ajax && obj && obj !== -1): error_func = function (x, t, e) { var ef = this.get_settings().json_data.ajax.error; if (ef) { ef.call(this, x, t, e) } if (obj != -1 && obj.length) { obj.children(".jstree-loading").removeClass("jstree-loading"); obj.data("jstree-is-loading", false); if (t === "success" && s.correct_state) { obj.removeClass("jstree-open jstree-closed").addClass("jstree-leaf") } } else { if (t === "success" && s.correct_state) { this.get_container().children("ul").empty() } } if (e_call) { e_call.call(this) } }; success_func = function (d, t, x) { var sf = this.get_settings().json_data.ajax.success; if (sf) { d = sf.call(this, d, t, x) || d } if (d === "" || (!$.isArray(d) && !$.isPlainObject(d))) { return error_func.call(this, x, t, "") } d = this._parse_json(d); if (d) { if (obj === -1 || !obj) { this.get_container().children("ul").empty().append(d.children()) } else { obj.append(d).children(".jstree-loading").removeClass("jstree-loading"); obj.data("jstree-is-loading", false) } this.clean_node(obj); if (s_call) { s_call.call(this) } } else { if (obj === -1 || !obj) { if (s.correct_state) { this.get_container().children("ul").empty(); if (s_call) { s_call.call(this) } } } else { obj.children(".jstree-loading").removeClass("jstree-loading"); obj.data("jstree-is-loading", false); if (s.correct_state) { obj.removeClass("jstree-open jstree-closed").addClass("jstree-leaf"); if (s_call) { s_call.call(this) } } } } }; s.ajax.context = this; s.ajax.error = error_func; s.ajax.success = success_func; if (!s.ajax.dataType) { s.ajax.dataType = "json" } if ($.isFunction(s.ajax.url)) { s.ajax.url = s.ajax.url.call(this, obj) } if ($.isFunction(s.ajax.data)) { s.ajax.data = s.ajax.data.call(this, obj) } $.ajax(s.ajax); break } }, _parse_json: function (js, is_callback) { var d = false, p = this._get_settings(), s = p.json_data, t = p.core.html_titles, tmp, i, j, ul1, ul2; if (!js) { return d } if ($.isFunction(js)) { js = js.call(this) } if ($.isArray(js)) { d = $(); if (!js.length) { return false } for (i = 0, j = js.length; i < j; i++) { tmp = this._parse_json(js[i], true); if (tmp.length) { d = d.add(tmp) } } } else { if (typeof js == "string") { js = { data: js} } if (!js.data && js.data !== "") { return d } d = $("<li>"); if (js.attr) { d.attr(js.attr) } if (js.metadata) { d.data("jstree", js.metadata) } if (js.state) { d.addClass("jstree-" + js.state) } if (!$.isArray(js.data)) { tmp = js.data; js.data = []; js.data.push(tmp) } $.each(js.data, function (i, m) { tmp = $("<a>"); if ($.isFunction(m)) { m = m.call(this, js) } if (typeof m == "string") { tmp.attr('href', '#')[t ? "html" : "text"](m) } else { if (!m.attr) { m.attr = {} } if (!m.attr.href) { m.attr.href = '#' } tmp.attr(m.attr)[t ? "html" : "text"](m.title); if (m.language) { tmp.addClass(m.language) } } tmp.prepend("<ins class='jstree-icon'>&#160;</ins>"); if (!m.icon && js.icon) { m.icon = js.icon } if (m.icon) { if (m.icon.indexOf("/") === -1) { tmp.children("ins").addClass(m.icon) } else { tmp.children("ins").css("background", "url('" + m.icon + "') center center no-repeat") } } d.append(tmp) }); d.prepend("<ins class='jstree-icon'>&#160;</ins>"); if (js.children) { if (s.progressive_render && js.state !== "open") { d.addClass("jstree-closed").data("jstree-children", js.children) } else { if ($.isFunction(js.children)) { js.children = js.children.call(this, js) } if ($.isArray(js.children) && js.children.length) { tmp = this._parse_json(js.children, true); if (tmp.length) { ul2 = $("<ul>"); ul2.append(tmp); d.append(ul2) } } } } } if (!is_callback) { ul1 = $("<ul>"); ul1.append(d); d = ul1 } return d }, get_json: function (obj, li_attr, a_attr, is_callback) { var result = [], s = this._get_settings(), _this = this, tmp1, tmp2, li, a, t, lang; obj = this._get_node(obj); if (!obj || obj === -1) { obj = this.get_container().find("> ul > li") } li_attr = $.isArray(li_attr) ? li_attr : ["id", "class"]; if (!is_callback && this.data.types) { li_attr.push(s.types.type_attr) } a_attr = $.isArray(a_attr) ? a_attr : []; obj.each(function () { li = $(this); tmp1 = { data: [] }; if (li_attr.length) { tmp1.attr = {} } $.each(li_attr, function (i, v) { tmp2 = li.attr(v); if (tmp2 && tmp2.length && tmp2.replace(/jstree[^ ]*|$/ig, '').length) { tmp1.attr[v] = tmp2.replace(/jstree[^ ]*|$/ig, '') } }); if (li.hasClass("jstree-open")) { tmp1.state = "open" } if (li.hasClass("jstree-closed")) { tmp1.state = "closed" } a = li.children("a"); a.each(function () { t = $(this); if (a_attr.length || $.inArray("languages", s.plugins) !== -1 || t.children("ins").get(0).style.backgroundImage.length || (t.children("ins").get(0).className && t.children("ins").get(0).className.replace(/jstree[^ ]*|$/ig, '').length)) { lang = false; if ($.inArray("languages", s.plugins) !== -1 && $.isArray(s.languages) && s.languages.length) { $.each(s.languages, function (l, lv) { if (t.hasClass(lv)) { lang = lv; return false } }) } tmp2 = { attr: {}, title: _this.get_text(t, lang) }; $.each(a_attr, function (k, z) { tmp1.attr[z] = (t.attr(z) || "").replace(/jstree[^ ]*|$/ig, '') }); $.each(s.languages, function (k, z) { if (t.hasClass(z)) { tmp2.language = z; return true } }); if (t.children("ins").get(0).className.replace(/jstree[^ ]*|$/ig, '').replace(/^\s+$/ig, "").length) { tmp2.icon = t.children("ins").get(0).className.replace(/jstree[^ ]*|$/ig, '').replace(/^\s+$/ig, "") } if (t.children("ins").get(0).style.backgroundImage.length) { tmp2.icon = t.children("ins").get(0).style.backgroundImage.replace("url(", "").replace(")", "") } } else { tmp2 = _this.get_text(t) } if (a.length > 1) { tmp1.data.push(tmp2) } else { tmp1.data = tmp2 } }); li = li.find("> ul > li"); if (li.length) { tmp1.children = _this.get_json(li, li_attr, a_attr, true) } result.push(tmp1) }); return result } } }) })(jQuery); (function ($) { $.jstree.plugin("languages", { __init: function () { this._load_css() }, defaults: [], _fn: { set_lang: function (i) { var langs = this._get_settings().languages, st = false, selector = ".jstree-" + this.get_index() + ' a'; if (!$.isArray(langs) || langs.length === 0) { return false } if ($.inArray(i, langs) == -1) { if (!!langs[i]) { i = langs[i] } else { return false } } if (i == this.data.languages.current_language) { return true } st = $.vakata.css.get_css(selector + "." + this.data.languages.current_language, false, this.data.languages.language_css); if (st !== false) { st.style.display = "none" } st = $.vakata.css.get_css(selector + "." + i, false, this.data.languages.language_css); if (st !== false) { st.style.display = "" } this.data.languages.current_language = i; this.__callback(i); return true }, get_lang: function () { return this.data.languages.current_language }, get_text: function (obj, lang) { obj = this._get_node(obj) || this.data.ui.last_selected; if (!obj.size()) { return false } var langs = this._get_settings().languages, s = this._get_settings().core.html_titles; if ($.isArray(langs) && langs.length) { lang = (lang && $.inArray(lang, langs) != -1) ? lang : this.data.languages.current_language; obj = obj.children("a." + lang) } else { obj = obj.children("a:eq(0)") } if (s) { obj = obj.clone(); obj.children("INS").remove(); return obj.html() } else { obj = obj.contents().filter(function () { return this.nodeType == 3 })[0]; return obj.nodeValue } }, set_text: function (obj, val, lang) { obj = this._get_node(obj) || this.data.ui.last_selected; if (!obj.size()) { return false } var langs = this._get_settings().languages, s = this._get_settings().core.html_titles, tmp; if ($.isArray(langs) && langs.length) { lang = (lang && $.inArray(lang, langs) != -1) ? lang : this.data.languages.current_language; obj = obj.children("a." + lang) } else { obj = obj.children("a:eq(0)") } if (s) { tmp = obj.children("INS").clone(); obj.html(val).prepend(tmp); this.__callback({ "obj": obj, "name": val, "lang": lang }); return true } else { obj = obj.contents().filter(function () { return this.nodeType == 3 })[0]; this.__callback({ "obj": obj, "name": val, "lang": lang }); return (obj.nodeValue = val) } }, _load_css: function () { var langs = this._get_settings().languages, str = "/* languages css */", selector = ".jstree-" + this.get_index() + ' a', ln; if ($.isArray(langs) && langs.length) { this.data.languages.current_language = langs[0]; for (ln = 0; ln < langs.length; ln++) { str += selector + "." + langs[ln] + " {"; if (langs[ln] != this.data.languages.current_language) { str += " display:none; " } str += " } " } this.data.languages.language_css = $.vakata.css.add_sheet({ 'str': str }) } }, create_node: function (obj, position, js, callback) { var t = this.__call_old(true, obj, position, js, function (t) { var langs = this._get_settings().languages, a = t.children("a"), ln; if ($.isArray(langs) && langs.length) { for (ln = 0; ln < langs.length; ln++) { if (!a.is("." + langs[ln])) { t.append(a.eq(0).clone().removeClass(langs.join(" ")).addClass(langs[ln])) } } a.not("." + langs.join(", .")).remove() } if (callback) { callback.call(this, t) } }); return t } } }) })(jQuery); (function ($) { $.jstree.plugin("cookies", { __init: function () { if (typeof $.cookie === "undefined") { throw "jsTree cookie: jQuery cookie plugin not included."; } var s = this._get_settings().cookies, tmp; if (!!s.save_opened) { tmp = $.cookie(s.save_opened); if (tmp && tmp.length) { this.data.core.to_open = tmp.split(",") } } if (!!s.save_selected) { tmp = $.cookie(s.save_selected); if (tmp && tmp.length && this.data.ui) { this.data.ui.to_select = tmp.split(",") } } this.get_container().one((this.data.ui ? "reselect" : "reopen") + ".jstree", $.proxy(function () { this.get_container().bind("open_node.jstree close_node.jstree select_node.jstree deselect_node.jstree", $.proxy(function (e) { if (this._get_settings().cookies.auto_save) { this.save_cookie((e.handleObj.namespace + e.handleObj.type).replace("jstree", "")) } }, this)) }, this)) }, defaults: { save_opened: "jstree_open", save_selected: "jstree_select", auto_save: true, cookie_options: {} }, _fn: { save_cookie: function (c) { if (this.data.core.refreshing) { return } var s = this._get_settings().cookies; if (!c) { if (s.save_opened) { this.save_opened(); $.cookie(s.save_opened, this.data.core.to_open.join(","), s.cookie_options) } if (s.save_selected && this.data.ui) { this.save_selected(); $.cookie(s.save_selected, this.data.ui.to_select.join(","), s.cookie_options) } return } switch (c) { case "open_node": case "close_node": if (!!s.save_opened) { this.save_opened(); $.cookie(s.save_opened, this.data.core.to_open.join(","), s.cookie_options) } break; case "select_node": case "deselect_node": if (!!s.save_selected && this.data.ui) { this.save_selected(); $.cookie(s.save_selected, this.data.ui.to_select.join(","), s.cookie_options) } break } } } }); $.jstree.defaults.plugins.push("cookies") })(jQuery); (function ($) { $.jstree.plugin("sort", { __init: function () { this.get_container().bind("load_node.jstree", $.proxy(function (e, data) { var obj = this._get_node(data.rslt.obj); obj = obj === -1 ? this.get_container().children("ul") : obj.children("ul"); this.sort(obj) }, this)).bind("rename_node.jstree", $.proxy(function (e, data) { this.sort(data.rslt.obj.parent()) }, this)).bind("move_node.jstree", $.proxy(function (e, data) { var m = data.rslt.np == -1 ? this.get_container() : data.rslt.np; this.sort(m.children("ul")) }, this)) }, defaults: function (a, b) { return this.get_text(a) > this.get_text(b) ? 1 : -1 }, _fn: { sort: function (obj) { var s = this._get_settings().sort, t = this; obj.append($.makeArray(obj.children("li")).sort($.proxy(s, t))); obj.find("> li > ul").each(function () { t.sort($(this)) }); this.clean_node(obj) } } }) })(jQuery); (function ($) { var o = false, r = false, m = false, sli = false, sti = false, dir1 = false, dir2 = false; $.vakata.dnd = { is_down: false, is_drag: false, helper: false, scroll_spd: 10, init_x: 0, init_y: 0, threshold: 5, user_data: {}, drag_start: function (e, data, html) { if ($.vakata.dnd.is_drag) { $.vakata.drag_stop({}) } try { e.currentTarget.unselectable = "on"; e.currentTarget.onselectstart = function () { return false }; if (e.currentTarget.style) { e.currentTarget.style.MozUserSelect = "none" } } catch (err) { } $.vakata.dnd.init_x = e.pageX; $.vakata.dnd.init_y = e.pageY; $.vakata.dnd.user_data = data; $.vakata.dnd.is_down = true; $.vakata.dnd.helper = $("<div id='vakata-dragged'>").html(html).css("opacity", "0.75"); $(document).bind("mousemove", $.vakata.dnd.drag); $(document).bind("mouseup", $.vakata.dnd.drag_stop); return false }, drag: function (e) { if (!$.vakata.dnd.is_down) { return } if (!$.vakata.dnd.is_drag) { if (Math.abs(e.pageX - $.vakata.dnd.init_x) > 5 || Math.abs(e.pageY - $.vakata.dnd.init_y) > 5) { $.vakata.dnd.helper.appendTo("body"); $.vakata.dnd.is_drag = true; $(document).triggerHandler("drag_start.vakata", { "event": e, "data": $.vakata.dnd.user_data }) } else { return } } if (e.type === "mousemove") { var d = $(document), t = d.scrollTop(), l = d.scrollLeft(); if (e.pageY - t < 20) { if (sti && dir1 === "down") { clearInterval(sti); sti = false } if (!sti) { dir1 = "up"; sti = setInterval(function () { $(document).scrollTop($(document).scrollTop() - $.vakata.dnd.scroll_spd) }, 150) } } else { if (sti && dir1 === "up") { clearInterval(sti); sti = false } } if ($(window).height() - (e.pageY - t) < 20) { if (sti && dir1 === "up") { clearInterval(sti); sti = false } if (!sti) { dir1 = "down"; sti = setInterval(function () { $(document).scrollTop($(document).scrollTop() + $.vakata.dnd.scroll_spd) }, 150) } } else { if (sti && dir1 === "down") { clearInterval(sti); sti = false } } if (e.pageX - l < 20) { if (sli && dir2 === "right") { clearInterval(sli); sli = false } if (!sli) { dir2 = "left"; sli = setInterval(function () { $(document).scrollLeft($(document).scrollLeft() - $.vakata.dnd.scroll_spd) }, 150) } } else { if (sli && dir2 === "left") { clearInterval(sli); sli = false } } if ($(window).width() - (e.pageX - l) < 20) { if (sli && dir2 === "left") { clearInterval(sli); sli = false } if (!sli) { dir2 = "right"; sli = setInterval(function () { $(document).scrollLeft($(document).scrollLeft() + $.vakata.dnd.scroll_spd) }, 150) } } else { if (sli && dir2 === "right") { clearInterval(sli); sli = false } } } $.vakata.dnd.helper.css({ left: (e.pageX + 5) + "px", top: (e.pageY + 10) + "px" }); $(document).triggerHandler("drag.vakata", { "event": e, "data": $.vakata.dnd.user_data }) }, drag_stop: function (e) { $(document).unbind("mousemove", $.vakata.dnd.drag); $(document).unbind("mouseup", $.vakata.dnd.drag_stop); $(document).triggerHandler("drag_stop.vakata", { "event": e, "data": $.vakata.dnd.user_data }); $.vakata.dnd.helper.remove(); $.vakata.dnd.init_x = 0; $.vakata.dnd.init_y = 0; $.vakata.dnd.user_data = {}; $.vakata.dnd.is_down = false; $.vakata.dnd.is_drag = false } }; $(function () { var css_string = '#vakata-dragged { display:block; margin:0 0 0 0; padding:4px 4px 4px 24px; position:absolute; top:-2000px; line-height:16px; z-index:10000; } '; $.vakata.css.add_sheet({ str: css_string }) }); $.jstree.plugin("dnd", { __init: function () { this.data.dnd = { active: false, after: false, inside: false, before: false, off: false, prepared: false, w: 0, to1: false, to2: false, cof: false, cw: false, ch: false, i1: false, i2: false }; this.get_container().bind("mouseenter.jstree", $.proxy(function () { if ($.vakata.dnd.is_drag && $.vakata.dnd.user_data.jstree && this.data.themes) { m.attr("class", "jstree-" + this.data.themes.theme); $.vakata.dnd.helper.attr("class", "jstree-dnd-helper jstree-" + this.data.themes.theme) } }, this)).bind("mouseleave.jstree", $.proxy(function () { if ($.vakata.dnd.is_drag && $.vakata.dnd.user_data.jstree) { if (this.data.dnd.i1) { clearInterval(this.data.dnd.i1) } if (this.data.dnd.i2) { clearInterval(this.data.dnd.i2) } } }, this)).bind("mousemove.jstree", $.proxy(function (e) { if ($.vakata.dnd.is_drag && $.vakata.dnd.user_data.jstree) { var cnt = this.get_container()[0]; if (e.pageX + 24 > this.data.dnd.cof.left + this.data.dnd.cw) { if (this.data.dnd.i1) { clearInterval(this.data.dnd.i1) } this.data.dnd.i1 = setInterval($.proxy(function () { this.scrollLeft += $.vakata.dnd.scroll_spd }, cnt), 100) } else if (e.pageX - 24 < this.data.dnd.cof.left) { if (this.data.dnd.i1) { clearInterval(this.data.dnd.i1) } this.data.dnd.i1 = setInterval($.proxy(function () { this.scrollLeft -= $.vakata.dnd.scroll_spd }, cnt), 100) } else { if (this.data.dnd.i1) { clearInterval(this.data.dnd.i1) } } if (e.pageY + 24 > this.data.dnd.cof.top + this.data.dnd.ch) { if (this.data.dnd.i2) { clearInterval(this.data.dnd.i2) } this.data.dnd.i2 = setInterval($.proxy(function () { this.scrollTop += $.vakata.dnd.scroll_spd }, cnt), 100) } else if (e.pageY - 24 < this.data.dnd.cof.top) { if (this.data.dnd.i2) { clearInterval(this.data.dnd.i2) } this.data.dnd.i2 = setInterval($.proxy(function () { this.scrollTop -= $.vakata.dnd.scroll_spd }, cnt), 100) } else { if (this.data.dnd.i2) { clearInterval(this.data.dnd.i2) } } } }, this)).delegate("a", "mousedown.jstree", $.proxy(function (e) { if (e.which === 1) { this.start_drag(e.currentTarget, e); return false } }, this)).delegate("a", "mouseenter.jstree", $.proxy(function (e) { if ($.vakata.dnd.is_drag && $.vakata.dnd.user_data.jstree) { this.dnd_enter(e.currentTarget) } }, this)).delegate("a", "mousemove.jstree", $.proxy(function (e) { if ($.vakata.dnd.is_drag && $.vakata.dnd.user_data.jstree) { if (typeof this.data.dnd.off.top === "undefined") { this.data.dnd.off = $(e.target).offset() } this.data.dnd.w = (e.pageY - (this.data.dnd.off.top || 0)) % this.data.core.li_height; if (this.data.dnd.w < 0) { this.data.dnd.w += this.data.core.li_height } this.dnd_show() } }, this)).delegate("a", "mouseleave.jstree", $.proxy(function (e) { if ($.vakata.dnd.is_drag && $.vakata.dnd.user_data.jstree) { this.data.dnd.after = false; this.data.dnd.before = false; this.data.dnd.inside = false; $.vakata.dnd.helper.children("ins").attr("class", "jstree-invalid"); m.hide(); if (r && r[0] === e.target.parentNode) { if (this.data.dnd.to1) { clearTimeout(this.data.dnd.to1); this.data.dnd.to1 = false } if (this.data.dnd.to2) { clearTimeout(this.data.dnd.to2); this.data.dnd.to2 = false } } } }, this)).delegate("a", "mouseup.jstree", $.proxy(function (e) { if ($.vakata.dnd.is_drag && $.vakata.dnd.user_data.jstree) { this.dnd_finish(e) } }, this)); $(document).bind("drag_stop.vakata", $.proxy(function () { this.data.dnd.after = false; this.data.dnd.before = false; this.data.dnd.inside = false; this.data.dnd.off = false; this.data.dnd.prepared = false; this.data.dnd.w = false; this.data.dnd.to1 = false; this.data.dnd.to2 = false; this.data.dnd.active = false; this.data.dnd.foreign = false; if (m) { m.css({ "top": "-2000px" }) } }, this)).bind("drag_start.vakata", $.proxy(function (e, data) { if (data.data.jstree) { var et = $(data.event.target); if (et.closest(".jstree").hasClass("jstree-" + this.get_index())) { this.dnd_enter(et) } } }, this)); var s = this._get_settings().dnd; if (s.drag_target) { $(document).delegate(s.drag_target, "mousedown.jstree", $.proxy(function (e) { o = e.target; $.vakata.dnd.drag_start(e, { jstree: true, obj: e.target }, "<ins class='jstree-icon'></ins>" + $(e.target).text()); if (this.data.themes) { m.attr("class", "jstree-" + this.data.themes.theme); $.vakata.dnd.helper.attr("class", "jstree-dnd-helper jstree-" + this.data.themes.theme) } $.vakata.dnd.helper.children("ins").attr("class", "jstree-invalid"); var cnt = this.get_container(); this.data.dnd.cof = cnt.offset(); this.data.dnd.cw = parseInt(cnt.width(), 10); this.data.dnd.ch = parseInt(cnt.height(), 10); this.data.dnd.foreign = true; return false }, this)) } if (s.drop_target) { $(document).delegate(s.drop_target, "mouseenter.jstree", $.proxy(function (e) { if (this.data.dnd.active && this._get_settings().dnd.drop_check.call(this, { "o": o, "r": $(e.target) })) { $.vakata.dnd.helper.children("ins").attr("class", "jstree-ok") } }, this)).delegate(s.drop_target, "mouseleave.jstree", $.proxy(function (e) { if (this.data.dnd.active) { $.vakata.dnd.helper.children("ins").attr("class", "jstree-invalid") } }, this)).delegate(s.drop_target, "mouseup.jstree", $.proxy(function (e) { if (this.data.dnd.active && $.vakata.dnd.helper.children("ins").hasClass("jstree-ok")) { this._get_settings().dnd.drop_finish.call(this, { "o": o, "r": $(e.target) }) } }, this)) } }, defaults: { copy_modifier: "ctrl", check_timeout: 200, open_timeout: 500, drop_target: ".jstree-drop", drop_check: function (data) { return true }, drop_finish: $.noop, drag_target: ".jstree-draggable", drag_finish: $.noop, drag_check: function (data) { return { after: false, before: false, inside: true} } }, _fn: { dnd_prepare: function () { if (!r || !r.length) { return } this.data.dnd.off = r.offset(); if (this._get_settings().core.rtl) { this.data.dnd.off.right = this.data.dnd.off.left + r.width() } if (this.data.dnd.foreign) { var a = this._get_settings().dnd.drag_check.call(this, { "o": o, "r": r }); this.data.dnd.after = a.after; this.data.dnd.before = a.before; this.data.dnd.inside = a.inside; this.data.dnd.prepared = true; return this.dnd_show() } this.prepare_move(o, r, "before"); this.data.dnd.before = this.check_move(); this.prepare_move(o, r, "after"); this.data.dnd.after = this.check_move(); if (this._is_loaded(r)) { this.prepare_move(o, r, "inside"); this.data.dnd.inside = this.check_move() } else { this.data.dnd.inside = false } this.data.dnd.prepared = true; return this.dnd_show() }, dnd_show: function () { if (!this.data.dnd.prepared) { return } var o = ["before", "inside", "after"], r = false, rtl = this._get_settings().core.rtl, pos; if (this.data.dnd.w < this.data.core.li_height / 3) { o = ["before", "inside", "after"] } else if (this.data.dnd.w <= this.data.core.li_height * 2 / 3) { o = this.data.dnd.w < this.data.core.li_height / 2 ? ["inside", "before", "after"] : ["inside", "after", "before"] } else { o = ["after", "inside", "before"] } $.each(o, $.proxy(function (i, val) { if (this.data.dnd[val]) { $.vakata.dnd.helper.children("ins").attr("class", "jstree-ok"); r = val; return false } }, this)); if (r === false) { $.vakata.dnd.helper.children("ins").attr("class", "jstree-invalid") } pos = rtl ? (this.data.dnd.off.right - 18) : (this.data.dnd.off.left + 10); switch (r) { case "before": m.css({ "left": pos + "px", "top": (this.data.dnd.off.top - 6) + "px" }).show(); break; case "after": m.css({ "left": pos + "px", "top": (this.data.dnd.off.top + this.data.core.li_height - 7) + "px" }).show(); break; case "inside": m.css({ "left": pos + (rtl ? -4 : 4) + "px", "top": (this.data.dnd.off.top + this.data.core.li_height / 2 - 5) + "px" }).show(); break; default: m.hide(); break } return r }, dnd_open: function () { this.data.dnd.to2 = false; this.open_node(r, $.proxy(this.dnd_prepare, this), true) }, dnd_finish: function (e) { if (this.data.dnd.foreign) { if (this.data.dnd.after || this.data.dnd.before || this.data.dnd.inside) { this._get_settings().dnd.drag_finish.call(this, { "o": o, "r": r }) } } else { this.dnd_prepare(); this.move_node(o, r, this.dnd_show(), e[this._get_settings().dnd.copy_modifier + "Key"]) } o = false; r = false; m.hide() }, dnd_enter: function (obj) { var s = this._get_settings().dnd; this.data.dnd.prepared = false; r = this._get_node(obj); if (s.check_timeout) { if (this.data.dnd.to1) { clearTimeout(this.data.dnd.to1) } this.data.dnd.to1 = setTimeout($.proxy(this.dnd_prepare, this), s.check_timeout) } else { this.dnd_prepare() } if (s.open_timeout) { if (this.data.dnd.to2) { clearTimeout(this.data.dnd.to2) } if (r && r.length && r.hasClass("jstree-closed")) { this.data.dnd.to2 = setTimeout($.proxy(this.dnd_open, this), s.open_timeout) } } else { if (r && r.length && r.hasClass("jstree-closed")) { this.dnd_open() } } }, start_drag: function (obj, e) { o = this._get_node(obj); if (this.data.ui && this.is_selected(o)) { o = this._get_node(null, true) } $.vakata.dnd.drag_start(e, { jstree: true, obj: o }, "<ins class='jstree-icon'></ins>" + (o.length > 1 ? "Multiple selection" : this.get_text(o))); if (this.data.themes) { m.attr("class", "jstree-" + this.data.themes.theme); $.vakata.dnd.helper.attr("class", "jstree-dnd-helper jstree-" + this.data.themes.theme) } var cnt = this.get_container(); this.data.dnd.cof = cnt.children("ul").offset(); this.data.dnd.cw = parseInt(cnt.width(), 10); this.data.dnd.ch = parseInt(cnt.height(), 10); this.data.dnd.active = true } } }); $(function () { var css_string = '' + '#vakata-dragged ins { display:block; text-decoration:none; width:16px; height:16px; margin:0 0 0 0; padding:0; position:absolute; top:4px; left:4px; } ' + '#vakata-dragged .jstree-ok { background:green; } ' + '#vakata-dragged .jstree-invalid { background:red; } ' + '#jstree-marker { padding:0; margin:0; line-height:12px; font-size:1px; overflow:hidden; height:12px; width:8px; position:absolute; top:-30px; z-index:10000; background-repeat:no-repeat; display:none; background-color:silver; } '; $.vakata.css.add_sheet({ str: css_string }); m = $("<div>").attr({ id: "jstree-marker" }).hide().appendTo("body"); $(document).bind("drag_start.vakata", function (e, data) { if (data.data.jstree) { m.show() } }); $(document).bind("drag_stop.vakata", function (e, data) { if (data.data.jstree) { m.hide() } }) }) })(jQuery); (function ($) { $.jstree.plugin("checkbox", { __init: function () { this.select_node = this.deselect_node = this.deselect_all = $.noop; this.get_selected = this.get_checked; this.get_container().bind("open_node.jstree create_node.jstree clean_node.jstree", $.proxy(function (e, data) { this._prepare_checkboxes(data.rslt.obj) }, this)).bind("loaded.jstree", $.proxy(function (e) { this._prepare_checkboxes() }, this)).delegate("a", "click.jstree", $.proxy(function (e) { if (this._get_node(e.target).hasClass("jstree-checked")) { this.uncheck_node(e.target) } else { this.check_node(e.target) } if (this.data.ui) { this.save_selected() } if (this.data.cookies) { this.save_cookie("select_node") } e.preventDefault() }, this)) }, __destroy: function () { this.get_container().find(".jstree-checkbox").remove() }, _fn: { _prepare_checkboxes: function (obj) { obj = !obj || obj == -1 ? this.get_container() : this._get_node(obj); var c, _this = this, t; obj.each(function () { t = $(this); c = t.is("li") && t.hasClass("jstree-checked") ? "jstree-checked" : "jstree-unchecked"; t.find("a").not(":has(.jstree-checkbox)").prepend("<ins class='jstree-checkbox'>&#160;</ins>").parent().not(".jstree-checked, .jstree-unchecked").addClass(c) }); if (obj.is("li")) { this._repair_state(obj) } else { obj.find("> ul > li").each(function () { _this._repair_state(this) }) } }, change_state: function (obj, state) { obj = this._get_node(obj); state = (state === false || state === true) ? state : obj.hasClass("jstree-checked"); if (state) { obj.find("li").andSelf().removeClass("jstree-checked jstree-undetermined").addClass("jstree-unchecked") } else { obj.find("li").andSelf().removeClass("jstree-unchecked jstree-undetermined").addClass("jstree-checked"); if (this.data.ui) { this.data.ui.last_selected = obj } this.data.checkbox.last_selected = obj } obj.parentsUntil(".jstree", "li").each(function () { var $this = $(this); if (state) { if ($this.children("ul").children(".jstree-checked, .jstree-undetermined").length) { $this.parentsUntil(".jstree", "li").andSelf().removeClass("jstree-checked jstree-unchecked").addClass("jstree-undetermined"); return false } else { $this.removeClass("jstree-checked jstree-undetermined").addClass("jstree-unchecked") } } else { if ($this.children("ul").children(".jstree-unchecked, .jstree-undetermined").length) { $this.parentsUntil(".jstree", "li").andSelf().removeClass("jstree-checked jstree-unchecked").addClass("jstree-undetermined"); return false } else { $this.removeClass("jstree-unchecked jstree-undetermined").addClass("jstree-checked") } } }); if (this.data.ui) { this.data.ui.selected = this.get_checked() } this.__callback(obj) }, check_node: function (obj) { this.change_state(obj, false) }, uncheck_node: function (obj) { this.change_state(obj, true) }, check_all: function () { var _this = this; this.get_container().children("ul").children("li").each(function () { _this.check_node(this, false) }) }, uncheck_all: function () { var _this = this; this.get_container().children("ul").children("li").each(function () { _this.change_state(this, true) }) }, is_checked: function (obj) { obj = this._get_node(obj); return obj.length ? obj.is(".jstree-checked") : false }, get_checked: function (obj) { obj = !obj || obj === -1 ? this.get_container() : this._get_node(obj); return obj.find("> ul > .jstree-checked, .jstree-undetermined > ul > .jstree-checked") }, get_unchecked: function (obj) { obj = !obj || obj === -1 ? this.get_container() : this._get_node(obj); return obj.find("> ul > .jstree-unchecked, .jstree-undetermined > ul > .jstree-unchecked") }, show_checkboxes: function () { this.get_container().children("ul").removeClass("jstree-no-checkboxes") }, hide_checkboxes: function () { this.get_container().children("ul").addClass("jstree-no-checkboxes") }, _repair_state: function (obj) { obj = this._get_node(obj); if (!obj.length) { return } var a = obj.find("> ul > .jstree-checked").length, b = obj.find("> ul > .jstree-undetermined").length, c = obj.find("> ul > li").length; if (c === 0) { if (obj.hasClass("jstree-undetermined")) { this.check_node(obj) } } else if (a === 0 && b === 0) { this.uncheck_node(obj) } else if (a === c) { this.check_node(obj) } else { obj.parentsUntil(".jstree", "li").removeClass("jstree-checked jstree-unchecked").addClass("jstree-undetermined") } }, reselect: function () { if (this.data.ui) { var _this = this, s = this.data.ui.to_select; s = $.map($.makeArray(s), function (n) { return "#" + n.toString().replace(/^#/, "").replace('\\/', '/').replace('/', '\\/') }); this.deselect_all(); $.each(s, function (i, val) { _this.check_node(val) }); this.__callback() } } } }) })(jQuery); (function ($) { $.vakata.xslt = function (xml, xsl, callback) { var rs = "", xm, xs, processor, support; if (document.recalc) { xm = document.createElement('xml'); xs = document.createElement('xml'); xm.innerHTML = xml; xs.innerHTML = xsl; $("body").append(xm).append(xs); setTimeout((function (xm, xs, callback) { return function () { callback.call(null, xm.transformNode(xs.XMLDocument)); setTimeout((function (xm, xs) { return function () { jQuery("body").remove(xm).remove(xs) } })(xm, xs), 200) } })(xm, xs, callback), 100); return true } if (typeof window.DOMParser !== "undefined" && typeof window.XMLHttpRequest !== "undefined" && typeof window.XSLTProcessor !== "undefined") { processor = new XSLTProcessor(); support = $.isFunction(processor.transformDocument) ? (typeof window.XMLSerializer !== "undefined") : true; if (!support) { return false } xml = new DOMParser().parseFromString(xml, "text/xml"); xsl = new DOMParser().parseFromString(xsl, "text/xml"); if ($.isFunction(processor.transformDocument)) { rs = document.implementation.createDocument("", "", null); processor.transformDocument(xml, xsl, rs, null); callback.call(null, XMLSerializer().serializeToString(rs)); return true } else { processor.importStylesheet(xsl); rs = processor.transformToFragment(xml, document); callback.call(null, $("<div>").append(rs).html()); return true } } return false }; var xsl = { 'nest': '<?xml version="1.0" encoding="utf-8" ?>' + '<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" >' + '<xsl:output method="html" encoding="utf-8" omit-xml-declaration="yes" standalone="no" indent="no" media-type="text/html" />' + '<xsl:template match="/">' + '	<xsl:call-template name="nodes">' + '		<xsl:with-param name="node" select="/root" />' + '	</xsl:call-template>' + '</xsl:template>' + '<xsl:template name="nodes">' + '	<xsl:param name="node" />' + '	<ul>' + '	<xsl:for-each select="$node/item">' + '		<xsl:variable name="children" select="count(./item) &gt; 0" />' + '		<li>' + '			<xsl:attribute name="class">' + '				<xsl:if test="position() = last()">jstree-last </xsl:if>' + '				<xsl:choose>' + '					<xsl:when test="@state = \'open\'">jstree-open </xsl:when>' + '					<xsl:when test="$children or @hasChildren or @state = \'closed\'">jstree-closed </xsl:when>' + '					<xsl:otherwise>jstree-leaf </xsl:otherwise>' + '				</xsl:choose>' + '				<xsl:value-of select="@class" />' + '			</xsl:attribute>' + '			<xsl:for-each select="@*">' + '				<xsl:if test="name() != \'class\' and name() != \'state\' and name() != \'hasChildren\'">' + '					<xsl:attribute name="{name()}"><xsl:value-of select="." /></xsl:attribute>' + '				</xsl:if>' + '			</xsl:for-each>' + '	<ins class="jstree-icon"><xsl:text>&#xa0;</xsl:text></ins>' + '			<xsl:for-each select="content/name">' + '				<a>' + '				<xsl:attribute name="href">' + '					<xsl:choose>' + '					<xsl:when test="@href"><xsl:value-of select="@href" /></xsl:when>' + '					<xsl:otherwise>#</xsl:otherwise>' + '					</xsl:choose>' + '				</xsl:attribute>' + '				<xsl:attribute name="class"><xsl:value-of select="@lang" /> <xsl:value-of select="@class" /></xsl:attribute>' + '				<xsl:attribute name="style"><xsl:value-of select="@style" /></xsl:attribute>' + '				<xsl:for-each select="@*">' + '					<xsl:if test="name() != \'style\' and name() != \'class\' and name() != \'href\'">' + '						<xsl:attribute name="{name()}"><xsl:value-of select="." /></xsl:attribute>' + '					</xsl:if>' + '				</xsl:for-each>' + '					<ins>' + '						<xsl:attribute name="class">jstree-icon ' + '							<xsl:if test="string-length(attribute::icon) > 0 and not(contains(@icon,\'/\'))"><xsl:value-of select="@icon" /></xsl:if>' + '						</xsl:attribute>' + '						<xsl:if test="string-length(attribute::icon) > 0 and contains(@icon,\'/\')"><xsl:attribute name="style">background:url(<xsl:value-of select="@icon" />) center center no-repeat;</xsl:attribute></xsl:if>' + '						<xsl:text>&#xa0;</xsl:text>' + '					</ins>' + '					<xsl:value-of select="current()" />' + '				</a>' + '			</xsl:for-each>' + '			<xsl:if test="$children or @hasChildren"><xsl:call-template name="nodes"><xsl:with-param name="node" select="current()" /></xsl:call-template></xsl:if>' + '		</li>' + '	</xsl:for-each>' + '	</ul>' + '</xsl:template>' + '</xsl:stylesheet>', 'flat': '<?xml version="1.0" encoding="utf-8" ?>' + '<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" >' + '<xsl:output method="html" encoding="utf-8" omit-xml-declaration="yes" standalone="no" indent="no" media-type="text/xml" />' + '<xsl:template match="/">' + '	<ul>' + '	<xsl:for-each select="//item[not(@parent_id) or @parent_id=0 or not(@parent_id = //item/@id)]">' + '		<xsl:call-template name="nodes">' + '			<xsl:with-param name="node" select="." />' + '			<xsl:with-param name="is_last" select="number(position() = last())" />' + '		</xsl:call-template>' + '	</xsl:for-each>' + '	</ul>' + '</xsl:template>' + '<xsl:template name="nodes">' + '	<xsl:param name="node" />' + '	<xsl:param name="is_last" />' + '	<xsl:variable name="children" select="count(//item[@parent_id=$node/attribute::id]) &gt; 0" />' + '	<li>' + '	<xsl:attribute name="class">' + '		<xsl:if test="$is_last = true()">jstree-last </xsl:if>' + '		<xsl:choose>' + '			<xsl:when test="@state = \'open\'">jstree-open </xsl:when>' + '			<xsl:when test="$children or @hasChildren or @state = \'closed\'">jstree-closed </xsl:when>' + '			<xsl:otherwise>jstree-leaf </xsl:otherwise>' + '		</xsl:choose>' + '		<xsl:value-of select="@class" />' + '	</xsl:attribute>' + '	<xsl:for-each select="@*">' + '		<xsl:if test="name() != \'parent_id\' and name() != \'hasChildren\' and name() != \'class\' and name() != \'state\'">' + '		<xsl:attribute name="{name()}"><xsl:value-of select="." /></xsl:attribute>' + '		</xsl:if>' + '	</xsl:for-each>' + '	<ins class="jstree-icon"><xsl:text>&#xa0;</xsl:text></ins>' + '	<xsl:for-each select="content/name">' + '		<a>' + '		<xsl:attribute name="href">' + '			<xsl:choose>' + '			<xsl:when test="@href"><xsl:value-of select="@href" /></xsl:when>' + '			<xsl:otherwise>#</xsl:otherwise>' + '			</xsl:choose>' + '		</xsl:attribute>' + '		<xsl:attribute name="class"><xsl:value-of select="@lang" /> <xsl:value-of select="@class" /></xsl:attribute>' + '		<xsl:attribute name="style"><xsl:value-of select="@style" /></xsl:attribute>' + '		<xsl:for-each select="@*">' + '			<xsl:if test="name() != \'style\' and name() != \'class\' and name() != \'href\'">' + '				<xsl:attribute name="{name()}"><xsl:value-of select="." /></xsl:attribute>' + '			</xsl:if>' + '		</xsl:for-each>' + '			<ins>' + '				<xsl:attribute name="class">jstree-icon ' + '					<xsl:if test="string-length(attribute::icon) > 0 and not(contains(@icon,\'/\'))"><xsl:value-of select="@icon" /></xsl:if>' + '				</xsl:attribute>' + '				<xsl:if test="string-length(attribute::icon) > 0 and contains(@icon,\'/\')"><xsl:attribute name="style">background:url(<xsl:value-of select="@icon" />) center center no-repeat;</xsl:attribute></xsl:if>' + '				<xsl:text>&#xa0;</xsl:text>' + '			</ins>' + '			<xsl:value-of select="current()" />' + '		</a>' + '	</xsl:for-each>' + '	<xsl:if test="$children">' + '		<ul>' + '		<xsl:for-each select="//item[@parent_id=$node/attribute::id]">' + '			<xsl:call-template name="nodes">' + '				<xsl:with-param name="node" select="." />' + '				<xsl:with-param name="is_last" select="number(position() = last())" />' + '			</xsl:call-template>' + '		</xsl:for-each>' + '		</ul>' + '	</xsl:if>' + '	</li>' + '</xsl:template>' + '</xsl:stylesheet>' }; $.jstree.plugin("xml_data", { defaults: { data: false, ajax: false, xsl: "flat", clean_node: false, correct_state: true }, _fn: { load_node: function (obj, s_call, e_call) { var _this = this; this.load_node_xml(obj, function () { _this.__callback({ "obj": obj }); s_call.call(this) }, e_call) }, _is_loaded: function (obj) { var s = this._get_settings().xml_data; obj = this._get_node(obj); return obj == -1 || !obj || !s.ajax || obj.is(".jstree-open, .jstree-leaf") || obj.children("ul").children("li").size() > 0 }, load_node_xml: function (obj, s_call, e_call) { var s = this.get_settings().xml_data, error_func = function () { }, success_func = function () { }; obj = this._get_node(obj); if (obj && obj !== -1) { if (obj.data("jstree-is-loading")) { return } else { obj.data("jstree-is-loading", true) } } switch (!0) { case (!s.data && !s.ajax): throw "Neither data nor ajax settings supplied."; case (!!s.data && !s.ajax) || (!!s.data && !!s.ajax && (!obj || obj === -1)): if (!obj || obj == -1) { this.parse_xml(s.data, $.proxy(function (d) { if (d) { d = d.replace(/ ?xmlns="[^"]*"/ig, ""); if (d.length > 10) { d = $(d); this.get_container().children("ul").empty().append(d.children()); if (s.clean_node) { this.clean_node(obj) } if (s_call) { s_call.call(this) } } } else { if (s.correct_state) { this.get_container().children("ul").empty(); if (s_call) { s_call.call(this) } } } }, this)) } break; case (!s.data && !!s.ajax) || (!!s.data && !!s.ajax && obj && obj !== -1): error_func = function (x, t, e) { var ef = this.get_settings().xml_data.ajax.error; if (ef) { ef.call(this, x, t, e) } if (obj !== -1 && obj.length) { obj.children(".jstree-loading").removeClass("jstree-loading"); obj.data("jstree-is-loading", false); if (t === "success" && s.correct_state) { obj.removeClass("jstree-open jstree-closed").addClass("jstree-leaf") } } else { if (t === "success" && s.correct_state) { this.get_container().children("ul").empty() } } if (e_call) { e_call.call(this) } }; success_func = function (d, t, x) { d = x.responseText; var sf = this.get_settings().xml_data.ajax.success; if (sf) { d = sf.call(this, d, t, x) || d } if (d == "") { return error_func.call(this, x, t, "") } this.parse_xml(d, $.proxy(function (d) { if (d) { d = d.replace(/ ?xmlns="[^"]*"/ig, ""); if (d.length > 10) { d = $(d); if (obj === -1 || !obj) { this.get_container().children("ul").empty().append(d.children()) } else { obj.children(".jstree-loading").removeClass("jstree-loading"); obj.append(d); obj.data("jstree-is-loading", false) } if (s.clean_node) { this.clean_node(obj) } if (s_call) { s_call.call(this) } } else { if (obj && obj !== -1) { obj.children(".jstree-loading").removeClass("jstree-loading"); obj.data("jstree-is-loading", false); if (s.correct_state) { obj.removeClass("jstree-open jstree-closed").addClass("jstree-leaf"); if (s_call) { s_call.call(this) } } } else { if (s.correct_state) { this.get_container().children("ul").empty(); if (s_call) { s_call.call(this) } } } } } }, this)) }; s.ajax.context = this; s.ajax.error = error_func; s.ajax.success = success_func; if (!s.ajax.dataType) { s.ajax.dataType = "xml" } if ($.isFunction(s.ajax.url)) { s.ajax.url = s.ajax.url.call(this, obj) } if ($.isFunction(s.ajax.data)) { s.ajax.data = s.ajax.data.call(this, obj) } $.ajax(s.ajax); break } }, parse_xml: function (xml, callback) { var s = this._get_settings().xml_data; $.vakata.xslt(xml, xsl[s.xsl], callback) }, get_xml: function (tp, obj, li_attr, a_attr, is_callback) { var result = "", s = this._get_settings(), _this = this, tmp1, tmp2, li, a, lang; if (!tp) { tp = "flat" } if (!is_callback) { is_callback = 0 } obj = this._get_node(obj); if (!obj || obj === -1) { obj = this.get_container().find("> ul > li") } li_attr = $.isArray(li_attr) ? li_attr : ["id", "class"]; if (!is_callback && this.data.types && $.inArray(s.types.type_attr, li_attr) === -1) { li_attr.push(s.types.type_attr) } a_attr = $.isArray(a_attr) ? a_attr : []; if (!is_callback) { result += "<root>" } obj.each(function () { result += "<item"; li = $(this); $.each(li_attr, function (i, v) { result += " " + v + "=\"" + (li.attr(v) || "").replace(/jstree[^ ]*|$/ig, '').replace(/^\s+$/ig, "") + "\"" }); if (li.hasClass("jstree-open")) { result += " state=\"open\"" } if (li.hasClass("jstree-closed")) { result += " state=\"closed\"" } if (tp === "flat") { result += " parent_id=\"" + is_callback + "\"" } result += ">"; result += "<content>"; a = li.children("a"); a.each(function () { tmp1 = $(this); lang = false; result += "<name"; if ($.inArray("languages", s.plugins) !== -1) { $.each(s.languages, function (k, z) { if (tmp1.hasClass(z)) { result += " lang=\"" + z + "\""; lang = z; return false } }) } if (a_attr.length) { $.each(a_attr, function (k, z) { result += " " + z + "=\"" + (tmp1.attr(z) || "").replace(/jstree[^ ]*|$/ig, '') + "\"" }) } if (tmp1.children("ins").get(0).className.replace(/jstree[^ ]*|$/ig, '').replace(/^\s+$/ig, "").length) { result += ' icon="' + tmp1.children("ins").get(0).className.replace(/jstree[^ ]*|$/ig, '').replace(/^\s+$/ig, "") + '"' } if (tmp1.children("ins").get(0).style.backgroundImage.length) { result += ' icon="' + tmp1.children("ins").get(0).style.backgroundImage.replace("url(", "").replace(")", "") + '"' } result += ">"; result += "<![CDATA[" + _this.get_text(tmp1, lang) + "]]>"; result += "</name>" }); result += "</content>"; tmp2 = li[0].id; li = li.find("> ul > li"); if (li.length) { tmp2 = _this.get_xml(tp, li, li_attr, a_attr, tmp2) } else { tmp2 = "" } if (tp == "nest") { result += tmp2 } result += "</item>"; if (tp == "flat") { result += tmp2 } }); if (!is_callback) { result += "</root>" } return result } } }) })(jQuery); (function ($) { $.expr[':'].jstree_contains = function (a, i, m) { return (a.textContent || a.innerText || "").toLowerCase().indexOf(m[3].toLowerCase()) >= 0 }; $.jstree.plugin("search", { __init: function () { this.data.search.str = ""; this.data.search.result = $() }, defaults: { ajax: false, case_insensitive: false }, _fn: { search: function (str, skip_async) { if (str === "") { return } var s = this.get_settings().search, t = this, error_func = function () { }, success_func = function () { }; this.data.search.str = str; if (!skip_async && s.ajax !== false && this.get_container().find(".jstree-closed:eq(0)").length > 0) { this.search.supress_callback = true; error_func = function () { }; success_func = function (d, t, x) { var sf = this.get_settings().search.ajax.success; if (sf) { d = sf.call(this, d, t, x) || d } this.data.search.to_open = d; this._search_open() }; s.ajax.context = this; s.ajax.error = error_func; s.ajax.success = success_func; if ($.isFunction(s.ajax.url)) { s.ajax.url = s.ajax.url.call(this, str) } if ($.isFunction(s.ajax.data)) { s.ajax.data = s.ajax.data.call(this, str) } if (!s.ajax.data) { s.ajax.data = { "search_string": str} } if (!s.ajax.dataType || /^json/.exec(s.ajax.dataType)) { s.ajax.dataType = "json" } $.ajax(s.ajax); return } if (this.data.search.result.length) { this.clear_search() } this.data.search.result = this.get_container().find("a" + (this.data.languages ? "." + this.get_lang() : "") + ":" + (s.case_insensitive ? "jstree_contains" : "contains") + "(" + this.data.search.str + ")"); this.data.search.result.addClass("jstree-search").parents(".jstree-closed").each(function () { t.open_node(this, false, true) }); this.__callback({ nodes: this.data.search.result, str: str }) }, clear_search: function (str) { this.data.search.result.removeClass("jstree-search"); this.__callback(this.data.search.result); this.data.search.result = $() }, _search_open: function (is_callback) { var _this = this, done = true, current = [], remaining = []; if (this.data.search.to_open.length) { $.each(this.data.search.to_open, function (i, val) { if (val == "#") { return true } if ($(val).length && $(val).is(".jstree-closed")) { current.push(val) } else { remaining.push(val) } }); if (current.length) { this.data.search.to_open = remaining; $.each(current, function (i, val) { _this.open_node(val, function () { _this._search_open(true) }) }); done = false } } if (done) { this.search(this.data.search.str, true) } } } }) })(jQuery); (function ($) { $.vakata.context = { cnt: $("<div id='vakata-contextmenu'>"), vis: false, tgt: false, par: false, func: false, data: false, show: function (s, t, x, y, d, p) { var html = $.vakata.context.parse(s), h, w; if (!html) { return } $.vakata.context.vis = true; $.vakata.context.tgt = t; $.vakata.context.par = p || t || null; $.vakata.context.data = d || null; $.vakata.context.cnt.html(html).css({ "visibility": "hidden", "display": "block", "left": 0, "top": 0 }); h = $.vakata.context.cnt.height(); w = $.vakata.context.cnt.width(); if (x + w > $(document).width()) { x = $(document).width() - (w + 5); $.vakata.context.cnt.find("li > ul").addClass("right") } if (y + h > $(document).height()) { y = y - (h + t[0].offsetHeight); $.vakata.context.cnt.find("li > ul").addClass("bottom") } $.vakata.context.cnt.css({ "left": x, "top": y }).find("li:has(ul)").bind("mouseenter", function (e) { var w = $(document).width(), h = $(document).height(), ul = $(this).children("ul").show(); if (w !== $(document).width()) { ul.toggleClass("right") } if (h !== $(document).height()) { ul.toggleClass("bottom") } }).bind("mouseleave", function (e) { $(this).children("ul").hide() }).end().css({ "visibility": "visible" }).show(); $(document).triggerHandler("context_show.vakata") }, hide: function () { $.vakata.context.vis = false; $.vakata.context.cnt.attr("class", "").hide(); $(document).triggerHandler("context_hide.vakata") }, parse: function (s, is_callback) { if (!s) { return false } var str = "", tmp = false, was_sep = true; if (!is_callback) { $.vakata.context.func = {} } str += "<ul>"; $.each(s, function (i, val) { if (!val) { return true } $.vakata.context.func[i] = val.action; if (!was_sep && val.separator_before) { str += "<li class='vakata-separator vakata-separator-before'></li>" } was_sep = false; str += "<li class='" + (val._class || "") + (val._disabled ? " jstree-contextmenu-disabled " : "") + "'><ins "; if (val.icon && val.icon.indexOf("/") === -1) { str += " class='" + val.icon + "' " } if (val.icon && val.icon.indexOf("/") !== -1) { str += " style='background:url(" + val.icon + ") center center no-repeat;' " } str += ">&#160;</ins><a href='#' rel='" + i + "'>"; if (val.submenu) { str += "<span style='float:right;'>&raquo;</span>" } str += val.label + "</a>"; if (val.submenu) { tmp = $.vakata.context.parse(val.submenu, true); if (tmp) { str += tmp } } str += "</li>"; if (val.separator_after) { str += "<li class='vakata-separator vakata-separator-after'></li>"; was_sep = true } }); str = str.replace(/<li class\='vakata-separator vakata-separator-after'\><\/li\>$/, ""); str += "</ul>"; return str.length > 10 ? str : false }, exec: function (i) { if ($.isFunction($.vakata.context.func[i])) { $.vakata.context.func[i].call($.vakata.context.data, $.vakata.context.par); return true } else { return false } } }; $(function () { var css_string = '' + '#vakata-contextmenu { display:none; position:absolute; margin:0; padding:0; min-width:180px; background:#ebebeb; border:1px solid silver; z-index:10000; *width:180px; } ' + '#vakata-contextmenu ul { min-width:180px; *width:180px; } ' + '#vakata-contextmenu ul, #vakata-contextmenu li { margin:0; padding:0; list-style-type:none; display:block; } ' + '#vakata-contextmenu li { line-height:20px; min-height:20px; position:relative; padding:0px; } ' + '#vakata-contextmenu li a { padding:1px 6px; line-height:17px; display:block; text-decoration:none; margin:1px 1px 0 1px; } ' + '#vakata-contextmenu li ins { float:left; width:16px; height:16px; text-decoration:none; margin-right:2px; } ' + '#vakata-contextmenu li a:hover, #vakata-contextmenu li.vakata-hover > a { background:gray; color:white; } ' + '#vakata-contextmenu li ul { display:none; position:absolute; top:-2px; left:100%; background:#ebebeb; border:1px solid gray; } ' + '#vakata-contextmenu .right { right:100%; left:auto; } ' + '#vakata-contextmenu .bottom { bottom:-1px; top:auto; } ' + '#vakata-contextmenu li.vakata-separator { min-height:0; height:1px; line-height:1px; font-size:1px; overflow:hidden; margin:0 2px; background:silver; /* border-top:1px solid #fefefe; */ padding:0; } '; $.vakata.css.add_sheet({ str: css_string }); $.vakata.context.cnt.delegate("a", "click", function (e) { e.preventDefault() }).delegate("a", "mouseup", function (e) { if (!$(this).parent().hasClass("jstree-contextmenu-disabled") && $.vakata.context.exec($(this).attr("rel"))) { $.vakata.context.hide() } else { $(this).blur() } }).delegate("a", "mouseover", function () { $.vakata.context.cnt.find(".vakata-hover").removeClass("vakata-hover") }).appendTo("body"); $(document).bind("mousedown", function (e) { if ($.vakata.context.vis && !$.contains($.vakata.context.cnt[0], e.target)) { $.vakata.context.hide() } }); if (typeof $.hotkeys !== "undefined") { $(document).bind("keydown", "up", function (e) { if ($.vakata.context.vis) { var o = $.vakata.context.cnt.find("ul:visible").last().children(".vakata-hover").removeClass("vakata-hover").prevAll("li:not(.vakata-separator)").first(); if (!o.length) { o = $.vakata.context.cnt.find("ul:visible").last().children("li:not(.vakata-separator)").last() } o.addClass("vakata-hover"); e.stopImmediatePropagation(); e.preventDefault() } }).bind("keydown", "down", function (e) { if ($.vakata.context.vis) { var o = $.vakata.context.cnt.find("ul:visible").last().children(".vakata-hover").removeClass("vakata-hover").nextAll("li:not(.vakata-separator)").first(); if (!o.length) { o = $.vakata.context.cnt.find("ul:visible").last().children("li:not(.vakata-separator)").first() } o.addClass("vakata-hover"); e.stopImmediatePropagation(); e.preventDefault() } }).bind("keydown", "right", function (e) { if ($.vakata.context.vis) { $.vakata.context.cnt.find(".vakata-hover").children("ul").show().children("li:not(.vakata-separator)").removeClass("vakata-hover").first().addClass("vakata-hover"); e.stopImmediatePropagation(); e.preventDefault() } }).bind("keydown", "left", function (e) { if ($.vakata.context.vis) { $.vakata.context.cnt.find(".vakata-hover").children("ul").hide().children(".vakata-separator").removeClass("vakata-hover"); e.stopImmediatePropagation(); e.preventDefault() } }).bind("keydown", "esc", function (e) { $.vakata.context.hide(); e.preventDefault() }).bind("keydown", "space", function (e) { $.vakata.context.cnt.find(".vakata-hover").last().children("a").click(); e.preventDefault() }) } }); $.jstree.plugin("contextmenu", { __init: function () { this.get_container().delegate("a", "contextmenu.jstree", $.proxy(function (e) { e.preventDefault(); this.show_contextmenu(e.currentTarget, e.pageX, e.pageY) }, this)).bind("destroy.jstree", $.proxy(function () { if (this.data.contextmenu) { $.vakata.context.hide() } }, this)); $(document).bind("context_hide.vakata", $.proxy(function () { this.data.contextmenu = false }, this)) }, defaults: { select_node: false, show_at_node: true, items: { "create": { "separator_before": false, "separator_after": true, "label": "Create", "action": function (obj) { this.create(obj) } }, "rename": { "separator_before": false, "separator_after": false, "label": "Rename", "action": function (obj) { this.rename(obj) } }, "remove": { "separator_before": false, "icon": false, "separator_after": false, "label": "Delete", "action": function (obj) { this.remove(obj) } }, "ccp": { "separator_before": true, "icon": false, "separator_after": false, "label": "Edit", "action": false, "submenu": { "cut": { "separator_before": false, "separator_after": false, "label": "Cut", "action": function (obj) { this.cut(obj) } }, "copy": { "separator_before": false, "icon": false, "separator_after": false, "label": "Copy", "action": function (obj) { this.copy(obj) } }, "paste": { "separator_before": false, "icon": false, "separator_after": false, "label": "Paste", "action": function (obj) { this.paste(obj) } }}}} }, _fn: { show_contextmenu: function (obj, x, y) { obj = this._get_node(obj); var s = this.get_settings().contextmenu, a = obj.children("a:visible:eq(0)"), o = false; if (s.select_node && this.data.ui && !this.is_selected(obj)) { this.deselect_all(); this.select_node(obj, true) } if (s.show_at_node || typeof x === "undefined" || typeof y === "undefined") { o = a.offset(); x = o.left; y = o.top + this.data.core.li_height } if ($.isFunction(s.items)) { s.items = s.items.call(this, obj) } this.data.contextmenu = true; $.vakata.context.show(s.items, a, x, y, this, obj); if (this.data.themes) { $.vakata.context.cnt.attr("class", "jstree-" + this.data.themes.theme + "-context") } } } }) })(jQuery); (function ($) { $.jstree.plugin("types", { __init: function () { var s = this._get_settings().types; this.data.types.attach_to = []; this.get_container().bind("init.jstree", $.proxy(function () { var types = s.types, attr = s.type_attr, icons_css = "", _this = this; $.each(types, function (i, tp) { $.each(tp, function (k, v) { if (!/^(max_depth|max_children|icon|valid_children)$/.test(k)) { _this.data.types.attach_to.push(k) } }); if (!tp.icon) { return true } if (tp.icon.image || tp.icon.position) { if (i == "default") { icons_css += '.jstree-' + _this.get_index() + ' a > .jstree-icon { ' } else { icons_css += '.jstree-' + _this.get_index() + ' li[' + attr + '=' + i + '] > a > .jstree-icon { ' } if (tp.icon.image) { icons_css += ' background-image:url(' + tp.icon.image + '); ' } if (tp.icon.position) { icons_css += ' background-position:' + tp.icon.position + '; ' } else { icons_css += ' background-position:0 0; ' } icons_css += '} ' } }); if (icons_css != "") { $.vakata.css.add_sheet({ 'str': icons_css }) } }, this)).bind("before.jstree", $.proxy(function (e, data) { if ($.inArray(data.func, this.data.types.attach_to) !== -1) { var s = this._get_settings().types.types, t = this._get_type(data.args[0]); if (((s[t] && typeof s[t][data.func] !== "undefined") || (s["default"] && typeof s["default"][data.func] !== "undefined")) && !this._check(data.func, data.args[0])) { e.stopImmediatePropagation(); return false } } }, this)) }, defaults: { max_children: -1, max_depth: -1, valid_children: "all", type_attr: "rel", types: { "default": { "max_children": -1, "max_depth": -1, "valid_children": "all"}} }, _fn: { _get_type: function (obj) { obj = this._get_node(obj); return (!obj || !obj.length) ? false : obj.attr(this._get_settings().types.type_attr) || "default" }, set_type: function (str, obj) { obj = this._get_node(obj); return (!obj.length || !str) ? false : obj.attr(this._get_settings().types.type_attr, str) }, _check: function (rule, obj, opts) { var v = false, t = this._get_type(obj), d = 0, _this = this, s = this._get_settings().types; if (obj === -1) { if (!!s[rule]) { v = s[rule] } else { return } } else { if (t === false) { return } if (!!s.types[t] && !!s.types[t][rule]) { v = s.types[t][rule] } else if (!!s.types["default"] && !!s.types["default"][rule]) { v = s.types["default"][rule] } } if ($.isFunction(v)) { v = v.call(this, obj) } if (rule === "max_depth" && obj !== -1 && opts !== false && s.max_depth !== -2 && v !== 0) { this._get_node(obj).children("a:eq(0)").parentsUntil(".jstree", "li").each(function (i) { if (s.max_depth !== -1 && s.max_depth - (i + 1) <= 0) { v = 0; return false } d = (i === 0) ? v : _this._check(rule, this, false); if (d !== -1 && d - (i + 1) <= 0) { v = 0; return false } if (d >= 0 && (d - (i + 1) < v || v < 0)) { v = d - (i + 1) } if (s.max_depth >= 0 && (s.max_depth - (i + 1) < v || v < 0)) { v = s.max_depth - (i + 1) } }) } return v }, check_move: function () { if (!this.__call_old()) { return false } var m = this._get_move(), s = m.rt._get_settings().types, mc = m.rt._check("max_children", m.cr), md = m.rt._check("max_depth", m.cr), vc = m.rt._check("valid_children", m.cr), ch = 0, d = 1, t; if (vc === "none") { return false } if ($.isArray(vc) && m.ot && m.ot._get_type) { m.o.each(function () { if ($.inArray(m.ot._get_type(this), vc) === -1) { d = false; return false } }); if (d === false) { return false } } if (s.max_children !== -2 && mc !== -1) { ch = m.cr === -1 ? this.get_container().children("> ul > li").not(m.o).length : m.cr.children("> ul > li").not(m.o).length; if (ch + m.o.length > mc) { return false } } if (s.max_depth !== -2 && md !== -1) { d = 0; if (md === 0) { return false } if (typeof m.o.d === "undefined") { t = m.o; while (t.length > 0) { t = t.find("> ul > li"); d++ } m.o.d = d } if (md - m.o.d < 0) { return false } } return true }, create_node: function (obj, position, js, callback, is_loaded, skip_check) { if (!skip_check && (is_loaded || this._is_loaded(obj))) { var p = (position && position.match(/^before|after$/i) && obj !== -1) ? this._get_parent(obj) : this._get_node(obj), s = this._get_settings().types, mc = this._check("max_children", p), md = this._check("max_depth", p), vc = this._check("valid_children", p), ch; if (!js) { js = {} } if (vc === "none") { return false } if ($.isArray(vc)) { if (!js.attr || !js.attr[s.type_attr]) { if (!js.attr) { js.attr = {} } js.attr[s.type_attr] = vc[0] } else { if ($.inArray(js.attr[s.type_attr], vc) === -1) { return false } } } if (s.max_children !== -2 && mc !== -1) { ch = p === -1 ? this.get_container().children("> ul > li").length : p.children("> ul > li").length; if (ch + 1 > mc) { return false } } if (s.max_depth !== -2 && md !== -1 && (md - 1) < 0) { return false } } return this.__call_old(true, obj, position, js, callback, is_loaded, skip_check) } } }) })(jQuery); (function ($) { $.jstree.plugin("html_data", { __init: function () { this.data.html_data.original_container_html = this.get_container().find(" > ul > li").clone(true); this.data.html_data.original_container_html.find("li").andSelf().contents().filter(function () { return this.nodeType == 3 }).remove() }, defaults: { data: false, ajax: false, correct_state: true }, _fn: { load_node: function (obj, s_call, e_call) { var _this = this; this.load_node_html(obj, function () { _this.__callback({ "obj": obj }); s_call.call(this) }, e_call) }, _is_loaded: function (obj) { obj = this._get_node(obj); return obj == -1 || !obj || !this._get_settings().html_data.ajax || obj.is(".jstree-open, .jstree-leaf") || obj.children("ul").children("li").size() > 0 }, load_node_html: function (obj, s_call, e_call) { var d, s = this.get_settings().html_data, error_func = function () { }, success_func = function () { }; obj = this._get_node(obj); if (obj && obj !== -1) { if (obj.data("jstree-is-loading")) { return } else { obj.data("jstree-is-loading", true) } } switch (!0) { case (!s.data && !s.ajax): if (!obj || obj == -1) { this.get_container().children("ul").empty().append(this.data.html_data.original_container_html).find("li, a").filter(function () { return this.firstChild.tagName !== "INS" }).prepend("<ins class='jstree-icon'>&#160;</ins>").end().filter("a").children("ins:first-child").not(".jstree-icon").addClass("jstree-icon"); this.clean_node() } if (s_call) { s_call.call(this) } break; case (!!s.data && !s.ajax) || (!!s.data && !!s.ajax && (!obj || obj === -1)): if (!obj || obj == -1) { d = $(s.data); if (!d.is("ul")) { d = $("<ul>").append(d) } this.get_container().children("ul").empty().append(d.children()).find("li, a").filter(function () { return this.firstChild.tagName !== "INS" }).prepend("<ins class='jstree-icon'>&#160;</ins>").end().filter("a").children("ins:first-child").not(".jstree-icon").addClass("jstree-icon"); this.clean_node() } if (s_call) { s_call.call(this) } break; case (!s.data && !!s.ajax) || (!!s.data && !!s.ajax && obj && obj !== -1): obj = this._get_node(obj); error_func = function (x, t, e) { var ef = this.get_settings().html_data.ajax.error; if (ef) { ef.call(this, x, t, e) } if (obj != -1 && obj.length) { obj.children(".jstree-loading").removeClass("jstree-loading"); obj.data("jstree-is-loading", false); if (t === "success" && s.correct_state) { obj.removeClass("jstree-open jstree-closed").addClass("jstree-leaf") } } else { if (t === "success" && s.correct_state) { this.get_container().children("ul").empty() } } if (e_call) { e_call.call(this) } }; success_func = function (d, t, x) { var sf = this.get_settings().html_data.ajax.success; if (sf) { d = sf.call(this, d, t, x) || d } if (d == "") { return error_func.call(this, x, t, "") } if (d) { d = $(d); if (!d.is("ul")) { d = $("<ul>").append(d) } if (obj == -1 || !obj) { this.get_container().children("ul").empty().append(d.children()).find("li, a").filter(function () { return this.firstChild.tagName !== "INS" }).prepend("<ins class='jstree-icon'>&#160;</ins>").end().filter("a").children("ins:first-child").not(".jstree-icon").addClass("jstree-icon") } else { obj.children(".jstree-loading").removeClass("jstree-loading"); obj.append(d).find("li, a").filter(function () { return this.firstChild.tagName !== "INS" }).prepend("<ins class='jstree-icon'>&#160;</ins>").end().filter("a").children("ins:first-child").not(".jstree-icon").addClass("jstree-icon"); obj.data("jstree-is-loading", false) } this.clean_node(obj); if (s_call) { s_call.call(this) } } else { if (obj && obj !== -1) { obj.children(".jstree-loading").removeClass("jstree-loading"); obj.data("jstree-is-loading", false); if (s.correct_state) { obj.removeClass("jstree-open jstree-closed").addClass("jstree-leaf"); if (s_call) { s_call.call(this) } } } else { if (s.correct_state) { this.get_container().children("ul").empty(); if (s_call) { s_call.call(this) } } } } }; s.ajax.context = this; s.ajax.error = error_func; s.ajax.success = success_func; if (!s.ajax.dataType) { s.ajax.dataType = "html" } if ($.isFunction(s.ajax.url)) { s.ajax.url = s.ajax.url.call(this, obj) } if ($.isFunction(s.ajax.data)) { s.ajax.data = s.ajax.data.call(this, obj) } $.ajax(s.ajax); break } } } }); $.jstree.defaults.plugins.push("html_data") })(jQuery); (function ($) { $.jstree.plugin("themeroller", { __init: function () { var s = this._get_settings().themeroller; this.get_container().addClass("ui-widget-content").delegate("a", "mouseenter.jstree", function () { $(this).addClass(s.item_h) }).delegate("a", "mouseleave.jstree", function () { $(this).removeClass(s.item_h) }).bind("open_node.jstree create_node.jstree", $.proxy(function (e, data) { this._themeroller(data.rslt.obj) }, this)).bind("loaded.jstree refresh.jstree", $.proxy(function (e) { this._themeroller() }, this)).bind("close_node.jstree", $.proxy(function (e, data) { data.rslt.obj.children("ins").removeClass(s.opened).addClass(s.closed) }, this)).bind("select_node.jstree", $.proxy(function (e, data) { data.rslt.obj.children("a").addClass(s.item_a) }, this)).bind("deselect_node.jstree deselect_all.jstree", $.proxy(function (e, data) { this.get_container().find("." + s.item_a).removeClass(s.item_a).end().find(".jstree-clicked").addClass(s.item_a) }, this)).bind("move_node.jstree", $.proxy(function (e, data) { this._themeroller(data.rslt.o) }, this)) }, __destroy: function () { var s = this._get_settings().themeroller, c = ["ui-icon"]; $.each(s, function (i, v) { v = v.split(" "); if (v.length) { c = c.concat(v) } }); this.get_container().removeClass("ui-widget-content").find("." + c.join(", .")).removeClass(c.join(" ")) }, _fn: { _themeroller: function (obj) { var s = this._get_settings().themeroller; obj = !obj || obj == -1 ? this.get_container() : this._get_node(obj).parent(); obj.find("li.jstree-closed > ins.jstree-icon").removeClass(s.opened).addClass("ui-icon " + s.closed).end().find("li.jstree-open > ins.jstree-icon").removeClass(s.closed).addClass("ui-icon " + s.opened).end().find("a").addClass(s.item).children("ins.jstree-icon").addClass("ui-icon " + s.item_icon) } }, defaults: { "opened": "ui-icon-triangle-1-se", "closed": "ui-icon-triangle-1-e", "item": "ui-state-default", "item_h": "ui-state-hover", "item_a": "ui-state-active", "item_icon": "ui-icon-folder-collapsed"} }); $(function () { var css_string = '.jstree .ui-icon { overflow:visible; } .jstree a { padding:0 2px; }'; $.vakata.css.add_sheet({ str: css_string }) }) })(jQuery); (function ($) { $.jstree.plugin("unique", { __init: function () { this.get_container().bind("before.jstree", $.proxy(function (e, data) { var nms = [], res = true, p, t; if (data.func == "move_node") { if (data.args[4] === true) { if (data.args[0].o && data.args[0].o.length) { data.args[0].o.children("a").each(function () { nms.push($(this).text().replace(/^\s+/g, "")) }); res = this._check_unique(nms, data.args[0].np.find("> ul > li").not(data.args[0].o)) } } } if (data.func == "create_node") { if (data.args[4] || this._is_loaded(data.args[0])) { p = this._get_node(data.args[0]); if (data.args[1] && (data.args[1] === "before" || data.args[1] === "after")) { p = this._get_parent(data.args[0]); if (!p || p === -1) { p = this.get_container() } } if (typeof data.args[2] === "string") { nms.push(data.args[2]) } else if (!data.args[2] || !data.args[2].data) { nms.push(this._get_settings().core.strings.new_node) } else { nms.push(data.args[2].data) } res = this._check_unique(nms, p.find("> ul > li")) } } if (data.func == "rename_node") { nms.push(data.args[1]); t = this._get_node(data.args[0]); p = this._get_parent(t); if (!p || p === -1) { p = this.get_container() } res = this._check_unique(nms, p.find("> ul > li").not(t)) } if (!res) { e.stopPropagation(); return false } }, this)) }, _fn: { _check_unique: function (nms, p) { var cnms = []; p.children("a").each(function () { cnms.push($(this).text().replace(/^\s+/g, "")) }); if (!cnms.length || !nms.length) { return true } cnms = cnms.sort().join(",,").replace(/(,|^)([^,]+)(,,\2)+(,|$)/g, "$1$2$4").replace(/,,+/g, ",").replace(/,$/, "").split(","); if ((cnms.length + nms.length) != cnms.concat(nms).sort().join(",,").replace(/(,|^)([^,]+)(,,\2)+(,|$)/g, "$1$2$4").replace(/,,+/g, ",").replace(/,$/, "").split(",").length) { return false } return true }, check_move: function () { if (!this.__call_old()) { return false } var p = this._get_move(), nms = []; if (p.o && p.o.length) { p.o.children("a").each(function () { nms.push($(this).text().replace(/^\s+/g, "")) }); return this._check_unique(nms, p.np.find("> ul > li").not(p.o)) } return true } } }) })(jQuery);

/*** idTabs ***/
(function () {
    var dep = { "jQuery": "http://code.jquery.com/jquery-latest.min.js" }; var init = function () {

        (function ($) {
            $.fn.idTabs = function () {
                var s = {}; for (var i = 0; i < arguments.length; ++i) { var a = arguments[i]; switch (a.constructor) { case Object: $.extend(s, a); break; case Boolean: s.change = a; break; case Number: s.start = a; break; case Function: s.click = a; break; case String: if (a.charAt(0) == '.') s.selected = a; else if (a.charAt(0) == '!') s.event = a; else s.start = a; break; } }
                if (typeof s['return'] == "function")
                    s.change = s['return']; return this.each(function () { $.idTabs(this, s); });
            }

            $.idTabs = function (tabs, options) {
                var meta = ($.metadata) ? $(tabs).metadata() : {}; var s = $.extend({}, $.idTabs.settings, meta, options); if (s.selected.charAt(0) == '.') s.selected = s.selected.substr(1); if (s.event.charAt(0) == '!') s.event = s.event.substr(1); if (s.start == null) s.start = -1; var showId = function () {
                    if ($(this).is('.' + s.selected))
                        return s.change; var id = "#" + this.href.split('#')[1]; var aList = []; var idList = []; $("a", tabs).each(function () { if (this.href.match(/#/)) { aList.push(this); idList.push("#" + this.href.split('#')[1]); } }); if (s.click && !s.click.apply(this, [id, idList, tabs, s])) return s.change; for (i in aList) $(aList[i]).removeClass(s.selected); for (i in idList) $(idList[i]).hide(); $(this).addClass(s.selected); $(id).show(); return s.change;
                }

                var list = $("a[href*='#']", tabs).unbind(s.event, showId).bind(s.event, showId); list.each(function () { $("#" + this.href.split('#')[1]).hide(); }); var test = false; if ((test = list.filter('.' + s.selected)).length); else if (typeof s.start == "number" && (test = list.eq(s.start)).length); else if (typeof s.start == "string" && (test = list.filter("[href*='#" + s.start + "']")).length); if (test) { test.removeClass(s.selected); test.trigger(s.event); }
                return s;
            }


            $.idTabs.settings = { start: 0, change: false, click: null, selected: ".selected", event: "!click" }; $.idTabs.version = "2.2"; $(function () { $(".idTabs").idTabs(); });
        })(jQuery);
    }

    var check = function (o, s) { s = s.split('.'); while (o && s.length) o = o[s.shift()]; return o; }
    var head = document.getElementsByTagName("head")[0]; var add = function (url) { var s = document.createElement("script"); s.type = "text/javascript"; s.src = url; head.appendChild(s); }
    var s = document.getElementsByTagName('script'); var src = s[s.length - 1].src; var ok = true; for (d in dep) { if (check(this, d)) continue; ok = false; add(dep[d]); } if (ok) return init(); add(src);
})();


var mx_mainmenu_selected_menu = null;
var mx_mainmenu_menu_timeout = null;
$(document).ready(function () {
    /*** Build Slide Menu ***/
    buildSlideMenu();

    /*** Top Slide Menu ***/
    $("#open").click(function () { $("div#mx_panel").slideDown("slow"); });
    $("#close").click(function () { $("div#mx_panel").slideUp("slow"); });
    $("#mx_toggle a").click(function () { $("#mx_toggle a").toggle(); });

    /*** Main Menu ***/
    /*
    if ($.browser.msie && $.browser.version == 9) {
    var h = $('#mx_mainmenu').height();
    h = h - 2;

    $('#mx_mainmenu').css('height', h + 'px');
    }
    else {
    if ($.browser.msie || $.browser.opera) {
    var h = $('#mx_mainmenu').height();
    h = h - 1;

    $('#mx_mainmenu').css('height', h + 'px');
    }

    }
    */
    var h = $('#mx_mainmenu').height();
    h = h - 2;
    $('#mx_mainmenu').css('height', h + 'px');




    $('#mx_mainmenu_ui>li>span').mouseover(function () {
        var next = $(this).next();
        if (next != null) {
            if (next[0] != null) {
                var nextTagName = next[0].tagName;
                if (nextTagName == "DIV")
                    mx_showmainMenu($(this));
            }
        }
    });
    $('#mx_mainmenu_dropdown').click(function (event) {
        var targetEle = event.target.nodeName;
        targetEle = $(event.target).attr('type');
        return !(targetEle == 'text');
    });
    $(document).click(function (event) {
        mx_hidemainMenu();
        var targetEle = event.target.id;
        if (!(targetEle == 'open' || targetEle == 'close')) {
            if ($('div#mx_panel').css('display') == 'block') {
                $('div#mx_panel').slideUp('slow');
                $("#mx_toggle a").toggle();
            }
        }
    });

    /*** Icons ***/
    $('[class^="mx_icon_"]').each(function () {
        var className = $(this).attr('class');
        var iconName = className.substr(8);
        var cssStyle = 'url(images/icons/sm_lk' + iconName + '.png) no-repeat 10px 50%';
        $(this).css('background', cssStyle);
        $(this).mouseover(function () {
            $(this).css('background-color', '#f3f3f3');
        });
        $(this).mouseout(function () {
            $(this).css('background-color', 'white');
        });
    });


    /*** VMenu ***/
    $(".mx_vmenu_list p.mx_vmenu_head").click(function () {
        $(this).next("div.mx_vmenu_body").slideDown(500).siblings("div.mx_vmenu_body").slideUp("slow");
        //$(this).siblings().css({ backgroundImage: "url(left.png)" });
    });
    //Show first VMenu
    $(".mx_vmenu_list").next("p.mx_vmenu_head").next("div.mx_vmenu_body").slideDown(500).siblings("div.mx_vmenu_body").slideUp("slow");

    /****** Setup Datepicker ***/
    $('.mx_datepicker').datepick({
        dateFormat: 'MM d, yyyy',
        yearRange: 'c-50:c+10',
        minDate: new Date(1900, 1 - 1, 1),
        maxDate: new Date(9999, 1 - 1, 1)
    });

    /******** Setup Tabs *******/
    $(".mx_tabs ul").idTabs();

    /******** Setup Tree ******/
    $('.mx_tree_checkbox').jstree({
        "plugins": ["themes", "html_data", "checkbox"],

        "themes": {
            "theme": "default",
            "url": "https://sso.malink.ca:8110/resource/public/js/mx_tree/themes/default/style.css"
        }
    });

    $('.mx_tree_folder').jstree({
        "plugins": ["themes", "html_data", "ui"],

        "themes": {
            "theme": "default",
            "url": "https://sso.malink.ca:8110/resource/public/js/mx_tree/themes/default/style.css"
        }
    });

    /******* Setup Tabel ******/
    if ($('#xTable') != null) {
        $('#xTable').dataTable({
            "bProcessing": false,
            "bJQueryUI": true,
            "bAutoWidth": true,
            "iDisplayLength": 10,
            "aLengthMenu": [[10, 25, 50, 100, -1], [10, 25, 50, 100, JS_RESOURCES.allEntries]],
            "sPaginationType": "full_numbers"
        });
    }



    $('.mx_info').click(function () { $(this).fadeOut(500); });

    $('.mx_button_submit').click(function () {
        var _frm = $(this).parents('form:first');
        _frm.submit();
        return false;
    });

    $('.xDelBtn').click(function () {
        return confirm('Are you sure?');
    });
    CKEditInit();
});

function CKEditInit() {

    var eles = $('.MX_EDITOR_BASIC');
    eles.each(function (index) {
        var eleId = $(this).attr('id');

        try {
            CKEDITOR.replace(eleId, {
                filebrowserImageUploadUrl: '/Broker/upload',
                skin: 'v2',
                resize_minWidth: 200,
                resize_minHeight: 200,
                removePlugins: 'elementspath',
                enterMode: CKEDITOR.ENTER_BR,
                toolbarCanCollapse: false,
                toolbar:
		      [
		      	['Source', '-', 'Font', 'FontSize', '-', 'Bold', 'Italic', 'Strike', 'TextColor', 'BGColor', '-', 'Link', 'Unlink', '-', 'Image']
		      ]
            });
        } catch (err) { }
    });


    eles = $('.MX_EDITOR_FULL');
    eles.each(function (index) {
        var eleId = $(this).attr('id');

        try {
            CKEDITOR.replace(eleId, {
                filebrowserImageUploadUrl: '/Broker/upload',
                skin: 'v2',
                resize_minWidth: 200,
                resize_minHeight: 200,
                removePlugins: 'elementspath',
                enterMode: CKEDITOR.ENTER_BR,
                toolbarCanCollapse: false,
                toolbar:
		      [
		      	['Source', '-', 'Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo', '-',
		      	'Scayt', '-',
		      	 'Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', '-', 'RemoveFormat',
		      	  'NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-',
		      	  'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock', '-',
		      	  'Link', 'Unlink',
		      	  'Image', 'Table', 'HorizontalRule', 'SpecialChar', '-',
		      	'Styles', 'Format', '-', 'Font', 'FontSize', '-',
		      	'TextColor', 'BGColor']
		      ]
            });
        } catch (err) { }
    });

}

function mx_showmainMenu(ele) {
    var html = ele.next().html();
    $('#mx_mainmenu_ui>li>span').removeClass('mx_mainmenu_active');

    if (html != '') {
        ele.addClass('mx_mainmenu_active');
        $('#mx_mainmenu_dropdown').html(html);

        var moffset = ele.offset();
        var mtop = moffset.top + 35;


        var mwidth = $('#mx_mainmenu_dropdown').width();
        var eleWidth = ele.width();
        var mleft = moffset.left;
        if (mleft + mwidth > $(document).width()) {
            mleft = mleft - mwidth + eleWidth;
        }

        mx_mainmenu_selected_menu = ele;

        $('#mx_mainmenu_dropdown').css({
            'top': mtop,
            'left': mleft,
            'max-height': 350,
            'overflow-y': 'auto'
        });
        $('#mx_mainmenu_dropdown').show();
    }
    else {
        mx_hidemainMenu();
    }
}

function mx_starthidemainMenu() {
    mx_mainmenu_menu_timeout = window.setTimeout(function () { mx_hidemainMenu(); }, 1000);
}

function mx_hidemainMenu() {
    if (mx_mainmenu_selected_menu) {
        mx_mainmenu_selected_menu.removeClass('mx_mainmenu_active');
        $('#mx_mainmenu_dropdown').hide();
    }
}


function buildSlideMenu() {
    if (typeof (_mx_plain_page) != 'undefined') return;
    var h = '<div id="mx_toppanel"><div id="mx_panel"><div class="content clearfix"><div class="left"><b></b></div><div class="left"><div class="mx_panel_nav">';
    if (_mx_applications != null) {
        for (i = 0; i < _mx_applications.length; i++) {
            if (_mx_applications[i][1] != null && _mx_applications[i][0] != null)
                h += '<a href="' + _mx_applications[i][1] + '">' + _mx_applications[i][0] + '</a> | ';
        }
    }

    if (_mx_logout_url.indexOf('pilot.malink.ca') > 0)
        h += '<a href="' + _mx_my_account_url + '">' + "My Account" + '</a> | ';

    h += '<a href="' + _mx_logout_url + '">' + "Log out" + '</a>';
    h += '</div></div></div></div><div class="mx_tab">';
    h += '<ul class="login"><li class="left">&nbsp;</li><li id="mx_toggle"><a id="open" class="open" href="#">' + JS_RESOURCES.WelcomeMsg + '&nbsp;' + _mx_full_name + '</a><a id="close" style="display: none;" class="close" href="#">' + JS_RESOURCES.WelcomeMsg + '&nbsp;' + _mx_full_name + '</a></li><li class="right">&nbsp;</li></ul></div></div>';
    $(h).prependTo('body');
}



